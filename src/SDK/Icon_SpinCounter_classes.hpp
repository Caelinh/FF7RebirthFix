#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Icon_SpinCounter

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Icon_SpinCounter.Icon_SpinCounter_C
// 0x0030 (0x03F8 - 0x03C8)
class UIcon_SpinCounter_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Icon;                                              // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndPieImage*                           Icon_Add;                                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndPieImage*                           Icon_Pie_Add;                                      // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light;                                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Icon_SpinCounter_C">();
	}
	static class UIcon_SpinCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UIcon_SpinCounter_C>();
	}
};
static_assert(alignof(UIcon_SpinCounter_C) == 0x000008, "Wrong alignment on UIcon_SpinCounter_C");
static_assert(sizeof(UIcon_SpinCounter_C) == 0x0003F8, "Wrong size on UIcon_SpinCounter_C");
static_assert(offsetof(UIcon_SpinCounter_C, Out) == 0x0003C8, "Member 'UIcon_SpinCounter_C::Out' has a wrong offset!");
static_assert(offsetof(UIcon_SpinCounter_C, In) == 0x0003D0, "Member 'UIcon_SpinCounter_C::In' has a wrong offset!");
static_assert(offsetof(UIcon_SpinCounter_C, Icon) == 0x0003D8, "Member 'UIcon_SpinCounter_C::Icon' has a wrong offset!");
static_assert(offsetof(UIcon_SpinCounter_C, Icon_Add) == 0x0003E0, "Member 'UIcon_SpinCounter_C::Icon_Add' has a wrong offset!");
static_assert(offsetof(UIcon_SpinCounter_C, Icon_Pie_Add) == 0x0003E8, "Member 'UIcon_SpinCounter_C::Icon_Pie_Add' has a wrong offset!");
static_assert(offsetof(UIcon_SpinCounter_C, Light) == 0x0003F0, "Member 'UIcon_SpinCounter_C::Light' has a wrong offset!");

}

