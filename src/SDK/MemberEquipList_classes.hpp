#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MemberEquipList

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MemberEquipList.MemberEquipList_C
// 0x0050 (0x1D00 - 0x1CB0)
class UMemberEquipList_C final : public UEndMemberEquipList
{
public:
	class UWidgetAnimation*                       In;                                                // 0x1CB0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Effect;                                            // 0x1CB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_1;                                          // 0x1CC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_2;                                          // 0x1CC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_02;                                         // 0x1CD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line;                                              // 0x1CD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line2;                                             // 0x1CE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line3;                                             // 0x1CE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring1;                                             // 0x1CF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring2;                                             // 0x1CF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MemberEquipList_C">();
	}
	static class UMemberEquipList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMemberEquipList_C>();
	}
};
static_assert(alignof(UMemberEquipList_C) == 0x000008, "Wrong alignment on UMemberEquipList_C");
static_assert(sizeof(UMemberEquipList_C) == 0x001D00, "Wrong size on UMemberEquipList_C");
static_assert(offsetof(UMemberEquipList_C, In) == 0x001CB0, "Member 'UMemberEquipList_C::In' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_C, Effect) == 0x001CB8, "Member 'UMemberEquipList_C::Effect' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_C, Effect_1) == 0x001CC0, "Member 'UMemberEquipList_C::Effect_1' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_C, Effect_2) == 0x001CC8, "Member 'UMemberEquipList_C::Effect_2' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_C, Effect_02) == 0x001CD0, "Member 'UMemberEquipList_C::Effect_02' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_C, Line) == 0x001CD8, "Member 'UMemberEquipList_C::Line' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_C, Line2) == 0x001CE0, "Member 'UMemberEquipList_C::Line2' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_C, Line3) == 0x001CE8, "Member 'UMemberEquipList_C::Line3' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_C, Ring1) == 0x001CF0, "Member 'UMemberEquipList_C::Ring1' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_C, Ring2) == 0x001CF8, "Member 'UMemberEquipList_C::Ring2' has a wrong offset!");

}

