#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MobPrefabTemplate_SimpleMove_01

#include "Basic.hpp"


namespace SDK::Params
{

// Function MobPrefabTemplate_SimpleMove_01.MobPrefabTemplate_SimpleMove_01_C.ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01
// 0x0028 (0x0028 - 0x0000)
struct MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddEmptyConditionCommand_ReturnValue;     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddAllowContactExecuteCommand_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01) == 0x000004, "Wrong alignment on MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01");
static_assert(sizeof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01) == 0x000028, "Wrong size on MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01, EntryPoint) == 0x000000, "Member 'MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01, Temp_int_Array_Index_Variable) == 0x000008, "Member 'MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01, CallFunc_Array_Get_Item) == 0x000010, "Member 'MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01, CallFunc_AddEmptyConditionCommand_ReturnValue) == 0x000020, "Member 'MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01::CallFunc_AddEmptyConditionCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01, CallFunc_AddAllowContactExecuteCommand_ReturnValue) == 0x000024, "Member 'MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01::CallFunc_AddAllowContactExecuteCommand_ReturnValue' has a wrong offset!");

// Function MobPrefabTemplate_SimpleMove_01.MobPrefabTemplate_SimpleMove_01_C.Initialize
// 0x0080 (0x0080 - 0x0000)
struct MobPrefabTemplate_SimpleMove_01_C_Initialize final
{
public:
	class FName                                   MobId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CharacterClass;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   LoopMotionName;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LoopMotionBlendFilter;                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   AttachActor;                                       // 0x0040(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   AttachSocketName;                                  // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimSetName;                                       // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MobPrefabTemplate_SimpleMove_01_C_Initialize) == 0x000008, "Wrong alignment on MobPrefabTemplate_SimpleMove_01_C_Initialize");
static_assert(sizeof(MobPrefabTemplate_SimpleMove_01_C_Initialize) == 0x000080, "Wrong size on MobPrefabTemplate_SimpleMove_01_C_Initialize");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_Initialize, MobId) == 0x000000, "Member 'MobPrefabTemplate_SimpleMove_01_C_Initialize::MobId' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_Initialize, CharacterClass) == 0x000008, "Member 'MobPrefabTemplate_SimpleMove_01_C_Initialize::CharacterClass' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_Initialize, LoopMotionName) == 0x000030, "Member 'MobPrefabTemplate_SimpleMove_01_C_Initialize::LoopMotionName' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_Initialize, LoopMotionBlendFilter) == 0x000038, "Member 'MobPrefabTemplate_SimpleMove_01_C_Initialize::LoopMotionBlendFilter' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_Initialize, AttachActor) == 0x000040, "Member 'MobPrefabTemplate_SimpleMove_01_C_Initialize::AttachActor' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_Initialize, AttachSocketName) == 0x000068, "Member 'MobPrefabTemplate_SimpleMove_01_C_Initialize::AttachSocketName' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_Initialize, AnimSetName) == 0x000070, "Member 'MobPrefabTemplate_SimpleMove_01_C_Initialize::AnimSetName' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_Initialize, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000078, "Member 'MobPrefabTemplate_SimpleMove_01_C_Initialize::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_SimpleMove_01_C_Initialize, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000079, "Member 'MobPrefabTemplate_SimpleMove_01_C_Initialize::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

}

