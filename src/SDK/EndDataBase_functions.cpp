#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EndDataBase

#include "Basic.hpp"

#include "EndDataBase_classes.hpp"
#include "EndDataBase_parameters.hpp"


namespace SDK
{

// Function EndDataBase.EndBattleCountAPI.GetBattleCountLogBoolByBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ownerCharaName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             subTypeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             territoryID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndBattleCountAPI::GetBattleCountLogBoolByBP(class FName ownerCharaName, EEndBattleCountLogType Type, class FName TargetCharaName, class FName subTypeName, class FName territoryID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleCountAPI", "GetBattleCountLogBoolByBP");

	Params::EndBattleCountAPI_GetBattleCountLogBoolByBP Parms{};

	Parms.ownerCharaName = ownerCharaName;
	Parms.Type = Type;
	Parms.TargetCharaName = TargetCharaName;
	Parms.subTypeName = subTypeName;
	Parms.territoryID = territoryID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndBattleCountAPI.GetBattleCountLogFloatByBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ownerCharaName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             subTypeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             territoryID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndBattleCountAPI::GetBattleCountLogFloatByBP(class FName ownerCharaName, EEndBattleCountLogType Type, class FName TargetCharaName, class FName subTypeName, class FName territoryID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleCountAPI", "GetBattleCountLogFloatByBP");

	Params::EndBattleCountAPI_GetBattleCountLogFloatByBP Parms{};

	Parms.ownerCharaName = ownerCharaName;
	Parms.Type = Type;
	Parms.TargetCharaName = TargetCharaName;
	Parms.subTypeName = subTypeName;
	Parms.territoryID = territoryID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndBattleCountAPI.GetBattleCountLogIntByBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ownerCharaName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndBattleCountLogType                  Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetCharaName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             subTypeName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             territoryID                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndBattleCountAPI::GetBattleCountLogIntByBP(class FName ownerCharaName, EEndBattleCountLogType Type, class FName TargetCharaName, class FName subTypeName, class FName territoryID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndBattleCountAPI", "GetBattleCountLogIntByBP");

	Params::EndBattleCountAPI_GetBattleCountLogIntByBP Parms{};

	Parms.ownerCharaName = ownerCharaName;
	Parms.Type = Type;
	Parms.TargetCharaName = TargetCharaName;
	Parms.subTypeName = subTypeName;
	Parms.territoryID = territoryID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.EnemyBook_IncrementKillCount_BP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             enemyBookTableId                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::EnemyBook_IncrementKillCount_BP(class FName enemyBookTableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "EnemyBook_IncrementKillCount_BP");

	Params::EndDataBaseDataBaseAPI_EnemyBook_IncrementKillCount_BP Parms{};

	Parms.enemyBookTableId = enemyBookTableId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetChapterProgress
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseDataBaseAPI::GetChapterProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetChapterProgress");

	Params::EndDataBaseDataBaseAPI_GetChapterProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetDebugChapterID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataBaseDataBaseAPI::GetDebugChapterID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetDebugChapterID");

	Params::EndDataBaseDataBaseAPI_GetDebugChapterID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetDefaultBattleLeaderTypeBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerType UEndDataBaseDataBaseAPI::GetDefaultBattleLeaderTypeBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetDefaultBattleLeaderTypeBP");

	Params::EndDataBaseDataBaseAPI_GetDefaultBattleLeaderTypeBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetDefaultPartyLeaderTypeBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlayerType UEndDataBaseDataBaseAPI::GetDefaultPartyLeaderTypeBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetDefaultPartyLeaderTypeBP");

	Params::EndDataBaseDataBaseAPI_GetDefaultPartyLeaderTypeBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetItemNumBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   UniqueId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseDataBaseAPI::GetItemNumBP(int32 UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetItemNumBP");

	Params::EndDataBaseDataBaseAPI_GetItemNumBP Parms{};

	Parms.UniqueId = UniqueId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetLocationWorkFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LocationWorkID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndDataBaseDataBaseAPI::GetLocationWorkFloat(class FName LocationWorkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetLocationWorkFloat");

	Params::EndDataBaseDataBaseAPI_GetLocationWorkFloat Parms{};

	Parms.LocationWorkID = LocationWorkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetLocationWorkInteger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LocationWorkID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseDataBaseAPI::GetLocationWorkInteger(class FName LocationWorkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetLocationWorkInteger");

	Params::EndDataBaseDataBaseAPI_GetLocationWorkInteger Parms{};

	Parms.LocationWorkID = LocationWorkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetPlayerPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UEndDataBaseDataBaseAPI::GetPlayerPosition(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetPlayerPosition");

	Params::EndDataBaseDataBaseAPI_GetPlayerPosition Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetPlayerRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UEndDataBaseDataBaseAPI::GetPlayerRotation(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetPlayerRotation");

	Params::EndDataBaseDataBaseAPI_GetPlayerRotation Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetResidentWorkFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ResidentWorkID                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndDataBaseDataBaseAPI::GetResidentWorkFloat(const class FName ResidentWorkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetResidentWorkFloat");

	Params::EndDataBaseDataBaseAPI_GetResidentWorkFloat Parms{};

	Parms.ResidentWorkID = ResidentWorkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetResidentWorkInteger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ResidentWorkID                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseDataBaseAPI::GetResidentWorkInteger(const class FName ResidentWorkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetResidentWorkInteger");

	Params::EndDataBaseDataBaseAPI_GetResidentWorkInteger Parms{};

	Parms.ResidentWorkID = ResidentWorkID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetTestPlayModeTableID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UEndDataBaseDataBaseAPI::GetTestPlayModeTableID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetTestPlayModeTableID");

	Params::EndDataBaseDataBaseAPI_GetTestPlayModeTableID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.GetUpdatePlayTimeFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseDataBaseAPI::GetUpdatePlayTimeFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "GetUpdatePlayTimeFlag");

	Params::EndDataBaseDataBaseAPI_GetUpdatePlayTimeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge00
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge00()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge00");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge01
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge01()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge01");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge02
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge02()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge02");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge03
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge03()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge03");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge04
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge04()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge04");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge05
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge05()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge05");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge06
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge06()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge06");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge07
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge07()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge07");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge08
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge08()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge08");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.Hoge09
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::Hoge09()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "Hoge09");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.IsClassic
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseDataBaseAPI::IsClassic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "IsClassic");

	Params::EndDataBaseDataBaseAPI_IsClassic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.IsDebugPartyList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseDataBaseAPI::IsDebugPartyList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "IsDebugPartyList");

	Params::EndDataBaseDataBaseAPI_IsDebugPartyList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.IsDifficulty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDifficultyType                         Difficulty                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseDataBaseAPI::IsDifficulty(EDifficultyType Difficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "IsDifficulty");

	Params::EndDataBaseDataBaseAPI_IsDifficulty Parms{};

	Parms.Difficulty = Difficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.IsFinishStreamMateriaModel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseDataBaseAPI::IsFinishStreamMateriaModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "IsFinishStreamMateriaModel");

	Params::EndDataBaseDataBaseAPI_IsFinishStreamMateriaModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.IsStoryFlag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             StoryFlagId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseDataBaseAPI::IsStoryFlag(const class FName& StoryFlagId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "IsStoryFlag");

	Params::EndDataBaseDataBaseAPI_IsStoryFlag Parms{};

	Parms.StoryFlagId = StoryFlagId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetDebugChapterID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           DebugChapterID                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetDebugChapterID(const class FString& DebugChapterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetDebugChapterID");

	Params::EndDataBaseDataBaseAPI_SetDebugChapterID Parms{};

	Parms.DebugChapterID = std::move(DebugChapterID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetDefaultBattleLeaderTypeBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetDefaultBattleLeaderTypeBP(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetDefaultBattleLeaderTypeBP");

	Params::EndDataBaseDataBaseAPI_SetDefaultBattleLeaderTypeBP Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetDefaultPartyLeaderTypeBP
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EPlayerType                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetDefaultPartyLeaderTypeBP(EPlayerType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetDefaultPartyLeaderTypeBP");

	Params::EndDataBaseDataBaseAPI_SetDefaultPartyLeaderTypeBP Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetLocationWorkFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LocationWorkID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetLocationWorkFloat(class FName LocationWorkID, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetLocationWorkFloat");

	Params::EndDataBaseDataBaseAPI_SetLocationWorkFloat Parms{};

	Parms.LocationWorkID = LocationWorkID;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetLocationWorkInteger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             LocationWorkID                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetLocationWorkInteger(class FName LocationWorkID, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetLocationWorkInteger");

	Params::EndDataBaseDataBaseAPI_SetLocationWorkInteger Parms{};

	Parms.LocationWorkID = LocationWorkID;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetResidentWorkFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ResidentWorkID                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetResidentWorkFloat(const class FName ResidentWorkID, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetResidentWorkFloat");

	Params::EndDataBaseDataBaseAPI_SetResidentWorkFloat Parms{};

	Parms.ResidentWorkID = ResidentWorkID;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetResidentWorkInteger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ResidentWorkID                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetResidentWorkInteger(const class FName ResidentWorkID, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetResidentWorkInteger");

	Params::EndDataBaseDataBaseAPI_SetResidentWorkInteger Parms{};

	Parms.ResidentWorkID = ResidentWorkID;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetStoryFlagBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             StoryFlagId                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetStoryFlagBP(const class FName& StoryFlagId, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetStoryFlagBP");

	Params::EndDataBaseDataBaseAPI_SetStoryFlagBP Parms{};

	Parms.StoryFlagId = StoryFlagId;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetTestPlayModeTableID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             setTableID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetTestPlayModeTableID(class FName setTableID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetTestPlayModeTableID");

	Params::EndDataBaseDataBaseAPI_SetTestPlayModeTableID Parms{};

	Parms.setTableID = setTableID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.SetupInitialParameter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             debugPartyListDataTableId                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataBaseAPI::SetupInitialParameter(class FName debugPartyListDataTableId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "SetupInitialParameter");

	Params::EndDataBaseDataBaseAPI_SetupInitialParameter Parms{};

	Parms.debugPartyListDataTableId = debugPartyListDataTableId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.StartPlayTime
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::StartPlayTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "StartPlayTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.StartStreamMateriaModel
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::StartStreamMateriaModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "StartStreamMateriaModel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataBaseAPI.StopPlayTime
// (Final, Native, Static, Public, BlueprintCallable)

void UEndDataBaseDataBaseAPI::StopPlayTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataBaseAPI", "StopPlayTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.ClearDebugFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndDataObjectDebugFlag                 Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataObjectAPI::ClearDebugFlag(EEndDataObjectDebugFlag Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "ClearDebugFlag");

	Params::EndDataBaseDataObjectAPI_ClearDebugFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetActorNameMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<EPlayerType, class FName>          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EPlayerType, class FName> UEndDataBaseDataObjectAPI::GetActorNameMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetActorNameMap");

	Params::EndDataBaseDataObjectAPI_GetActorNameMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetChapterList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           LocationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseDataObjectAPI::GetChapterList(const class FString& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetChapterList");

	Params::EndDataBaseDataObjectAPI_GetChapterList Parms{};

	Parms.LocationName = std::move(LocationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetDebugID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataBaseDataObjectAPI::GetDebugID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetDebugID");

	Params::EndDataBaseDataObjectAPI_GetDebugID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetEquipmentTypeList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<EEquipmentType>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EEquipmentType> UEndDataBaseDataObjectAPI::GetEquipmentTypeList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetEquipmentTypeList");

	Params::EndDataBaseDataObjectAPI_GetEquipmentTypeList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetFieldTestLocationNameDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bWithBack                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseDataObjectAPI::GetFieldTestLocationNameDetails(bool bWithBack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetFieldTestLocationNameDetails");

	Params::EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails Parms{};

	Parms.bWithBack = bWithBack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseDataObjectAPI::GetLocationDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetLocationDetails");

	Params::EndDataBaseDataObjectAPI_GetLocationDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationIdFromLocationWorkId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             dataObjectId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataBaseDataObjectAPI::GetLocationIdFromLocationWorkId(class FName dataObjectId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetLocationIdFromLocationWorkId");

	Params::EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId Parms{};

	Parms.dataObjectId = dataObjectId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationNameDetails
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseDataObjectAPI::GetLocationNameDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetLocationNameDetails");

	Params::EndDataBaseDataObjectAPI_GetLocationNameDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationNames
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseDataObjectAPI::GetLocationNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetLocationNames");

	Params::EndDataBaseDataObjectAPI_GetLocationNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationPresetList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           LocationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndDataBaseDataObjectAPI::GetLocationPresetList(const class FString& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetLocationPresetList");

	Params::EndDataBaseDataObjectAPI_GetLocationPresetList Parms{};

	Parms.LocationName = std::move(LocationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationSlotList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           LocationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseDataObjectAPI::GetLocationSlotList(const class FString& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetLocationSlotList");

	Params::EndDataBaseDataObjectAPI_GetLocationSlotList Parms{};

	Parms.LocationName = std::move(LocationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetPlayerTypeListSortFavPointBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EPlayerType>                     InList                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EEndFavPointSortType                    sortType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EPlayerType>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EPlayerType> UEndDataBaseDataObjectAPI::GetPlayerTypeListSortFavPointBP(const TArray<EPlayerType>& InList, EEndFavPointSortType sortType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetPlayerTypeListSortFavPointBP");

	Params::EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP Parms{};

	Parms.InList = std::move(InList);
	Parms.sortType = sortType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataBaseDataObjectAPI::GetResidentID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetResidentID");

	Params::EndDataBaseDataObjectAPI_GetResidentID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentParameterFloatBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UEndDataBaseDataObjectAPI::GetResidentParameterFloatBP(const class FName ID, float DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetResidentParameterFloatBP");

	Params::EndDataBaseDataObjectAPI_GetResidentParameterFloatBP Parms{};

	Parms.ID = ID;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentParameterIntegerBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UEndDataBaseDataObjectAPI::GetResidentParameterIntegerBP(const class FName ID, int32 DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetResidentParameterIntegerBP");

	Params::EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP Parms{};

	Parms.ID = ID;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentParameterNameBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataBaseDataObjectAPI::GetResidentParameterNameBP(const class FName ID, class FName DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetResidentParameterNameBP");

	Params::EndDataBaseDataObjectAPI_GetResidentParameterNameBP Parms{};

	Parms.ID = ID;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentParameterStringBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             ID                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           DefaultValue                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UEndDataBaseDataObjectAPI::GetResidentParameterStringBP(const class FName ID, const class FString& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetResidentParameterStringBP");

	Params::EndDataBaseDataObjectAPI_GetResidentParameterStringBP Parms{};

	Parms.ID = ID;
	Parms.DefaultValue = std::move(DefaultValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestCutSceneEnviSetNameList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   CutSceneNames                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseDataObjectAPI::GetTestCutSceneEnviSetNameList(const TArray<class FString>& CutSceneNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetTestCutSceneEnviSetNameList");

	Params::EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList Parms{};

	Parms.CutSceneNames = std::move(CutSceneNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestCutSceneNameList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           LocationName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UEndDataBaseDataObjectAPI::GetTestCutSceneNameList(const class FString& LocationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetTestCutSceneNameList");

	Params::EndDataBaseDataObjectAPI_GetTestCutSceneNameList Parms{};

	Parms.LocationName = std::move(LocationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestPlayModeSettingDataName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TableID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataBaseDataObjectAPI::GetTestPlayModeSettingDataName(const class FName& TableID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetTestPlayModeSettingDataName");

	Params::EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName Parms{};

	Parms.TableID = TableID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestPlayModeSettingDataObjectIds
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UEndDataBaseDataObjectAPI::GetTestPlayModeSettingDataObjectIds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetTestPlayModeSettingDataObjectIds");

	Params::EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataObjectIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestPlayModeTitleLocation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TableID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UEndDataBaseDataObjectAPI::GetTestPlayModeTitleLocation(const class FName& TableID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetTestPlayModeTitleLocation");

	Params::EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation Parms{};

	Parms.TableID = TableID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.GetWeaponNameMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<EPlayerType, class FName>          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<EPlayerType, class FName> UEndDataBaseDataObjectAPI::GetWeaponNameMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "GetWeaponNameMap");

	Params::EndDataBaseDataObjectAPI_GetWeaponNameMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.IsDebugFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndDataObjectDebugFlag                 Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseDataObjectAPI::IsDebugFlag(EEndDataObjectDebugFlag Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "IsDebugFlag");

	Params::EndDataBaseDataObjectAPI_IsDebugFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.IsExistDataObjectBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseDataObjectAPI::IsExistDataObjectBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "IsExistDataObjectBP");

	Params::EndDataBaseDataObjectAPI_IsExistDataObjectBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.IsExistDataObjectFromTypeBP
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDataObjectType                         Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEndDataBaseDataObjectAPI::IsExistDataObjectFromTypeBP(EDataObjectType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "IsExistDataObjectFromTypeBP");

	Params::EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EndDataBase.EndDataBaseDataObjectAPI.SetDebugFlag
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EEndDataObjectDebugFlag                 Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEndDataBaseDataObjectAPI::SetDebugFlag(EEndDataObjectDebugFlag Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("EndDataBaseDataObjectAPI", "SetDebugFlag");

	Params::EndDataBaseDataObjectAPI_SetDebugFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

