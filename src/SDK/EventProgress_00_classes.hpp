#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventProgress_00

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass EventProgress_00.EventProgress_00_C
// 0x0170 (0x0540 - 0x03D0)
class UEventProgress_00_C final : public UEndEventProgressDisplay
{
public:
	class UWidgetAnimation*                       ChildStory_Color2;                                 // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SubjugationList_Out;                               // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SubjugationList_In;                                // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Compleate_Out;                                     // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Compleate_In;                                      // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SideStory_Color2;                                  // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VR_Color;                                          // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Treasure_Color;                                    // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Retry_In;                                          // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Retry_Out;                                         // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WorldReport_Color;                                 // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TurnBackAlert_Loop;                                // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TurnBackAlert_Out;                                 // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TurnBackAlert_In;                                  // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BattleReport_Color2;                               // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BattleReport_Color;                                // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SubQuest_Color;                                    // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SideStory_Color;                                   // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChildStory_Color;                                  // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MainStory_Color;                                   // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base_PhotospotGuide;                               // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventProgress_Retry_Btn_C*             Btn_Retry;                                         // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventProgress_SubjugationList_Btn_C*   Btn_SubjugationList;                               // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_List_00;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_List_01;                                    // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Retry_00;                                   // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Retry_01;                                   // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_93;                                       // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventProgress_FeedChocobo_C*           FeedCocobo;                                        // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Update_C*                         Icon_Update;                                       // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_AlertEffect;                                   // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_AlertLine;                                     // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_AlertLineBG;                                   // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BottomBase;                                    // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BottomBase_00;                                 // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BottomBase_Add;                                // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_ListBase;                                      // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_RetryBase;                                     // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_TopBase_00;                                    // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_TopBase_Add;                                   // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Effect_00;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Icon;                                          // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventProgress_PlayerLevel_C*           PlayerLevel;                                       // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuest_RecommendLevel_C*                RecommendLevel;                                    // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EventProgress_00_C">();
	}
	static class UEventProgress_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventProgress_00_C>();
	}
};
static_assert(alignof(UEventProgress_00_C) == 0x000008, "Wrong alignment on UEventProgress_00_C");
static_assert(sizeof(UEventProgress_00_C) == 0x000540, "Wrong size on UEventProgress_00_C");
static_assert(offsetof(UEventProgress_00_C, ChildStory_Color2) == 0x0003D0, "Member 'UEventProgress_00_C::ChildStory_Color2' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, SubjugationList_Out) == 0x0003D8, "Member 'UEventProgress_00_C::SubjugationList_Out' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, SubjugationList_In) == 0x0003E0, "Member 'UEventProgress_00_C::SubjugationList_In' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Compleate_Out) == 0x0003E8, "Member 'UEventProgress_00_C::Compleate_Out' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Compleate_In) == 0x0003F0, "Member 'UEventProgress_00_C::Compleate_In' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, SideStory_Color2) == 0x0003F8, "Member 'UEventProgress_00_C::SideStory_Color2' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, VR_Color) == 0x000400, "Member 'UEventProgress_00_C::VR_Color' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Treasure_Color) == 0x000408, "Member 'UEventProgress_00_C::Treasure_Color' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Retry_In) == 0x000410, "Member 'UEventProgress_00_C::Retry_In' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Retry_Out) == 0x000418, "Member 'UEventProgress_00_C::Retry_Out' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, WorldReport_Color) == 0x000420, "Member 'UEventProgress_00_C::WorldReport_Color' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, TurnBackAlert_Loop) == 0x000428, "Member 'UEventProgress_00_C::TurnBackAlert_Loop' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, TurnBackAlert_Out) == 0x000430, "Member 'UEventProgress_00_C::TurnBackAlert_Out' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, TurnBackAlert_In) == 0x000438, "Member 'UEventProgress_00_C::TurnBackAlert_In' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, BattleReport_Color2) == 0x000440, "Member 'UEventProgress_00_C::BattleReport_Color2' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, BattleReport_Color) == 0x000448, "Member 'UEventProgress_00_C::BattleReport_Color' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, SubQuest_Color) == 0x000450, "Member 'UEventProgress_00_C::SubQuest_Color' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, SideStory_Color) == 0x000458, "Member 'UEventProgress_00_C::SideStory_Color' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, ChildStory_Color) == 0x000460, "Member 'UEventProgress_00_C::ChildStory_Color' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, MainStory_Color) == 0x000468, "Member 'UEventProgress_00_C::MainStory_Color' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Out) == 0x000470, "Member 'UEventProgress_00_C::Out' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, In) == 0x000478, "Member 'UEventProgress_00_C::In' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Base_PhotospotGuide) == 0x000480, "Member 'UEventProgress_00_C::Base_PhotospotGuide' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Btn_Retry) == 0x000488, "Member 'UEventProgress_00_C::Btn_Retry' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Btn_SubjugationList) == 0x000490, "Member 'UEventProgress_00_C::Btn_SubjugationList' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Effect_List_00) == 0x000498, "Member 'UEventProgress_00_C::Effect_List_00' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Effect_List_01) == 0x0004A0, "Member 'UEventProgress_00_C::Effect_List_01' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Effect_Retry_00) == 0x0004A8, "Member 'UEventProgress_00_C::Effect_Retry_00' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Effect_Retry_01) == 0x0004B0, "Member 'UEventProgress_00_C::Effect_Retry_01' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, EndImage_93) == 0x0004B8, "Member 'UEventProgress_00_C::EndImage_93' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, FeedCocobo) == 0x0004C0, "Member 'UEventProgress_00_C::FeedCocobo' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Icon_Update) == 0x0004C8, "Member 'UEventProgress_00_C::Icon_Update' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_AlertEffect) == 0x0004D0, "Member 'UEventProgress_00_C::Img_AlertEffect' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_AlertLine) == 0x0004D8, "Member 'UEventProgress_00_C::Img_AlertLine' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_AlertLineBG) == 0x0004E0, "Member 'UEventProgress_00_C::Img_AlertLineBG' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_BottomBase) == 0x0004E8, "Member 'UEventProgress_00_C::Img_BottomBase' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_BottomBase_00) == 0x0004F0, "Member 'UEventProgress_00_C::Img_BottomBase_00' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_BottomBase_Add) == 0x0004F8, "Member 'UEventProgress_00_C::Img_BottomBase_Add' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_ListBase) == 0x000500, "Member 'UEventProgress_00_C::Img_ListBase' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_RetryBase) == 0x000508, "Member 'UEventProgress_00_C::Img_RetryBase' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_TopBase_00) == 0x000510, "Member 'UEventProgress_00_C::Img_TopBase_00' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Img_TopBase_Add) == 0x000518, "Member 'UEventProgress_00_C::Img_TopBase_Add' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Ims_Effect_00) == 0x000520, "Member 'UEventProgress_00_C::Ims_Effect_00' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, Ims_Icon) == 0x000528, "Member 'UEventProgress_00_C::Ims_Icon' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, PlayerLevel) == 0x000530, "Member 'UEventProgress_00_C::PlayerLevel' has a wrong offset!");
static_assert(offsetof(UEventProgress_00_C, RecommendLevel) == 0x000538, "Member 'UEventProgress_00_C::RecommendLevel' has a wrong offset!");

}

