#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PartySet_Switch

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PartySet_Switch.PartySet_Switch_C
// 0x0050 (0x0438 - 0x03E8)
class UPartySet_Switch_C final : public UEndPartySetSwitch
{
public:
	class UWidgetAnimation*                       Disable;                                           // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BattleSettingColor;                                // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MemberChangeColor;                                 // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Normal;                                            // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NoActive;                                          // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseBg;                                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon;                                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Left;                                         // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Right;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PartySet_Switch_C">();
	}
	static class UPartySet_Switch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPartySet_Switch_C>();
	}
};
static_assert(alignof(UPartySet_Switch_C) == 0x000008, "Wrong alignment on UPartySet_Switch_C");
static_assert(sizeof(UPartySet_Switch_C) == 0x000438, "Wrong size on UPartySet_Switch_C");
static_assert(offsetof(UPartySet_Switch_C, Disable) == 0x0003E8, "Member 'UPartySet_Switch_C::Disable' has a wrong offset!");
static_assert(offsetof(UPartySet_Switch_C, BattleSettingColor) == 0x0003F0, "Member 'UPartySet_Switch_C::BattleSettingColor' has a wrong offset!");
static_assert(offsetof(UPartySet_Switch_C, MemberChangeColor) == 0x0003F8, "Member 'UPartySet_Switch_C::MemberChangeColor' has a wrong offset!");
static_assert(offsetof(UPartySet_Switch_C, Normal) == 0x000400, "Member 'UPartySet_Switch_C::Normal' has a wrong offset!");
static_assert(offsetof(UPartySet_Switch_C, NoActive) == 0x000408, "Member 'UPartySet_Switch_C::NoActive' has a wrong offset!");
static_assert(offsetof(UPartySet_Switch_C, Base) == 0x000410, "Member 'UPartySet_Switch_C::Base' has a wrong offset!");
static_assert(offsetof(UPartySet_Switch_C, BaseBg) == 0x000418, "Member 'UPartySet_Switch_C::BaseBg' has a wrong offset!");
static_assert(offsetof(UPartySet_Switch_C, Icon) == 0x000420, "Member 'UPartySet_Switch_C::Icon' has a wrong offset!");
static_assert(offsetof(UPartySet_Switch_C, Icon_Left) == 0x000428, "Member 'UPartySet_Switch_C::Icon_Left' has a wrong offset!");
static_assert(offsetof(UPartySet_Switch_C, Icon_Right) == 0x000430, "Member 'UPartySet_Switch_C::Icon_Right' has a wrong offset!");

}

