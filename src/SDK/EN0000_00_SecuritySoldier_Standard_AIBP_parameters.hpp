#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EN0000_00_SecuritySoldier_Standard_AIBP

#include "Basic.hpp"

#include "EndGame_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP
// 0x0108 (0x0108 - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAIExecPinBranch                           CallFunc_DebugEditModeBranch_PinBranch;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestAction_ReturnValue;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestAction_ReturnValue_1;              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndAIExecPinBranch                           CallFunc_DebugEditModeBranch_PinBranch_1;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAIProwlCallType                           K2Node_Event_CallType;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndAIIntervalType                            K2Node_Event_IntervalType;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ExtraIntervalId;                      // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InMotionName;                         // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_InName;                               // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIntValue;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InFloatValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ActionDefTag;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestAction_ReturnValue_2;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0048(0x0018)(HasGetValueTypeHash)
	EEndAIExecPinBranch                           CallFunc_DebugEditModeBranch_PinBranch_2;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ConditionTag;                         // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0078(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEndAIActionPackReturnInfo             CallFunc_RequestActionPackArray_ReturnValue;       // 0x0094(0x0014)(NoDestructor)
	struct FEndAIActionPackReturnInfo             CallFunc_RequestActionPackArray_ReturnValue_1;     // 0x00A8(0x0014)(NoDestructor)
	int32                                         CallFunc_GetResidentParameterIntegerBP_ReturnValue; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResidentParameterIntegerBP_ReturnValue_1; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEndAIActionPackReturnInfo             CallFunc_RequestActionPackArray_ReturnValue_2;     // 0x00C8(0x0014)(NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x00E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP) == 0x000008, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP) == 0x000108, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, EntryPoint) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_DebugEditModeBranch_PinBranch) == 0x000004, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_DebugEditModeBranch_PinBranch' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_RequestAction_ReturnValue) == 0x000005, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_RequestAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_SwitchEnum_CmpSuccess) == 0x000006, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_RequestAction_ReturnValue_1) == 0x000007, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_RequestAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_DebugEditModeBranch_PinBranch_1) == 0x000008, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_DebugEditModeBranch_PinBranch_1' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_Event_CallType) == 0x000009, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_Event_CallType' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_SwitchEnum_CmpSuccess_1) == 0x00000A, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, Temp_int_Variable) == 0x00000C, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_Event_IntervalType) == 0x000010, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_Event_IntervalType' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_Event_ExtraIntervalId) == 0x000014, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_Event_ExtraIntervalId' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_Event_InMotionName) == 0x00001C, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_Event_InMotionName' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_Event_InName) == 0x000024, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_Event_InName' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_Event_InIntValue) == 0x00002C, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_Event_InIntValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_Event_InFloatValue) == 0x000030, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_Event_InFloatValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_SwitchEnum_CmpSuccess_2) == 0x000034, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_SwitchName_CmpSuccess) == 0x000035, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_Event_ActionDefTag) == 0x000038, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_Event_ActionDefTag' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_RequestAction_ReturnValue_2) == 0x000040, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_RequestAction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000041, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_InputKeyEvent_Key_1) == 0x000048, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_DebugEditModeBranch_PinBranch_2) == 0x000060, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_DebugEditModeBranch_PinBranch_2' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_Event_ConditionTag) == 0x000064, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_Event_ConditionTag' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_SwitchEnum_CmpSuccess_3) == 0x00006C, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_SwitchName_CmpSuccess_1) == 0x00006D, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_Clamp_ReturnValue) == 0x000074, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_InputKeyEvent_Key_2) == 0x000078, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000090, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_RequestActionPackArray_ReturnValue) == 0x000094, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_RequestActionPackArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_RequestActionPackArray_ReturnValue_1) == 0x0000A8, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_RequestActionPackArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_GetResidentParameterIntegerBP_ReturnValue) == 0x0000BC, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_GetResidentParameterIntegerBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_GetResidentParameterIntegerBP_ReturnValue_1) == 0x0000C0, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_GetResidentParameterIntegerBP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_RequestActionPackArray_ReturnValue_2) == 0x0000C8, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_RequestActionPackArray_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, K2Node_InputKeyEvent_Key) == 0x0000E0, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_Not_PreBool_ReturnValue) == 0x0000F8, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000F9, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_Greater_IntInt_ReturnValue) == 0x0000FA, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000FB, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_BooleanAND_ReturnValue) == 0x0000FC, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, CallFunc_Less_IntInt_ReturnValue) == 0x0000FD, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP, Temp_int_Variable_1) == 0x000100, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP::Temp_int_Variable_1' has a wrong offset!");

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.OnExtraConditionInvoke
// 0x0008 (0x0008 - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_OnExtraConditionInvoke final
{
public:
	class FName                                   ConditionTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnExtraConditionInvoke) == 0x000004, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnExtraConditionInvoke");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnExtraConditionInvoke) == 0x000008, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnExtraConditionInvoke");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnExtraConditionInvoke, ConditionTag) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_OnExtraConditionInvoke::ConditionTag' has a wrong offset!");

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.OnStartActionDefinitionInvoke
// 0x0008 (0x0008 - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_OnStartActionDefinitionInvoke final
{
public:
	class FName                                   ActionDefTag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnStartActionDefinitionInvoke) == 0x000004, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnStartActionDefinitionInvoke");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnStartActionDefinitionInvoke) == 0x000008, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnStartActionDefinitionInvoke");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnStartActionDefinitionInvoke, ActionDefTag) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_OnStartActionDefinitionInvoke::ActionDefTag' has a wrong offset!");

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.OnMotionMessageInvoke
// 0x0018 (0x0018 - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke final
{
public:
	class FName                                   InMotionName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InName;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InIntValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InFloatValue;                                      // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke) == 0x000004, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke) == 0x000018, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke, InMotionName) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke::InMotionName' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke, InName) == 0x000008, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke::InName' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke, InIntValue) == 0x000010, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke::InIntValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke, InFloatValue) == 0x000014, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_OnMotionMessageInvoke::InFloatValue' has a wrong offset!");

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.OnActionInvoke
// 0x000C (0x000C - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_OnActionInvoke final
{
public:
	EEndAIIntervalType                            IntervalType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ExtraIntervalId;                                   // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnActionInvoke) == 0x000004, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnActionInvoke");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnActionInvoke) == 0x00000C, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnActionInvoke");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnActionInvoke, IntervalType) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_OnActionInvoke::IntervalType' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnActionInvoke, ExtraIntervalId) == 0x000004, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_OnActionInvoke::ExtraIntervalId' has a wrong offset!");

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.OnProwlInvoke
// 0x0001 (0x0001 - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_OnProwlInvoke final
{
public:
	EEndAIProwlCallType                           CallType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnProwlInvoke) == 0x000001, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnProwlInvoke");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnProwlInvoke) == 0x000001, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_OnProwlInvoke");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_OnProwlInvoke, CallType) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_OnProwlInvoke::CallType' has a wrong offset!");

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.InpActEvt_NumPadNine_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_0");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_0");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.InpActEvt_NumPadEight_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_1");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_1");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.InpActEvt_NumPadSeven_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_2");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_2");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C.EN0000 Is Using Potion
// 0x0028 (0x0028 - 0x0000)
struct EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion final
{
public:
	bool                                          PotionResult;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEndAIDefinitionReturnTag              CallFunc_GetCurrentAIDefinitionTag_ReturnValue;    // 0x0004(0x0020)(NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion) == 0x000004, "Wrong alignment on EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion");
static_assert(sizeof(EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion) == 0x000028, "Wrong size on EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion, PotionResult) == 0x000000, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion::PotionResult' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion, CallFunc_GetCurrentAIDefinitionTag_ReturnValue) == 0x000004, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion::CallFunc_GetCurrentAIDefinitionTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000024, "Member 'EN0000_00_SecuritySoldier_Standard_AIBP_C_EN0000_Is_Using_Potion::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

}

