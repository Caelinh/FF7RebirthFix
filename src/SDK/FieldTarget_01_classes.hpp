#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FieldTarget_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FieldTarget_01.FieldTarget_01_C
// 0x02D0 (0x06A8 - 0x03D8)
class UFieldTarget_01_C final : public UEndFieldTargetIcon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       Mush_Effect;                                       // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Mush_In;                                           // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Mush_Loop;                                         // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoldingStart;                                      // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Holding_Loop;                                      // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoldGuide_Loop;                                    // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On_Loop_0;                                         // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Color_Shift;                                       // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hold_Effect_Triangle;                              // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On_Effect_Triangle;                                // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On_Effect_Square;                                  // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hold_In;                                           // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On2_In;                                            // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On_In;                                             // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Off_In;                                            // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NG_In;                                             // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hold_Loop;                                         // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On2_Loop;                                          // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On_Loop;                                           // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Off_Loop;                                          // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NG_Loop;                                           // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UFieldTarget_ActionIcon_C*              ActionIcon;                                        // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BtnLight;                                          // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BtnLight_1;                                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BtnLight_2;                                        // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_HoldGuideRing;                              // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_HoldGuideRing_1;                            // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Holding_Add;                                // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Holding_Add_1;                              // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Holding_Light;                              // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Holding_Light_1;                            // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Holding_Light_2;                            // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Holding_Light_5;                            // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_HoldStart_Light;                            // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_HoldStart_Ring;                             // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Mush_Light;                                 // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Mush_Ring_1;                                // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Mushing_Light_1;                            // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Mushing_Light_2;                            // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_106;                                      // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndPieImage*                           Gauge_Hold;                                        // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Gauge_Hold_01;                                     // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndPieImage*                           Gauge_Mush;                                        // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Gauge_Mush_01;                                     // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Gauge_On2_01;                                      // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Gauge_On_01;                                       // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Btn_Hold;                                     // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Btn_Mush;                                     // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Btn_On;                                       // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Btn_On2;                                      // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Mog;                                          // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Hold_00;                                       // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Hold_Base;                                     // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Mash_Base01;                                   // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Mush_Base;                                     // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_NG_Mark;                                       // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Off_Base;                                      // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_00;                                        // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_01;                                        // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_01BG;                                      // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_02;                                        // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_02BG;                                      // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_03;                                        // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_03BG;                                      // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_04;                                        // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_04BG;                                      // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_On2_Add;                                       // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On2_Base;                                      // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_On2_BG;                                        // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_On_00;                                         // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_TxtBG;                                         // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Hold_Add;                                      // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Hold_BG;                                       // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Mush_Add;                                      // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Mush_BG;                                       // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_NG_Add;                                        // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_NG_BG;                                         // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Off_Add;                                       // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Off_BG;                                        // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Off_Inside;                                    // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_On_Add;                                        // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_On_BG;                                         // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MushArrow;                                         // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring2;                                             // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring2_1;                                           // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring2_2;                                           // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring3;                                             // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring3_1;                                           // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring3_2;                                           // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_FieldTarget_01(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FieldTarget_01_C">();
	}
	static class UFieldTarget_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFieldTarget_01_C>();
	}
};
static_assert(alignof(UFieldTarget_01_C) == 0x000008, "Wrong alignment on UFieldTarget_01_C");
static_assert(sizeof(UFieldTarget_01_C) == 0x0006A8, "Wrong size on UFieldTarget_01_C");
static_assert(offsetof(UFieldTarget_01_C, UberGraphFrame) == 0x0003D8, "Member 'UFieldTarget_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Mush_Effect) == 0x0003E0, "Member 'UFieldTarget_01_C::Mush_Effect' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Mush_In) == 0x0003E8, "Member 'UFieldTarget_01_C::Mush_In' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Mush_Loop) == 0x0003F0, "Member 'UFieldTarget_01_C::Mush_Loop' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, HoldingStart) == 0x0003F8, "Member 'UFieldTarget_01_C::HoldingStart' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Holding_Loop) == 0x000400, "Member 'UFieldTarget_01_C::Holding_Loop' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, HoldGuide_Loop) == 0x000408, "Member 'UFieldTarget_01_C::HoldGuide_Loop' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, On_Loop_0) == 0x000410, "Member 'UFieldTarget_01_C::On_Loop_0' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Color_Shift) == 0x000418, "Member 'UFieldTarget_01_C::Color_Shift' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Hold_Effect_Triangle) == 0x000420, "Member 'UFieldTarget_01_C::Hold_Effect_Triangle' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, On_Effect_Triangle) == 0x000428, "Member 'UFieldTarget_01_C::On_Effect_Triangle' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, On_Effect_Square) == 0x000430, "Member 'UFieldTarget_01_C::On_Effect_Square' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Hold_In) == 0x000438, "Member 'UFieldTarget_01_C::Hold_In' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, On2_In) == 0x000440, "Member 'UFieldTarget_01_C::On2_In' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, On_In) == 0x000448, "Member 'UFieldTarget_01_C::On_In' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Off_In) == 0x000450, "Member 'UFieldTarget_01_C::Off_In' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, NG_In) == 0x000458, "Member 'UFieldTarget_01_C::NG_In' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Hold_Loop) == 0x000460, "Member 'UFieldTarget_01_C::Hold_Loop' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, On2_Loop) == 0x000468, "Member 'UFieldTarget_01_C::On2_Loop' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, On_Loop) == 0x000470, "Member 'UFieldTarget_01_C::On_Loop' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Off_Loop) == 0x000478, "Member 'UFieldTarget_01_C::Off_Loop' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, NG_Loop) == 0x000480, "Member 'UFieldTarget_01_C::NG_Loop' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, ActionIcon) == 0x000488, "Member 'UFieldTarget_01_C::ActionIcon' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, BtnLight) == 0x000490, "Member 'UFieldTarget_01_C::BtnLight' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, BtnLight_1) == 0x000498, "Member 'UFieldTarget_01_C::BtnLight_1' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, BtnLight_2) == 0x0004A0, "Member 'UFieldTarget_01_C::BtnLight_2' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_HoldGuideRing) == 0x0004A8, "Member 'UFieldTarget_01_C::Effect_HoldGuideRing' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_HoldGuideRing_1) == 0x0004B0, "Member 'UFieldTarget_01_C::Effect_HoldGuideRing_1' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Holding_Add) == 0x0004B8, "Member 'UFieldTarget_01_C::Effect_Holding_Add' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Holding_Add_1) == 0x0004C0, "Member 'UFieldTarget_01_C::Effect_Holding_Add_1' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Holding_Light) == 0x0004C8, "Member 'UFieldTarget_01_C::Effect_Holding_Light' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Holding_Light_1) == 0x0004D0, "Member 'UFieldTarget_01_C::Effect_Holding_Light_1' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Holding_Light_2) == 0x0004D8, "Member 'UFieldTarget_01_C::Effect_Holding_Light_2' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Holding_Light_5) == 0x0004E0, "Member 'UFieldTarget_01_C::Effect_Holding_Light_5' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_HoldStart_Light) == 0x0004E8, "Member 'UFieldTarget_01_C::Effect_HoldStart_Light' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_HoldStart_Ring) == 0x0004F0, "Member 'UFieldTarget_01_C::Effect_HoldStart_Ring' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Mush_Light) == 0x0004F8, "Member 'UFieldTarget_01_C::Effect_Mush_Light' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Mush_Ring_1) == 0x000500, "Member 'UFieldTarget_01_C::Effect_Mush_Ring_1' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Mushing_Light_1) == 0x000508, "Member 'UFieldTarget_01_C::Effect_Mushing_Light_1' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Effect_Mushing_Light_2) == 0x000510, "Member 'UFieldTarget_01_C::Effect_Mushing_Light_2' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, EndImage_106) == 0x000518, "Member 'UFieldTarget_01_C::EndImage_106' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Gauge_Hold) == 0x000520, "Member 'UFieldTarget_01_C::Gauge_Hold' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Gauge_Hold_01) == 0x000528, "Member 'UFieldTarget_01_C::Gauge_Hold_01' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Gauge_Mush) == 0x000530, "Member 'UFieldTarget_01_C::Gauge_Mush' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Gauge_Mush_01) == 0x000538, "Member 'UFieldTarget_01_C::Gauge_Mush_01' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Gauge_On2_01) == 0x000540, "Member 'UFieldTarget_01_C::Gauge_On2_01' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Gauge_On_01) == 0x000548, "Member 'UFieldTarget_01_C::Gauge_On_01' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Icon_Btn_Hold) == 0x000550, "Member 'UFieldTarget_01_C::Icon_Btn_Hold' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Icon_Btn_Mush) == 0x000558, "Member 'UFieldTarget_01_C::Icon_Btn_Mush' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Icon_Btn_On) == 0x000560, "Member 'UFieldTarget_01_C::Icon_Btn_On' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Icon_Btn_On2) == 0x000568, "Member 'UFieldTarget_01_C::Icon_Btn_On2' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Icon_Mog) == 0x000570, "Member 'UFieldTarget_01_C::Icon_Mog' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_Hold_00) == 0x000578, "Member 'UFieldTarget_01_C::Img_Hold_00' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_Hold_Base) == 0x000580, "Member 'UFieldTarget_01_C::Img_Hold_Base' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_Mash_Base01) == 0x000588, "Member 'UFieldTarget_01_C::Img_Mash_Base01' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_Mush_Base) == 0x000590, "Member 'UFieldTarget_01_C::Img_Mush_Base' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_NG_Mark) == 0x000598, "Member 'UFieldTarget_01_C::Img_NG_Mark' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_Off_Base) == 0x0005A0, "Member 'UFieldTarget_01_C::Img_Off_Base' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_00) == 0x0005A8, "Member 'UFieldTarget_01_C::Img_On2_00' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_01) == 0x0005B0, "Member 'UFieldTarget_01_C::Img_On2_01' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_01BG) == 0x0005B8, "Member 'UFieldTarget_01_C::Img_On2_01BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_02) == 0x0005C0, "Member 'UFieldTarget_01_C::Img_On2_02' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_02BG) == 0x0005C8, "Member 'UFieldTarget_01_C::Img_On2_02BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_03) == 0x0005D0, "Member 'UFieldTarget_01_C::Img_On2_03' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_03BG) == 0x0005D8, "Member 'UFieldTarget_01_C::Img_On2_03BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_04) == 0x0005E0, "Member 'UFieldTarget_01_C::Img_On2_04' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_04BG) == 0x0005E8, "Member 'UFieldTarget_01_C::Img_On2_04BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_Add) == 0x0005F0, "Member 'UFieldTarget_01_C::Img_On2_Add' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_Base) == 0x0005F8, "Member 'UFieldTarget_01_C::Img_On2_Base' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On2_BG) == 0x000600, "Member 'UFieldTarget_01_C::Img_On2_BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_On_00) == 0x000608, "Member 'UFieldTarget_01_C::Img_On_00' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Img_TxtBG) == 0x000610, "Member 'UFieldTarget_01_C::Img_TxtBG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_Hold_Add) == 0x000618, "Member 'UFieldTarget_01_C::Ims_Hold_Add' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_Hold_BG) == 0x000620, "Member 'UFieldTarget_01_C::Ims_Hold_BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_Mush_Add) == 0x000628, "Member 'UFieldTarget_01_C::Ims_Mush_Add' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_Mush_BG) == 0x000630, "Member 'UFieldTarget_01_C::Ims_Mush_BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_NG_Add) == 0x000638, "Member 'UFieldTarget_01_C::Ims_NG_Add' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_NG_BG) == 0x000640, "Member 'UFieldTarget_01_C::Ims_NG_BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_Off_Add) == 0x000648, "Member 'UFieldTarget_01_C::Ims_Off_Add' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_Off_BG) == 0x000650, "Member 'UFieldTarget_01_C::Ims_Off_BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_Off_Inside) == 0x000658, "Member 'UFieldTarget_01_C::Ims_Off_Inside' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_On_Add) == 0x000660, "Member 'UFieldTarget_01_C::Ims_On_Add' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ims_On_BG) == 0x000668, "Member 'UFieldTarget_01_C::Ims_On_BG' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, MushArrow) == 0x000670, "Member 'UFieldTarget_01_C::MushArrow' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ring2) == 0x000678, "Member 'UFieldTarget_01_C::Ring2' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ring2_1) == 0x000680, "Member 'UFieldTarget_01_C::Ring2_1' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ring2_2) == 0x000688, "Member 'UFieldTarget_01_C::Ring2_2' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ring3) == 0x000690, "Member 'UFieldTarget_01_C::Ring3' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ring3_1) == 0x000698, "Member 'UFieldTarget_01_C::Ring3_1' has a wrong offset!");
static_assert(offsetof(UFieldTarget_01_C, Ring3_2) == 0x0006A0, "Member 'UFieldTarget_01_C::Ring3_2' has a wrong offset!");

}

