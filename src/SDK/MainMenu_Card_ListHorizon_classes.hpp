#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainMenu_Card_ListHorizon

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MainMenu_Card_ListHorizon.MainMenu_Card_ListHorizon_C
// 0x00B8 (0x0480 - 0x03C8)
class UMainMenu_Card_ListHorizon_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       FrameLight;                                        // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DeckCopyColor;                                     // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EditList_Inactive;                                 // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EditList_Active;                                   // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NormalColor_NoBtn;                                 // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Over15_L;                                          // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Over15_R;                                          // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PresetColor;                                       // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NormalColor;                                       // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Bg_DeckCopy;                                       // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Bg_Light;                                          // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Bg_Logo;                                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Bg_Menu;                                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Bg_Preset;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_Card_CardEditBtn_C*           EditBtn;                                           // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Card;                                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Arrow_L;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Arrow_R;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BtnBg;                                         // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Icon;                                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_NumberBg;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_TitleBg;                                       // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_NoCard;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MainMenu_Card_ListHorizon_C">();
	}
	static class UMainMenu_Card_ListHorizon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu_Card_ListHorizon_C>();
	}
};
static_assert(alignof(UMainMenu_Card_ListHorizon_C) == 0x000008, "Wrong alignment on UMainMenu_Card_ListHorizon_C");
static_assert(sizeof(UMainMenu_Card_ListHorizon_C) == 0x000480, "Wrong size on UMainMenu_Card_ListHorizon_C");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, FrameLight) == 0x0003C8, "Member 'UMainMenu_Card_ListHorizon_C::FrameLight' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, DeckCopyColor) == 0x0003D0, "Member 'UMainMenu_Card_ListHorizon_C::DeckCopyColor' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, EditList_Inactive) == 0x0003D8, "Member 'UMainMenu_Card_ListHorizon_C::EditList_Inactive' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, EditList_Active) == 0x0003E0, "Member 'UMainMenu_Card_ListHorizon_C::EditList_Active' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, NormalColor_NoBtn) == 0x0003E8, "Member 'UMainMenu_Card_ListHorizon_C::NormalColor_NoBtn' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Over15_L) == 0x0003F0, "Member 'UMainMenu_Card_ListHorizon_C::Over15_L' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Over15_R) == 0x0003F8, "Member 'UMainMenu_Card_ListHorizon_C::Over15_R' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, PresetColor) == 0x000400, "Member 'UMainMenu_Card_ListHorizon_C::PresetColor' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, NormalColor) == 0x000408, "Member 'UMainMenu_Card_ListHorizon_C::NormalColor' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Bg_DeckCopy) == 0x000410, "Member 'UMainMenu_Card_ListHorizon_C::Bg_DeckCopy' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Bg_Light) == 0x000418, "Member 'UMainMenu_Card_ListHorizon_C::Bg_Light' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Bg_Logo) == 0x000420, "Member 'UMainMenu_Card_ListHorizon_C::Bg_Logo' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Bg_Menu) == 0x000428, "Member 'UMainMenu_Card_ListHorizon_C::Bg_Menu' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Bg_Preset) == 0x000430, "Member 'UMainMenu_Card_ListHorizon_C::Bg_Preset' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, EditBtn) == 0x000438, "Member 'UMainMenu_Card_ListHorizon_C::EditBtn' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Icon_Card) == 0x000440, "Member 'UMainMenu_Card_ListHorizon_C::Icon_Card' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Img_Arrow_L) == 0x000448, "Member 'UMainMenu_Card_ListHorizon_C::Img_Arrow_L' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Img_Arrow_R) == 0x000450, "Member 'UMainMenu_Card_ListHorizon_C::Img_Arrow_R' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Img_BtnBg) == 0x000458, "Member 'UMainMenu_Card_ListHorizon_C::Img_BtnBg' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Img_Icon) == 0x000460, "Member 'UMainMenu_Card_ListHorizon_C::Img_Icon' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Img_NumberBg) == 0x000468, "Member 'UMainMenu_Card_ListHorizon_C::Img_NumberBg' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Img_TitleBg) == 0x000470, "Member 'UMainMenu_Card_ListHorizon_C::Img_TitleBg' has a wrong offset!");
static_assert(offsetof(UMainMenu_Card_ListHorizon_C, Txt_NoCard) == 0x000478, "Member 'UMainMenu_Card_ListHorizon_C::Txt_NoCard' has a wrong offset!");

}

