#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleSetting_Info

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleSetting_Info.BattleSetting_Info_C
// 0x00A0 (0x0478 - 0x03D8)
class UBattleSetting_Info_C final : public UEndBattleSettingInfo
{
public:
	class UEndImage*                              Bg;                                                // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShop_Bg3_C*                            Bg2_4;                                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShop_Bg3_C*                            Bg2_5;                                             // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShop_Bg3_C*                            Bg2_6;                                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShop_Bg3_C*                            Bg2_7;                                             // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_1;                                            // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_InfoWindowBg_C*               InfoWindowBg;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line;                                              // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_1;                                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListBase;                                          // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListFrame;                                         // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_9;                                       // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_10;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_11;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_12;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_13;                                      // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_14;                                      // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_15;                                      // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_16;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_17;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleSetting_Info_C">();
	}
	static class UBattleSetting_Info_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleSetting_Info_C>();
	}
};
static_assert(alignof(UBattleSetting_Info_C) == 0x000008, "Wrong alignment on UBattleSetting_Info_C");
static_assert(sizeof(UBattleSetting_Info_C) == 0x000478, "Wrong size on UBattleSetting_Info_C");
static_assert(offsetof(UBattleSetting_Info_C, Bg) == 0x0003D8, "Member 'UBattleSetting_Info_C::Bg' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, Bg2_4) == 0x0003E0, "Member 'UBattleSetting_Info_C::Bg2_4' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, Bg2_5) == 0x0003E8, "Member 'UBattleSetting_Info_C::Bg2_5' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, Bg2_6) == 0x0003F0, "Member 'UBattleSetting_Info_C::Bg2_6' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, Bg2_7) == 0x0003F8, "Member 'UBattleSetting_Info_C::Bg2_7' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, Icon_1) == 0x000400, "Member 'UBattleSetting_Info_C::Icon_1' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, InfoWindowBg) == 0x000408, "Member 'UBattleSetting_Info_C::InfoWindowBg' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, Line) == 0x000410, "Member 'UBattleSetting_Info_C::Line' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, Line_1) == 0x000418, "Member 'UBattleSetting_Info_C::Line_1' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListBase) == 0x000420, "Member 'UBattleSetting_Info_C::ListBase' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListFrame) == 0x000428, "Member 'UBattleSetting_Info_C::ListFrame' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListPoint_9) == 0x000430, "Member 'UBattleSetting_Info_C::ListPoint_9' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListPoint_10) == 0x000438, "Member 'UBattleSetting_Info_C::ListPoint_10' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListPoint_11) == 0x000440, "Member 'UBattleSetting_Info_C::ListPoint_11' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListPoint_12) == 0x000448, "Member 'UBattleSetting_Info_C::ListPoint_12' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListPoint_13) == 0x000450, "Member 'UBattleSetting_Info_C::ListPoint_13' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListPoint_14) == 0x000458, "Member 'UBattleSetting_Info_C::ListPoint_14' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListPoint_15) == 0x000460, "Member 'UBattleSetting_Info_C::ListPoint_15' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListPoint_16) == 0x000468, "Member 'UBattleSetting_Info_C::ListPoint_16' has a wrong offset!");
static_assert(offsetof(UBattleSetting_Info_C, ListPoint_17) == 0x000470, "Member 'UBattleSetting_Info_C::ListPoint_17' has a wrong offset!");

}

