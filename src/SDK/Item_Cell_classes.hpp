#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Item_Cell

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Item_Cell.Item_Cell_C
// 0x0110 (0x05F0 - 0x04E0)
class UItem_Cell_C final : public UEndItemCell
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       BtnHover_Gray;                                     // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Gray;                                              // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Normal;                                            // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChainAction;                                       // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Selected;                                          // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Magic;                                             // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Sort;                                              // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BattleSetting;                                     // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BtnHover2;                                         // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Craft;                                             // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       EquipItem;                                         // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BtnHover;                                          // 0x0540(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base2;                                             // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base2_1;                                           // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Btn;                                          // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Hover;                                        // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Selected;                                     // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage;                                          // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_74;                                       // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Frame1;                                            // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Frame1_1;                                          // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Lock;                                         // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Shortage;                                     // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_WishList;                                     // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_AbilityExp_Waku;                               // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line1;                                             // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line2;                                             // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              LockCover;                                         // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndButton*                             MainMenu_Btn;                                      // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MarkBase;                                          // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MarkFrame;                                         // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ShortageCover;                                     // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Num_1;                                         // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Item_Cell(int32 EntryPoint);
	void BndEvt__MainMenu_Btn_K2Node_ComponentBoundEvent_16_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__MainMenu_Btn_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Item_Cell_C">();
	}
	static class UItem_Cell_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItem_Cell_C>();
	}
};
static_assert(alignof(UItem_Cell_C) == 0x000008, "Wrong alignment on UItem_Cell_C");
static_assert(sizeof(UItem_Cell_C) == 0x0005F0, "Wrong size on UItem_Cell_C");
static_assert(offsetof(UItem_Cell_C, UberGraphFrame) == 0x0004E0, "Member 'UItem_Cell_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, BtnHover_Gray) == 0x0004E8, "Member 'UItem_Cell_C::BtnHover_Gray' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Gray) == 0x0004F0, "Member 'UItem_Cell_C::Gray' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Normal) == 0x0004F8, "Member 'UItem_Cell_C::Normal' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, ChainAction) == 0x000500, "Member 'UItem_Cell_C::ChainAction' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Selected) == 0x000508, "Member 'UItem_Cell_C::Selected' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Magic) == 0x000510, "Member 'UItem_Cell_C::Magic' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Sort) == 0x000518, "Member 'UItem_Cell_C::Sort' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, BattleSetting) == 0x000520, "Member 'UItem_Cell_C::BattleSetting' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, BtnHover2) == 0x000528, "Member 'UItem_Cell_C::BtnHover2' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Craft) == 0x000530, "Member 'UItem_Cell_C::Craft' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, EquipItem) == 0x000538, "Member 'UItem_Cell_C::EquipItem' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, BtnHover) == 0x000540, "Member 'UItem_Cell_C::BtnHover' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Base2) == 0x000548, "Member 'UItem_Cell_C::Base2' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Base2_1) == 0x000550, "Member 'UItem_Cell_C::Base2_1' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Base_Btn) == 0x000558, "Member 'UItem_Cell_C::Base_Btn' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Base_Hover) == 0x000560, "Member 'UItem_Cell_C::Base_Hover' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Base_Selected) == 0x000568, "Member 'UItem_Cell_C::Base_Selected' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, EndImage) == 0x000570, "Member 'UItem_Cell_C::EndImage' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, EndImage_74) == 0x000578, "Member 'UItem_Cell_C::EndImage_74' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Frame1) == 0x000580, "Member 'UItem_Cell_C::Frame1' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Frame1_1) == 0x000588, "Member 'UItem_Cell_C::Frame1_1' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Icon_Lock) == 0x000590, "Member 'UItem_Cell_C::Icon_Lock' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Icon_Shortage) == 0x000598, "Member 'UItem_Cell_C::Icon_Shortage' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Icon_WishList) == 0x0005A0, "Member 'UItem_Cell_C::Icon_WishList' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Img_AbilityExp_Waku) == 0x0005A8, "Member 'UItem_Cell_C::Img_AbilityExp_Waku' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Line1) == 0x0005B0, "Member 'UItem_Cell_C::Line1' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Line2) == 0x0005B8, "Member 'UItem_Cell_C::Line2' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, LockCover) == 0x0005C0, "Member 'UItem_Cell_C::LockCover' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, MainMenu_Btn) == 0x0005C8, "Member 'UItem_Cell_C::MainMenu_Btn' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, MarkBase) == 0x0005D0, "Member 'UItem_Cell_C::MarkBase' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, MarkFrame) == 0x0005D8, "Member 'UItem_Cell_C::MarkFrame' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, ShortageCover) == 0x0005E0, "Member 'UItem_Cell_C::ShortageCover' has a wrong offset!");
static_assert(offsetof(UItem_Cell_C, Txt_Num_1) == 0x0005E8, "Member 'UItem_Cell_C::Txt_Num_1' has a wrong offset!");

}

