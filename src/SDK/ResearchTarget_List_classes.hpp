#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ResearchTarget_List

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ResearchTarget_List.ResearchTarget_List_C
// 0x0028 (0x0440 - 0x0418)
class UResearchTarget_List_C final : public UEndResearchTargetList
{
public:
	class UEndImage*                              Base1_4;                                           // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line;                                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Point2;                                            // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Point2_1;                                          // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Point2_2;                                          // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ResearchTarget_List_C">();
	}
	static class UResearchTarget_List_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResearchTarget_List_C>();
	}
};
static_assert(alignof(UResearchTarget_List_C) == 0x000008, "Wrong alignment on UResearchTarget_List_C");
static_assert(sizeof(UResearchTarget_List_C) == 0x000440, "Wrong size on UResearchTarget_List_C");
static_assert(offsetof(UResearchTarget_List_C, Base1_4) == 0x000418, "Member 'UResearchTarget_List_C::Base1_4' has a wrong offset!");
static_assert(offsetof(UResearchTarget_List_C, Line) == 0x000420, "Member 'UResearchTarget_List_C::Line' has a wrong offset!");
static_assert(offsetof(UResearchTarget_List_C, Point2) == 0x000428, "Member 'UResearchTarget_List_C::Point2' has a wrong offset!");
static_assert(offsetof(UResearchTarget_List_C, Point2_1) == 0x000430, "Member 'UResearchTarget_List_C::Point2_1' has a wrong offset!");
static_assert(offsetof(UResearchTarget_List_C, Point2_2) == 0x000438, "Member 'UResearchTarget_List_C::Point2_2' has a wrong offset!");

}

