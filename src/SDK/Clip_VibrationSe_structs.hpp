#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Clip_VibrationSe

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct Clip_VibrationSe.Clip_VibrationSe
// 0x0028 (0x0028 - 0x0000)
struct FClip_VibrationSe final
{
public:
	class FName                                   SoundAsset_42_BE7E8316449D2840B2AA3D910531BD59;    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SoundName_43_D45F6F414FD1579EAD14D99DDB572879;     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ForceFeedBackID_44_9B15AEEB4AFDF5E54AFEAB8A0AE8365D; // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlay_48_11062D544FC99E78AE583C9C3106BF6F;         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeOutDuration_52_2D97007A45F965070CBEE08F91E9921D; // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInDuration_56_52A0B97442445BBB89B779B41AC81E29; // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume_58_E8B2625342B366FBB06559B2097CD519;        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FClip_VibrationSe) == 0x000004, "Wrong alignment on FClip_VibrationSe");
static_assert(sizeof(FClip_VibrationSe) == 0x000028, "Wrong size on FClip_VibrationSe");
static_assert(offsetof(FClip_VibrationSe, SoundAsset_42_BE7E8316449D2840B2AA3D910531BD59) == 0x000000, "Member 'FClip_VibrationSe::SoundAsset_42_BE7E8316449D2840B2AA3D910531BD59' has a wrong offset!");
static_assert(offsetof(FClip_VibrationSe, SoundName_43_D45F6F414FD1579EAD14D99DDB572879) == 0x000008, "Member 'FClip_VibrationSe::SoundName_43_D45F6F414FD1579EAD14D99DDB572879' has a wrong offset!");
static_assert(offsetof(FClip_VibrationSe, ForceFeedBackID_44_9B15AEEB4AFDF5E54AFEAB8A0AE8365D) == 0x000010, "Member 'FClip_VibrationSe::ForceFeedBackID_44_9B15AEEB4AFDF5E54AFEAB8A0AE8365D' has a wrong offset!");
static_assert(offsetof(FClip_VibrationSe, bPlay_48_11062D544FC99E78AE583C9C3106BF6F) == 0x000018, "Member 'FClip_VibrationSe::bPlay_48_11062D544FC99E78AE583C9C3106BF6F' has a wrong offset!");
static_assert(offsetof(FClip_VibrationSe, FadeOutDuration_52_2D97007A45F965070CBEE08F91E9921D) == 0x00001C, "Member 'FClip_VibrationSe::FadeOutDuration_52_2D97007A45F965070CBEE08F91E9921D' has a wrong offset!");
static_assert(offsetof(FClip_VibrationSe, FadeInDuration_56_52A0B97442445BBB89B779B41AC81E29) == 0x000020, "Member 'FClip_VibrationSe::FadeInDuration_56_52A0B97442445BBB89B779B41AC81E29' has a wrong offset!");
static_assert(offsetof(FClip_VibrationSe, Volume_58_E8B2625342B366FBB06559B2097CD519) == 0x000024, "Member 'FClip_VibrationSe::Volume_58_E8B2625342B366FBB06559B2097CD519' has a wrong offset!");

}

