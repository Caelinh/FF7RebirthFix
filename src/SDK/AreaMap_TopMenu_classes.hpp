#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AreaMap_TopMenu

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AreaMap_TopMenu.AreaMap_TopMenu_C
// 0x0058 (0x04D0 - 0x0478)
class UAreaMap_TopMenu_C final : public UEndMapJournalMenu
{
public:
	class UWidgetAnimation*                       Menu_In;                                           // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BtnBg;                                             // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAreaMap_TopMenu_Cell_C*                Cell1;                                             // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAreaMap_TopMenu_Cell_C*                Cell2;                                             // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAreaMap_TopMenu_Cell_C*                Cell3;                                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAreaMap_TopMenu_Cell_C*                Cell4;                                             // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAreaMap_TopMenu_Cell_C*                Cell5;                                             // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMap_PlayerLevel_C*                     Map_PlayerLevel;                                   // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              PointLeft;                                         // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              PointRight;                                        // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AreaMap_TopMenu_C">();
	}
	static class UAreaMap_TopMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAreaMap_TopMenu_C>();
	}
};
static_assert(alignof(UAreaMap_TopMenu_C) == 0x000008, "Wrong alignment on UAreaMap_TopMenu_C");
static_assert(sizeof(UAreaMap_TopMenu_C) == 0x0004D0, "Wrong size on UAreaMap_TopMenu_C");
static_assert(offsetof(UAreaMap_TopMenu_C, Menu_In) == 0x000478, "Member 'UAreaMap_TopMenu_C::Menu_In' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, Base) == 0x000480, "Member 'UAreaMap_TopMenu_C::Base' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, BtnBg) == 0x000488, "Member 'UAreaMap_TopMenu_C::BtnBg' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, Cell1) == 0x000490, "Member 'UAreaMap_TopMenu_C::Cell1' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, Cell2) == 0x000498, "Member 'UAreaMap_TopMenu_C::Cell2' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, Cell3) == 0x0004A0, "Member 'UAreaMap_TopMenu_C::Cell3' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, Cell4) == 0x0004A8, "Member 'UAreaMap_TopMenu_C::Cell4' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, Cell5) == 0x0004B0, "Member 'UAreaMap_TopMenu_C::Cell5' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, Map_PlayerLevel) == 0x0004B8, "Member 'UAreaMap_TopMenu_C::Map_PlayerLevel' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, PointLeft) == 0x0004C0, "Member 'UAreaMap_TopMenu_C::PointLeft' has a wrong offset!");
static_assert(offsetof(UAreaMap_TopMenu_C, PointRight) == 0x0004C8, "Member 'UAreaMap_TopMenu_C::PointRight' has a wrong offset!");

}

