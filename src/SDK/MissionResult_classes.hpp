#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionResult

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MissionResult.MissionResult_C
// 0x00E8 (0x04B0 - 0x03C8)
class UMissionResult_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       QuestFailed_Color;                                 // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VRFailed_Color;                                    // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Quest_Color;                                       // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VR_Color;                                          // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Report_Color;                                      // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Failed_Out;                                        // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Failed_Shift;                                      // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Complete_Out;                                      // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Shift;                                             // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_00;                                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_01;                                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_StatusTxt;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_StatusTxt_00;                                 // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_StatusTxt_01;                                 // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_StatusTxt_02;                                 // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_StatusTxt_03;                                 // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_StatusTxt_04;                                 // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Title;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBillboard*                          Billboard_Symbol;                                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Complete;                                   // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_StatusTxtBG;                                // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_Sub;                                      // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Effect_StatusTxt;                              // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Top_Left;                                     // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Top_Right;                                    // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Squere_Top;                                        // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MissionResult_C">();
	}
	static class UMissionResult_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionResult_C>();
	}
};
static_assert(alignof(UMissionResult_C) == 0x000008, "Wrong alignment on UMissionResult_C");
static_assert(sizeof(UMissionResult_C) == 0x0004B0, "Wrong size on UMissionResult_C");
static_assert(offsetof(UMissionResult_C, QuestFailed_Color) == 0x0003C8, "Member 'UMissionResult_C::QuestFailed_Color' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, VRFailed_Color) == 0x0003D0, "Member 'UMissionResult_C::VRFailed_Color' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Quest_Color) == 0x0003D8, "Member 'UMissionResult_C::Quest_Color' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, VR_Color) == 0x0003E0, "Member 'UMissionResult_C::VR_Color' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Report_Color) == 0x0003E8, "Member 'UMissionResult_C::Report_Color' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Failed_Out) == 0x0003F0, "Member 'UMissionResult_C::Failed_Out' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Failed_Shift) == 0x0003F8, "Member 'UMissionResult_C::Failed_Shift' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Complete_Out) == 0x000400, "Member 'UMissionResult_C::Complete_Out' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Out) == 0x000408, "Member 'UMissionResult_C::Out' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Shift) == 0x000410, "Member 'UMissionResult_C::Shift' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, In) == 0x000418, "Member 'UMissionResult_C::In' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base) == 0x000420, "Member 'UMissionResult_C::Base' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base_00) == 0x000428, "Member 'UMissionResult_C::Base_00' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base_01) == 0x000430, "Member 'UMissionResult_C::Base_01' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base_StatusTxt) == 0x000438, "Member 'UMissionResult_C::Base_StatusTxt' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base_StatusTxt_00) == 0x000440, "Member 'UMissionResult_C::Base_StatusTxt_00' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base_StatusTxt_01) == 0x000448, "Member 'UMissionResult_C::Base_StatusTxt_01' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base_StatusTxt_02) == 0x000450, "Member 'UMissionResult_C::Base_StatusTxt_02' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base_StatusTxt_03) == 0x000458, "Member 'UMissionResult_C::Base_StatusTxt_03' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base_StatusTxt_04) == 0x000460, "Member 'UMissionResult_C::Base_StatusTxt_04' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Base_Title) == 0x000468, "Member 'UMissionResult_C::Base_Title' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Billboard_Symbol) == 0x000470, "Member 'UMissionResult_C::Billboard_Symbol' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Effect_Complete) == 0x000478, "Member 'UMissionResult_C::Effect_Complete' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Effect_StatusTxtBG) == 0x000480, "Member 'UMissionResult_C::Effect_StatusTxtBG' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Img_Base_Sub) == 0x000488, "Member 'UMissionResult_C::Img_Base_Sub' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Ims_Effect_StatusTxt) == 0x000490, "Member 'UMissionResult_C::Ims_Effect_StatusTxt' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Line_Top_Left) == 0x000498, "Member 'UMissionResult_C::Line_Top_Left' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Line_Top_Right) == 0x0004A0, "Member 'UMissionResult_C::Line_Top_Right' has a wrong offset!");
static_assert(offsetof(UMissionResult_C, Squere_Top) == 0x0004A8, "Member 'UMissionResult_C::Squere_Top' has a wrong offset!");

}

