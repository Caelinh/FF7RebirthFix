#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC0004_00_RedXIII_Standard_AIBP

#include "Basic.hpp"


namespace SDK::Params
{

// Function PC0004_00_RedXIII_Standard_AIBP.PC0004_00_RedXIII_Standard_AIBP_C.ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP
// 0x0010 (0x0010 - 0x0000)
struct PC0004_00_RedXIII_Standard_AIBP_C_ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC0004_00_RedXIII_Standard_AIBP_C_ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP) == 0x000008, "Wrong alignment on PC0004_00_RedXIII_Standard_AIBP_C_ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP");
static_assert(sizeof(PC0004_00_RedXIII_Standard_AIBP_C_ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP) == 0x000010, "Wrong size on PC0004_00_RedXIII_Standard_AIBP_C_ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP");
static_assert(offsetof(PC0004_00_RedXIII_Standard_AIBP_C_ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP, EntryPoint) == 0x000000, "Member 'PC0004_00_RedXIII_Standard_AIBP_C_ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(PC0004_00_RedXIII_Standard_AIBP_C_ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP, K2Node_Event_PossessedPawn) == 0x000008, "Member 'PC0004_00_RedXIII_Standard_AIBP_C_ExecuteUbergraph_PC0004_00_RedXIII_Standard_AIBP::K2Node_Event_PossessedPawn' has a wrong offset!");

// Function PC0004_00_RedXIII_Standard_AIBP.PC0004_00_RedXIII_Standard_AIBP_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct PC0004_00_RedXIII_Standard_AIBP_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC0004_00_RedXIII_Standard_AIBP_C_ReceivePossess) == 0x000008, "Wrong alignment on PC0004_00_RedXIII_Standard_AIBP_C_ReceivePossess");
static_assert(sizeof(PC0004_00_RedXIII_Standard_AIBP_C_ReceivePossess) == 0x000008, "Wrong size on PC0004_00_RedXIII_Standard_AIBP_C_ReceivePossess");
static_assert(offsetof(PC0004_00_RedXIII_Standard_AIBP_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'PC0004_00_RedXIII_Standard_AIBP_C_ReceivePossess::PossessedPawn' has a wrong offset!");

}

