#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EN0000_00_SecuritySoldier_Standard_AIBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EN0000_00_SecuritySoldier_Common_AIBP_classes.hpp"
#include "EndGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass EN0000_00_SecuritySoldier_Standard_AIBP.EN0000_00_SecuritySoldier_Standard_AIBP_C
// 0x0060 (0x1040 - 0x0FE0)
#pragma pack(push, 0x1)
class alignas(0x10) AEN0000_00_SecuritySoldier_Standard_AIBP_C : public AEN0000_00_SecuritySoldier_Common_AIBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_EN0000_00_SecuritySoldier_Standard_AIBP_C; // 0x0FE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	int32                                         RemainingBullets;                                  // 0x0FE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RapidFire;                                         // 0x0FEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Variable_BulletsRequiredNum;                       // 0x0FF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ResidentParameter_MagazineCapacity;                // 0x0FF4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFC[0x4];                                      // 0x0FFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSubclassOf<class UEndAIActionPackBase>> AIDefinition_ProwlMoveArray;                       // 0x1000(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSubclassOf<class UEndAIActionPackBase>> AIDefinition_LightAbilityArray;                    // 0x1010(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<TSubclassOf<class UEndAIActionPackBase>> AIDefinition_HardAbilityArray;                     // 0x1020(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ExtraConditionResult;                              // 0x1030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_AIBP(int32 EntryPoint);
	void OnExtraConditionInvoke(class FName ConditionTag);
	void ReceiveBeginPlay();
	void OnStartActionDefinitionInvoke(class FName ActionDefTag);
	void OnMotionMessageInvoke(class FName InMotionName, class FName InName, int32 InIntValue, float InFloatValue);
	void OnActionInvoke(EEndAIIntervalType IntervalType, class FName ExtraIntervalId);
	void OnProwlInvoke(EEndAIProwlCallType CallType);
	void InpActEvt_NumPadNine_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_NumPadEight_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_NumPadSeven_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void EN0000_Is_Using_Potion(bool* PotionResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EN0000_00_SecuritySoldier_Standard_AIBP_C">();
	}
	static class AEN0000_00_SecuritySoldier_Standard_AIBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEN0000_00_SecuritySoldier_Standard_AIBP_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AEN0000_00_SecuritySoldier_Standard_AIBP_C) == 0x000010, "Wrong alignment on AEN0000_00_SecuritySoldier_Standard_AIBP_C");
static_assert(sizeof(AEN0000_00_SecuritySoldier_Standard_AIBP_C) == 0x001040, "Wrong size on AEN0000_00_SecuritySoldier_Standard_AIBP_C");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_AIBP_C, UberGraphFrame_EN0000_00_SecuritySoldier_Standard_AIBP_C) == 0x000FE0, "Member 'AEN0000_00_SecuritySoldier_Standard_AIBP_C::UberGraphFrame_EN0000_00_SecuritySoldier_Standard_AIBP_C' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_AIBP_C, RemainingBullets) == 0x000FE8, "Member 'AEN0000_00_SecuritySoldier_Standard_AIBP_C::RemainingBullets' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_AIBP_C, RapidFire) == 0x000FEC, "Member 'AEN0000_00_SecuritySoldier_Standard_AIBP_C::RapidFire' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_AIBP_C, Variable_BulletsRequiredNum) == 0x000FF0, "Member 'AEN0000_00_SecuritySoldier_Standard_AIBP_C::Variable_BulletsRequiredNum' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_AIBP_C, ResidentParameter_MagazineCapacity) == 0x000FF4, "Member 'AEN0000_00_SecuritySoldier_Standard_AIBP_C::ResidentParameter_MagazineCapacity' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_AIBP_C, AIDefinition_ProwlMoveArray) == 0x001000, "Member 'AEN0000_00_SecuritySoldier_Standard_AIBP_C::AIDefinition_ProwlMoveArray' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_AIBP_C, AIDefinition_LightAbilityArray) == 0x001010, "Member 'AEN0000_00_SecuritySoldier_Standard_AIBP_C::AIDefinition_LightAbilityArray' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_AIBP_C, AIDefinition_HardAbilityArray) == 0x001020, "Member 'AEN0000_00_SecuritySoldier_Standard_AIBP_C::AIDefinition_HardAbilityArray' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_AIBP_C, ExtraConditionResult) == 0x001030, "Member 'AEN0000_00_SecuritySoldier_Standard_AIBP_C::ExtraConditionResult' has a wrong offset!");

}

