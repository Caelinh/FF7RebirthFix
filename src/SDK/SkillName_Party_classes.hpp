#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkillName_Party

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SkillName_Party.SkillName_Party_C
// 0x0048 (0x0410 - 0x03C8)
class USkillName_Party_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       SkillName_Out;                                     // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SkillName_In;                                      // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         Hrz_SkillName;                                     // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_01;                                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_00;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_01;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_02;                                     // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_EnemySkill_Base_00;                            // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_SkillName;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SkillName_Party_C">();
	}
	static class USkillName_Party_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillName_Party_C>();
	}
};
static_assert(alignof(USkillName_Party_C) == 0x000008, "Wrong alignment on USkillName_Party_C");
static_assert(sizeof(USkillName_Party_C) == 0x000410, "Wrong size on USkillName_Party_C");
static_assert(offsetof(USkillName_Party_C, SkillName_Out) == 0x0003C8, "Member 'USkillName_Party_C::SkillName_Out' has a wrong offset!");
static_assert(offsetof(USkillName_Party_C, SkillName_In) == 0x0003D0, "Member 'USkillName_Party_C::SkillName_In' has a wrong offset!");
static_assert(offsetof(USkillName_Party_C, Hrz_SkillName) == 0x0003D8, "Member 'USkillName_Party_C::Hrz_SkillName' has a wrong offset!");
static_assert(offsetof(USkillName_Party_C, Img_Base_01) == 0x0003E0, "Member 'USkillName_Party_C::Img_Base_01' has a wrong offset!");
static_assert(offsetof(USkillName_Party_C, Img_Effect_00) == 0x0003E8, "Member 'USkillName_Party_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(USkillName_Party_C, Img_Effect_01) == 0x0003F0, "Member 'USkillName_Party_C::Img_Effect_01' has a wrong offset!");
static_assert(offsetof(USkillName_Party_C, Img_Effect_02) == 0x0003F8, "Member 'USkillName_Party_C::Img_Effect_02' has a wrong offset!");
static_assert(offsetof(USkillName_Party_C, Img_EnemySkill_Base_00) == 0x000400, "Member 'USkillName_Party_C::Img_EnemySkill_Base_00' has a wrong offset!");
static_assert(offsetof(USkillName_Party_C, Txt_SkillName) == 0x000408, "Member 'USkillName_Party_C::Txt_SkillName' has a wrong offset!");

}

