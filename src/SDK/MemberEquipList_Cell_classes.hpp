#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MemberEquipList_Cell

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MemberEquipList_Cell.MemberEquipList_Cell_C
// 0x0030 (0x0420 - 0x03F0)
class UMemberEquipList_Cell_C final : public UEndMemberEquipListCell
{
public:
	class UWidgetAnimation*                       Selected;                                          // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base_Blue;                                         // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Ring;                                         // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Gradation2;                                        // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              SelectRing1;                                       // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              SelectRing2;                                       // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MemberEquipList_Cell_C">();
	}
	static class UMemberEquipList_Cell_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMemberEquipList_Cell_C>();
	}
};
static_assert(alignof(UMemberEquipList_Cell_C) == 0x000008, "Wrong alignment on UMemberEquipList_Cell_C");
static_assert(sizeof(UMemberEquipList_Cell_C) == 0x000420, "Wrong size on UMemberEquipList_Cell_C");
static_assert(offsetof(UMemberEquipList_Cell_C, Selected) == 0x0003F0, "Member 'UMemberEquipList_Cell_C::Selected' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_Cell_C, Base_Blue) == 0x0003F8, "Member 'UMemberEquipList_Cell_C::Base_Blue' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_Cell_C, Base_Ring) == 0x000400, "Member 'UMemberEquipList_Cell_C::Base_Ring' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_Cell_C, Gradation2) == 0x000408, "Member 'UMemberEquipList_Cell_C::Gradation2' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_Cell_C, SelectRing1) == 0x000410, "Member 'UMemberEquipList_Cell_C::SelectRing1' has a wrong offset!");
static_assert(offsetof(UMemberEquipList_Cell_C, SelectRing2) == 0x000418, "Member 'UMemberEquipList_Cell_C::SelectRing2' has a wrong offset!");

}

