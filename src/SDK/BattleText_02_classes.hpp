#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleText_02

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleText_02.BattleText_02_C
// 0x0080 (0x07E8 - 0x0768)
class UBattleText_02_C final : public UEndPopupMessage
{
public:
	class UWidgetAnimation*                       Danger_Out;                                        // 0x0768(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Danger_Loop;                                       // 0x0770(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Recover_Color;                                     // 0x0778(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Miss_Color;                                        // 0x0780(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Enemy_Color;                                       // 0x0788(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Party_Color;                                       // 0x0790(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Reject_In;                                         // 0x0798(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Parry_Out;                                         // 0x07A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Parry_In;                                          // 0x07A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x07B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Normal_Out;                                        // 0x07B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Normal_In;                                         // 0x07C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All;                                               // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BG_00;                                         // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl;                                               // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Number;                                        // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleText_02_C">();
	}
	static class UBattleText_02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleText_02_C>();
	}
};
static_assert(alignof(UBattleText_02_C) == 0x000008, "Wrong alignment on UBattleText_02_C");
static_assert(sizeof(UBattleText_02_C) == 0x0007E8, "Wrong size on UBattleText_02_C");
static_assert(offsetof(UBattleText_02_C, Danger_Out) == 0x000768, "Member 'UBattleText_02_C::Danger_Out' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Danger_Loop) == 0x000770, "Member 'UBattleText_02_C::Danger_Loop' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Recover_Color) == 0x000778, "Member 'UBattleText_02_C::Recover_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Miss_Color) == 0x000780, "Member 'UBattleText_02_C::Miss_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Enemy_Color) == 0x000788, "Member 'UBattleText_02_C::Enemy_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Party_Color) == 0x000790, "Member 'UBattleText_02_C::Party_Color' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Reject_In) == 0x000798, "Member 'UBattleText_02_C::Reject_In' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Parry_Out) == 0x0007A0, "Member 'UBattleText_02_C::Parry_Out' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Parry_In) == 0x0007A8, "Member 'UBattleText_02_C::Parry_In' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Loop) == 0x0007B0, "Member 'UBattleText_02_C::Loop' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Normal_Out) == 0x0007B8, "Member 'UBattleText_02_C::Normal_Out' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Normal_In) == 0x0007C0, "Member 'UBattleText_02_C::Normal_In' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, All) == 0x0007C8, "Member 'UBattleText_02_C::All' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Img_BG_00) == 0x0007D0, "Member 'UBattleText_02_C::Img_BG_00' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Pnl) == 0x0007D8, "Member 'UBattleText_02_C::Pnl' has a wrong offset!");
static_assert(offsetof(UBattleText_02_C, Txt_Number) == 0x0007E0, "Member 'UBattleText_02_C::Txt_Number' has a wrong offset!");

}

