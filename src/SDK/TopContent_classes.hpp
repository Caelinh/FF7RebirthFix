#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TopContent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TopContent.TopContent_C
// 0x00A8 (0x04A0 - 0x03F8)
class UTopContent_C final : public UEndTopContent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       In_old;                                            // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop2;                                             // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base2_1;                                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseLight1;                                        // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseLight2;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseRing1;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseRing2;                                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Dot1;                                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_00;                                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndGauge*                              EndGauge1;                                         // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndGauge*                              EndGauge2;                                         // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage;                                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_107;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_141;                                      // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Gradation2_1;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line;                                              // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_1;                                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_2;                                            // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TopContent(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TopContent_C">();
	}
	static class UTopContent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTopContent_C>();
	}
};
static_assert(alignof(UTopContent_C) == 0x000008, "Wrong alignment on UTopContent_C");
static_assert(sizeof(UTopContent_C) == 0x0004A0, "Wrong size on UTopContent_C");
static_assert(offsetof(UTopContent_C, UberGraphFrame) == 0x0003F8, "Member 'UTopContent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTopContent_C, In_old) == 0x000400, "Member 'UTopContent_C::In_old' has a wrong offset!");
static_assert(offsetof(UTopContent_C, Loop2) == 0x000408, "Member 'UTopContent_C::Loop2' has a wrong offset!");
static_assert(offsetof(UTopContent_C, Loop) == 0x000410, "Member 'UTopContent_C::Loop' has a wrong offset!");
static_assert(offsetof(UTopContent_C, In) == 0x000418, "Member 'UTopContent_C::In' has a wrong offset!");
static_assert(offsetof(UTopContent_C, Base2_1) == 0x000420, "Member 'UTopContent_C::Base2_1' has a wrong offset!");
static_assert(offsetof(UTopContent_C, BaseLight1) == 0x000428, "Member 'UTopContent_C::BaseLight1' has a wrong offset!");
static_assert(offsetof(UTopContent_C, BaseLight2) == 0x000430, "Member 'UTopContent_C::BaseLight2' has a wrong offset!");
static_assert(offsetof(UTopContent_C, BaseRing1) == 0x000438, "Member 'UTopContent_C::BaseRing1' has a wrong offset!");
static_assert(offsetof(UTopContent_C, BaseRing2) == 0x000440, "Member 'UTopContent_C::BaseRing2' has a wrong offset!");
static_assert(offsetof(UTopContent_C, Dot1) == 0x000448, "Member 'UTopContent_C::Dot1' has a wrong offset!");
static_assert(offsetof(UTopContent_C, Effect_00) == 0x000450, "Member 'UTopContent_C::Effect_00' has a wrong offset!");
static_assert(offsetof(UTopContent_C, EndGauge1) == 0x000458, "Member 'UTopContent_C::EndGauge1' has a wrong offset!");
static_assert(offsetof(UTopContent_C, EndGauge2) == 0x000460, "Member 'UTopContent_C::EndGauge2' has a wrong offset!");
static_assert(offsetof(UTopContent_C, EndImage) == 0x000468, "Member 'UTopContent_C::EndImage' has a wrong offset!");
static_assert(offsetof(UTopContent_C, EndImage_107) == 0x000470, "Member 'UTopContent_C::EndImage_107' has a wrong offset!");
static_assert(offsetof(UTopContent_C, EndImage_141) == 0x000478, "Member 'UTopContent_C::EndImage_141' has a wrong offset!");
static_assert(offsetof(UTopContent_C, Gradation2_1) == 0x000480, "Member 'UTopContent_C::Gradation2_1' has a wrong offset!");
static_assert(offsetof(UTopContent_C, Line) == 0x000488, "Member 'UTopContent_C::Line' has a wrong offset!");
static_assert(offsetof(UTopContent_C, Line_1) == 0x000490, "Member 'UTopContent_C::Line_1' has a wrong offset!");
static_assert(offsetof(UTopContent_C, Line_2) == 0x000498, "Member 'UTopContent_C::Line_2' has a wrong offset!");

}

