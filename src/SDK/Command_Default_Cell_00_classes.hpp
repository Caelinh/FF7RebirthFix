#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Command_Default_Cell_00

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Command_Default_Cell_00.Command_Default_Cell_00_C
// 0x0210 (0x0608 - 0x03F8)
class UCommand_Default_Cell_00_C final : public UEndCmdShortcutCell
{
public:
	class UWidgetAnimation*                       RivengeMode_Default;                               // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Tension_Default;                                   // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TensionLv3;                                        // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TensionLv2;                                        // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TensionLv1;                                        // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ParrySuccess_Pressed;                              // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ParrySuccess;                                      // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GaugeReset;                                        // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SwitchHighlight;                                   // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RivengeHeat_Loop;                                  // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Cmd_Running_Loop;                                  // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       E_BtnDisabled;                                     // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       E_Execution;                                       // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       E_Executable;                                      // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       E_Default;                                         // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Executable;                                      // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Off;                                             // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Default;                                         // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       C_Default;                                         // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_Default;                                         // 0x0490(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       A_Default;                                         // 0x0498(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Disabled;                                          // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Execution;                                       // 0x04A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Charging_Loop;                                   // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Charge;                                          // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       C_Pressed;                                         // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_Off;                                             // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_Running_Loop;                                    // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_Pressed;                                         // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_From3To1;                                        // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_From2To3;                                        // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_From1To2;                                        // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       A_Running_Loop;                                    // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       A_Switch_OnOff;                                    // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndButton*                             Btn;                                               // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommand_BtnPressedEffect_C*            BtnPressedEffect;                                  // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommand_Effect_00_C*                   Command_Effect_00;                                 // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Deco_Left;                                         // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_00;                                         // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_01;                                         // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_02;                                         // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Gradation;                                  // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Light;                                      // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_waku;                                       // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_218;                                      // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_00;                                          // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_01;                                          // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndPieImage*                           Gauge_02;                                          // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_Brave;                                       // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Bullet;                                       // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_SpinCounter_C*                    Icon_SpinCounter;                                  // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_B_01;                                          // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_B_02;                                          // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_Gauge02;                                  // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BtnArrow;                                      // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BtnBase_Off;                                   // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BtnBase_On;                                    // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_Effect_00;                                     // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_01;                                     // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_Effect_Red;                                    // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_GaugeBG;                                       // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Shards_00;                                     // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Shards_01;                                     // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Shards_02;                                     // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommand_ParrySuccessEffect_C*          ParrySuccessEffect;                                // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Number;                                        // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Command_Default_Cell_00_C">();
	}
	static class UCommand_Default_Cell_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommand_Default_Cell_00_C>();
	}
};
static_assert(alignof(UCommand_Default_Cell_00_C) == 0x000008, "Wrong alignment on UCommand_Default_Cell_00_C");
static_assert(sizeof(UCommand_Default_Cell_00_C) == 0x000608, "Wrong size on UCommand_Default_Cell_00_C");
static_assert(offsetof(UCommand_Default_Cell_00_C, RivengeMode_Default) == 0x0003F8, "Member 'UCommand_Default_Cell_00_C::RivengeMode_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Tension_Default) == 0x000400, "Member 'UCommand_Default_Cell_00_C::Tension_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, TensionLv3) == 0x000408, "Member 'UCommand_Default_Cell_00_C::TensionLv3' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, TensionLv2) == 0x000410, "Member 'UCommand_Default_Cell_00_C::TensionLv2' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, TensionLv1) == 0x000418, "Member 'UCommand_Default_Cell_00_C::TensionLv1' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, ParrySuccess_Pressed) == 0x000420, "Member 'UCommand_Default_Cell_00_C::ParrySuccess_Pressed' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, ParrySuccess) == 0x000428, "Member 'UCommand_Default_Cell_00_C::ParrySuccess' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, GaugeReset) == 0x000430, "Member 'UCommand_Default_Cell_00_C::GaugeReset' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, SwitchHighlight) == 0x000438, "Member 'UCommand_Default_Cell_00_C::SwitchHighlight' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, RivengeHeat_Loop) == 0x000440, "Member 'UCommand_Default_Cell_00_C::RivengeHeat_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Cmd_Running_Loop) == 0x000448, "Member 'UCommand_Default_Cell_00_C::Cmd_Running_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, E_BtnDisabled) == 0x000450, "Member 'UCommand_Default_Cell_00_C::E_BtnDisabled' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, E_Execution) == 0x000458, "Member 'UCommand_Default_Cell_00_C::E_Execution' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, E_Executable) == 0x000460, "Member 'UCommand_Default_Cell_00_C::E_Executable' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, E_Default) == 0x000468, "Member 'UCommand_Default_Cell_00_C::E_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, D_Executable) == 0x000470, "Member 'UCommand_Default_Cell_00_C::D_Executable' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, D_Off) == 0x000478, "Member 'UCommand_Default_Cell_00_C::D_Off' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, D_Default) == 0x000480, "Member 'UCommand_Default_Cell_00_C::D_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, C_Default) == 0x000488, "Member 'UCommand_Default_Cell_00_C::C_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, B_Default) == 0x000490, "Member 'UCommand_Default_Cell_00_C::B_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, A_Default) == 0x000498, "Member 'UCommand_Default_Cell_00_C::A_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Disabled) == 0x0004A0, "Member 'UCommand_Default_Cell_00_C::Disabled' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, D_Execution) == 0x0004A8, "Member 'UCommand_Default_Cell_00_C::D_Execution' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, D_Charging_Loop) == 0x0004B0, "Member 'UCommand_Default_Cell_00_C::D_Charging_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, D_Charge) == 0x0004B8, "Member 'UCommand_Default_Cell_00_C::D_Charge' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, C_Pressed) == 0x0004C0, "Member 'UCommand_Default_Cell_00_C::C_Pressed' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, B_Off) == 0x0004C8, "Member 'UCommand_Default_Cell_00_C::B_Off' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, B_Running_Loop) == 0x0004D0, "Member 'UCommand_Default_Cell_00_C::B_Running_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, B_Pressed) == 0x0004D8, "Member 'UCommand_Default_Cell_00_C::B_Pressed' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, B_From3To1) == 0x0004E0, "Member 'UCommand_Default_Cell_00_C::B_From3To1' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, B_From2To3) == 0x0004E8, "Member 'UCommand_Default_Cell_00_C::B_From2To3' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, B_From1To2) == 0x0004F0, "Member 'UCommand_Default_Cell_00_C::B_From1To2' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, A_Running_Loop) == 0x0004F8, "Member 'UCommand_Default_Cell_00_C::A_Running_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, A_Switch_OnOff) == 0x000500, "Member 'UCommand_Default_Cell_00_C::A_Switch_OnOff' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Btn) == 0x000508, "Member 'UCommand_Default_Cell_00_C::Btn' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, BtnPressedEffect) == 0x000510, "Member 'UCommand_Default_Cell_00_C::BtnPressedEffect' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Command_Effect_00) == 0x000518, "Member 'UCommand_Default_Cell_00_C::Command_Effect_00' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Deco_Left) == 0x000520, "Member 'UCommand_Default_Cell_00_C::Deco_Left' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Effect_00) == 0x000528, "Member 'UCommand_Default_Cell_00_C::Effect_00' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Effect_01) == 0x000530, "Member 'UCommand_Default_Cell_00_C::Effect_01' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Effect_02) == 0x000538, "Member 'UCommand_Default_Cell_00_C::Effect_02' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Effect_Gradation) == 0x000540, "Member 'UCommand_Default_Cell_00_C::Effect_Gradation' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Effect_Light) == 0x000548, "Member 'UCommand_Default_Cell_00_C::Effect_Light' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Effect_waku) == 0x000550, "Member 'UCommand_Default_Cell_00_C::Effect_waku' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, EndImage_218) == 0x000558, "Member 'UCommand_Default_Cell_00_C::EndImage_218' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Gauge_00) == 0x000560, "Member 'UCommand_Default_Cell_00_C::Gauge_00' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Gauge_01) == 0x000568, "Member 'UCommand_Default_Cell_00_C::Gauge_01' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Gauge_02) == 0x000570, "Member 'UCommand_Default_Cell_00_C::Gauge_02' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Gauge_Brave) == 0x000578, "Member 'UCommand_Default_Cell_00_C::Gauge_Brave' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Icon_Bullet) == 0x000580, "Member 'UCommand_Default_Cell_00_C::Icon_Bullet' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Icon_SpinCounter) == 0x000588, "Member 'UCommand_Default_Cell_00_C::Icon_SpinCounter' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_B_01) == 0x000590, "Member 'UCommand_Default_Cell_00_C::Img_B_01' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_B_02) == 0x000598, "Member 'UCommand_Default_Cell_00_C::Img_B_02' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_Base_Gauge02) == 0x0005A0, "Member 'UCommand_Default_Cell_00_C::Img_Base_Gauge02' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_BtnArrow) == 0x0005A8, "Member 'UCommand_Default_Cell_00_C::Img_BtnArrow' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_BtnBase_Off) == 0x0005B0, "Member 'UCommand_Default_Cell_00_C::Img_BtnBase_Off' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_BtnBase_On) == 0x0005B8, "Member 'UCommand_Default_Cell_00_C::Img_BtnBase_On' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_Effect_00) == 0x0005C0, "Member 'UCommand_Default_Cell_00_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_Effect_01) == 0x0005C8, "Member 'UCommand_Default_Cell_00_C::Img_Effect_01' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_Effect_Red) == 0x0005D0, "Member 'UCommand_Default_Cell_00_C::Img_Effect_Red' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_GaugeBG) == 0x0005D8, "Member 'UCommand_Default_Cell_00_C::Img_GaugeBG' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_Shards_00) == 0x0005E0, "Member 'UCommand_Default_Cell_00_C::Img_Shards_00' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_Shards_01) == 0x0005E8, "Member 'UCommand_Default_Cell_00_C::Img_Shards_01' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Img_Shards_02) == 0x0005F0, "Member 'UCommand_Default_Cell_00_C::Img_Shards_02' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, ParrySuccessEffect) == 0x0005F8, "Member 'UCommand_Default_Cell_00_C::ParrySuccessEffect' has a wrong offset!");
static_assert(offsetof(UCommand_Default_Cell_00_C, Txt_Number) == 0x000600, "Member 'UCommand_Default_Cell_00_C::Txt_Number' has a wrong offset!");

}

