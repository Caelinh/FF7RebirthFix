#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventProgress_FeedChocobo

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass EventProgress_FeedChocobo.EventProgress_FeedChocobo_C
// 0x0080 (0x0448 - 0x03C8)
class UEventProgress_FeedChocobo_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Progress3;                                         // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Progress2;                                         // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Progress1;                                         // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Progress0;                                         // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Balloon;                                           // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_00;                                           // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Eff;                                          // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBillboard*                          Billboard_Chocobo;                                 // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_00;                                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_01;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_00;                                          // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Gauge_BG;                                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Emotion;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Feed;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_X;                                            // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EventProgress_FeedChocobo_C">();
	}
	static class UEventProgress_FeedChocobo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventProgress_FeedChocobo_C>();
	}
};
static_assert(alignof(UEventProgress_FeedChocobo_C) == 0x000008, "Wrong alignment on UEventProgress_FeedChocobo_C");
static_assert(sizeof(UEventProgress_FeedChocobo_C) == 0x000448, "Wrong size on UEventProgress_FeedChocobo_C");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Progress3) == 0x0003C8, "Member 'UEventProgress_FeedChocobo_C::Progress3' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Progress2) == 0x0003D0, "Member 'UEventProgress_FeedChocobo_C::Progress2' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Progress1) == 0x0003D8, "Member 'UEventProgress_FeedChocobo_C::Progress1' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Progress0) == 0x0003E0, "Member 'UEventProgress_FeedChocobo_C::Progress0' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, In) == 0x0003E8, "Member 'UEventProgress_FeedChocobo_C::In' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Balloon) == 0x0003F0, "Member 'UEventProgress_FeedChocobo_C::Balloon' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Base_00) == 0x0003F8, "Member 'UEventProgress_FeedChocobo_C::Base_00' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Base_Eff) == 0x000400, "Member 'UEventProgress_FeedChocobo_C::Base_Eff' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Billboard_Chocobo) == 0x000408, "Member 'UEventProgress_FeedChocobo_C::Billboard_Chocobo' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Effect_00) == 0x000410, "Member 'UEventProgress_FeedChocobo_C::Effect_00' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Effect_01) == 0x000418, "Member 'UEventProgress_FeedChocobo_C::Effect_01' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Gauge_00) == 0x000420, "Member 'UEventProgress_FeedChocobo_C::Gauge_00' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Gauge_BG) == 0x000428, "Member 'UEventProgress_FeedChocobo_C::Gauge_BG' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Icon_Emotion) == 0x000430, "Member 'UEventProgress_FeedChocobo_C::Icon_Emotion' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Icon_Feed) == 0x000438, "Member 'UEventProgress_FeedChocobo_C::Icon_Feed' has a wrong offset!");
static_assert(offsetof(UEventProgress_FeedChocobo_C, Icon_X) == 0x000440, "Member 'UEventProgress_FeedChocobo_C::Icon_X' has a wrong offset!");

}

