#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dice

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Dice.Dice_C
// 0x0050 (0x0418 - 0x03C8)
class UDice_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base_00;                                           // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_00;                                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_01;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_02;                                         // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Dice;                                         // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_TxtBase;                                       // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_TxtBase_1;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Dice_C">();
	}
	static class UDice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDice_C>();
	}
};
static_assert(alignof(UDice_C) == 0x000008, "Wrong alignment on UDice_C");
static_assert(sizeof(UDice_C) == 0x000418, "Wrong size on UDice_C");
static_assert(offsetof(UDice_C, Out) == 0x0003C8, "Member 'UDice_C::Out' has a wrong offset!");
static_assert(offsetof(UDice_C, Loop) == 0x0003D0, "Member 'UDice_C::Loop' has a wrong offset!");
static_assert(offsetof(UDice_C, In) == 0x0003D8, "Member 'UDice_C::In' has a wrong offset!");
static_assert(offsetof(UDice_C, Base_00) == 0x0003E0, "Member 'UDice_C::Base_00' has a wrong offset!");
static_assert(offsetof(UDice_C, Effect_00) == 0x0003E8, "Member 'UDice_C::Effect_00' has a wrong offset!");
static_assert(offsetof(UDice_C, Effect_01) == 0x0003F0, "Member 'UDice_C::Effect_01' has a wrong offset!");
static_assert(offsetof(UDice_C, Effect_02) == 0x0003F8, "Member 'UDice_C::Effect_02' has a wrong offset!");
static_assert(offsetof(UDice_C, Icon_Dice) == 0x000400, "Member 'UDice_C::Icon_Dice' has a wrong offset!");
static_assert(offsetof(UDice_C, Img_TxtBase) == 0x000408, "Member 'UDice_C::Img_TxtBase' has a wrong offset!");
static_assert(offsetof(UDice_C, Img_TxtBase_1) == 0x000410, "Member 'UDice_C::Img_TxtBase_1' has a wrong offset!");

}

