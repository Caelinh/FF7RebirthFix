#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NewSenseLeft

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass NewSenseLeft.NewSenseLeft_C
// 0x0088 (0x0490 - 0x0408)
class UNewSenseLeft_C final : public UEndNewSenseLeft
{
public:
	class UEndImage*                              Arrow_00;                                          // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Arrow_01;                                          // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_HP;                                          // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_L;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_L_1;                                      // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_L_2;                                      // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_L_3;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_L_4;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_L_5;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_L_6;                                      // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_HP_Gauge_BG;                                   // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Icon;                                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_HP;                                            // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_HP;                                            // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_HP_Num;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_HP_NumMax;                                     // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Type;                                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NewSenseLeft_C">();
	}
	static class UNewSenseLeft_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNewSenseLeft_C>();
	}
};
static_assert(alignof(UNewSenseLeft_C) == 0x000008, "Wrong alignment on UNewSenseLeft_C");
static_assert(sizeof(UNewSenseLeft_C) == 0x000490, "Wrong size on UNewSenseLeft_C");
static_assert(offsetof(UNewSenseLeft_C, Arrow_00) == 0x000408, "Member 'UNewSenseLeft_C::Arrow_00' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Arrow_01) == 0x000410, "Member 'UNewSenseLeft_C::Arrow_01' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Gauge_HP) == 0x000418, "Member 'UNewSenseLeft_C::Gauge_HP' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Img_Base_L) == 0x000420, "Member 'UNewSenseLeft_C::Img_Base_L' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Img_Base_L_1) == 0x000428, "Member 'UNewSenseLeft_C::Img_Base_L_1' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Img_Base_L_2) == 0x000430, "Member 'UNewSenseLeft_C::Img_Base_L_2' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Img_Base_L_3) == 0x000438, "Member 'UNewSenseLeft_C::Img_Base_L_3' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Img_Base_L_4) == 0x000440, "Member 'UNewSenseLeft_C::Img_Base_L_4' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Img_Base_L_5) == 0x000448, "Member 'UNewSenseLeft_C::Img_Base_L_5' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Img_Base_L_6) == 0x000450, "Member 'UNewSenseLeft_C::Img_Base_L_6' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Img_HP_Gauge_BG) == 0x000458, "Member 'UNewSenseLeft_C::Img_HP_Gauge_BG' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Ims_Icon) == 0x000460, "Member 'UNewSenseLeft_C::Ims_Icon' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Nut_HP) == 0x000468, "Member 'UNewSenseLeft_C::Nut_HP' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Txt_HP) == 0x000470, "Member 'UNewSenseLeft_C::Txt_HP' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Txt_HP_Num) == 0x000478, "Member 'UNewSenseLeft_C::Txt_HP_Num' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Txt_HP_NumMax) == 0x000480, "Member 'UNewSenseLeft_C::Txt_HP_NumMax' has a wrong offset!");
static_assert(offsetof(UNewSenseLeft_C, Txt_Type) == 0x000488, "Member 'UNewSenseLeft_C::Txt_Type' has a wrong offset!");

}

