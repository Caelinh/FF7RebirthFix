#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Gauge_Cell

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Gauge_Cell.Gauge_Cell_C
// 0x01C8 (0x0C10 - 0x0A48)
class UGauge_Cell_C final : public UEndMenuStatusPaneCell
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A48(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       CoopGaugeEffect;                                   // 0x0A50(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LimitLevel_Out;                                    // 0x0A58(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LimitLevel_In;                                     // 0x0A60(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Slow_Loop;                                         // 0x0A68(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Haste_Loop;                                        // 0x0A70(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BattleField_Shift2;                                // 0x0A78(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CommandOpen;                                       // 0x0A80(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BattleField_Shift;                                 // 0x0A88(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MemberLeft;                                        // 0x0A90(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MemberJoin;                                        // 0x0A98(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_Nut_Gauge_List;                                // 0x0AA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UATBGauge_C*                            ATBGauge;                                          // 0x0AA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ATBGauge_Effect;                                   // 0x0AB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ATBGauge_Effect_00;                                // 0x0AB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              CoopEffect_00;                                     // 0x0AC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              CoopEffect_01;                                     // 0x0AC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              CoopEffect_02;                                     // 0x0AD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCooperation_Effect_C*                  Cooperation_Effect;                                // 0x0AD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        CoopGauge;                                         // 0x0AE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Deco_00;                                           // 0x0AE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_B1;                                         // 0x0AF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_B2;                                         // 0x0AF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_LimitLevel_00;                              // 0x0B00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_HP;                                          // 0x0B08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_Limit;                                       // 0x0B10(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_MP;                                          // 0x0B18(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_BattleLeader;                                 // 0x0B20(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Status_C*                         Icon_Status_00;                                    // 0x0B28(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Status_C*                         Icon_Status_01;                                    // 0x0B30(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Status_C*                         Icon_Status_02;                                    // 0x0B38(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Status_C*                         Icon_Status_03;                                    // 0x0B40(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Status_C*                         Icon_Status_04;                                    // 0x0B48(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Status_C*                         Icon_Status_05;                                    // 0x0B50(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_StatusSimple_C*                   Icon_StatusSimple_00;                              // 0x0B58(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_StatusSimple_C*                   Icon_StatusSimple_01;                              // 0x0B60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_00;                                       // 0x0B68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_01;                                       // 0x0B70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_HP_Gauge_BG;                                   // 0x0B78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_JoinEffect_00;                                 // 0x0B80(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Limit_Gauge_BG;                                // 0x0B88(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_MP_Gauge_BG;                                   // 0x0B90(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStatus_LimitEffect_00_C*               LimitEffect_00;                                    // 0x0B98(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStatus_LimitEffect_01_C*               LimitEffect_01;                                    // 0x0BA0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULimitLevel_C*                          LimitLevel;                                        // 0x0BA8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMPCost0_Effect_C*                      MPCost0_Effect;                                    // 0x0BB0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USaintCharge_C*                         SaintCharge;                                       // 0x0BB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStatus_CurrentLight_C*                 Status_CurrentLight;                               // 0x0BC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UStatus_JoinEffect_C*                   Status_JoinEffect;                                 // 0x0BC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_ATB;                                           // 0x0BD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_HP;                                            // 0x0BD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_HP_MaxNum;                                     // 0x0BE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_HP_Num;                                        // 0x0BE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Limit;                                         // 0x0BF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_MP;                                            // 0x0BF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_MP_Num;                                        // 0x0C00(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Name;                                          // 0x0C08(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Gauge_Cell(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Gauge_Cell_C">();
	}
	static class UGauge_Cell_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGauge_Cell_C>();
	}
};
static_assert(alignof(UGauge_Cell_C) == 0x000008, "Wrong alignment on UGauge_Cell_C");
static_assert(sizeof(UGauge_Cell_C) == 0x000C10, "Wrong size on UGauge_Cell_C");
static_assert(offsetof(UGauge_Cell_C, UberGraphFrame) == 0x000A48, "Member 'UGauge_Cell_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, CoopGaugeEffect) == 0x000A50, "Member 'UGauge_Cell_C::CoopGaugeEffect' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, LimitLevel_Out) == 0x000A58, "Member 'UGauge_Cell_C::LimitLevel_Out' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, LimitLevel_In) == 0x000A60, "Member 'UGauge_Cell_C::LimitLevel_In' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Slow_Loop) == 0x000A68, "Member 'UGauge_Cell_C::Slow_Loop' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Haste_Loop) == 0x000A70, "Member 'UGauge_Cell_C::Haste_Loop' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, BattleField_Shift2) == 0x000A78, "Member 'UGauge_Cell_C::BattleField_Shift2' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, CommandOpen) == 0x000A80, "Member 'UGauge_Cell_C::CommandOpen' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, BattleField_Shift) == 0x000A88, "Member 'UGauge_Cell_C::BattleField_Shift' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, MemberLeft) == 0x000A90, "Member 'UGauge_Cell_C::MemberLeft' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, MemberJoin) == 0x000A98, "Member 'UGauge_Cell_C::MemberJoin' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, All_Nut_Gauge_List) == 0x000AA0, "Member 'UGauge_Cell_C::All_Nut_Gauge_List' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, ATBGauge) == 0x000AA8, "Member 'UGauge_Cell_C::ATBGauge' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, ATBGauge_Effect) == 0x000AB0, "Member 'UGauge_Cell_C::ATBGauge_Effect' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, ATBGauge_Effect_00) == 0x000AB8, "Member 'UGauge_Cell_C::ATBGauge_Effect_00' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, CoopEffect_00) == 0x000AC0, "Member 'UGauge_Cell_C::CoopEffect_00' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, CoopEffect_01) == 0x000AC8, "Member 'UGauge_Cell_C::CoopEffect_01' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, CoopEffect_02) == 0x000AD0, "Member 'UGauge_Cell_C::CoopEffect_02' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Cooperation_Effect) == 0x000AD8, "Member 'UGauge_Cell_C::Cooperation_Effect' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, CoopGauge) == 0x000AE0, "Member 'UGauge_Cell_C::CoopGauge' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Deco_00) == 0x000AE8, "Member 'UGauge_Cell_C::Deco_00' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Effect_B1) == 0x000AF0, "Member 'UGauge_Cell_C::Effect_B1' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Effect_B2) == 0x000AF8, "Member 'UGauge_Cell_C::Effect_B2' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Effect_LimitLevel_00) == 0x000B00, "Member 'UGauge_Cell_C::Effect_LimitLevel_00' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Gauge_HP) == 0x000B08, "Member 'UGauge_Cell_C::Gauge_HP' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Gauge_Limit) == 0x000B10, "Member 'UGauge_Cell_C::Gauge_Limit' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Gauge_MP) == 0x000B18, "Member 'UGauge_Cell_C::Gauge_MP' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Icon_BattleLeader) == 0x000B20, "Member 'UGauge_Cell_C::Icon_BattleLeader' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Icon_Status_00) == 0x000B28, "Member 'UGauge_Cell_C::Icon_Status_00' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Icon_Status_01) == 0x000B30, "Member 'UGauge_Cell_C::Icon_Status_01' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Icon_Status_02) == 0x000B38, "Member 'UGauge_Cell_C::Icon_Status_02' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Icon_Status_03) == 0x000B40, "Member 'UGauge_Cell_C::Icon_Status_03' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Icon_Status_04) == 0x000B48, "Member 'UGauge_Cell_C::Icon_Status_04' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Icon_Status_05) == 0x000B50, "Member 'UGauge_Cell_C::Icon_Status_05' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Icon_StatusSimple_00) == 0x000B58, "Member 'UGauge_Cell_C::Icon_StatusSimple_00' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Icon_StatusSimple_01) == 0x000B60, "Member 'UGauge_Cell_C::Icon_StatusSimple_01' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Img_Base_00) == 0x000B68, "Member 'UGauge_Cell_C::Img_Base_00' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Img_Base_01) == 0x000B70, "Member 'UGauge_Cell_C::Img_Base_01' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Img_HP_Gauge_BG) == 0x000B78, "Member 'UGauge_Cell_C::Img_HP_Gauge_BG' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Img_JoinEffect_00) == 0x000B80, "Member 'UGauge_Cell_C::Img_JoinEffect_00' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Img_Limit_Gauge_BG) == 0x000B88, "Member 'UGauge_Cell_C::Img_Limit_Gauge_BG' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Img_MP_Gauge_BG) == 0x000B90, "Member 'UGauge_Cell_C::Img_MP_Gauge_BG' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, LimitEffect_00) == 0x000B98, "Member 'UGauge_Cell_C::LimitEffect_00' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, LimitEffect_01) == 0x000BA0, "Member 'UGauge_Cell_C::LimitEffect_01' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, LimitLevel) == 0x000BA8, "Member 'UGauge_Cell_C::LimitLevel' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, MPCost0_Effect) == 0x000BB0, "Member 'UGauge_Cell_C::MPCost0_Effect' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, SaintCharge) == 0x000BB8, "Member 'UGauge_Cell_C::SaintCharge' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Status_CurrentLight) == 0x000BC0, "Member 'UGauge_Cell_C::Status_CurrentLight' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Status_JoinEffect) == 0x000BC8, "Member 'UGauge_Cell_C::Status_JoinEffect' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Txt_ATB) == 0x000BD0, "Member 'UGauge_Cell_C::Txt_ATB' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Txt_HP) == 0x000BD8, "Member 'UGauge_Cell_C::Txt_HP' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Txt_HP_MaxNum) == 0x000BE0, "Member 'UGauge_Cell_C::Txt_HP_MaxNum' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Txt_HP_Num) == 0x000BE8, "Member 'UGauge_Cell_C::Txt_HP_Num' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Txt_Limit) == 0x000BF0, "Member 'UGauge_Cell_C::Txt_Limit' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Txt_MP) == 0x000BF8, "Member 'UGauge_Cell_C::Txt_MP' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Txt_MP_Num) == 0x000C00, "Member 'UGauge_Cell_C::Txt_MP_Num' has a wrong offset!");
static_assert(offsetof(UGauge_Cell_C, Txt_Name) == 0x000C08, "Member 'UGauge_Cell_C::Txt_Name' has a wrong offset!");

}

