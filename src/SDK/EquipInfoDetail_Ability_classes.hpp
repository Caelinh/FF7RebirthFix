#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquipInfoDetail_Ability

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass EquipInfoDetail_Ability.EquipInfoDetail_Ability_C
// 0x0098 (0x0480 - 0x03E8)
class UEquipInfoDetail_Ability_C final : public UEndEquipInfoDetailAbility
{
public:
	class UEndImage*                              Bg_1;                                              // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_58;                                       // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_170;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon;                                              // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_InfoWindowBg_C*               InfoWindowBg;                                      // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line;                                              // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_1;                                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_1;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_2;                                       // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_3;                                       // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_4;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_5;                                       // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_6;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_7;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_8;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MovieBase;                                         // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MovieFrame;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Title;                                         // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Title3;                                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EquipInfoDetail_Ability_C">();
	}
	static class UEquipInfoDetail_Ability_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEquipInfoDetail_Ability_C>();
	}
};
static_assert(alignof(UEquipInfoDetail_Ability_C) == 0x000008, "Wrong alignment on UEquipInfoDetail_Ability_C");
static_assert(sizeof(UEquipInfoDetail_Ability_C) == 0x000480, "Wrong size on UEquipInfoDetail_Ability_C");
static_assert(offsetof(UEquipInfoDetail_Ability_C, Bg_1) == 0x0003E8, "Member 'UEquipInfoDetail_Ability_C::Bg_1' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, EndImage_58) == 0x0003F0, "Member 'UEquipInfoDetail_Ability_C::EndImage_58' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, EndImage_170) == 0x0003F8, "Member 'UEquipInfoDetail_Ability_C::EndImage_170' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, Icon) == 0x000400, "Member 'UEquipInfoDetail_Ability_C::Icon' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, InfoWindowBg) == 0x000408, "Member 'UEquipInfoDetail_Ability_C::InfoWindowBg' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, Line) == 0x000410, "Member 'UEquipInfoDetail_Ability_C::Line' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, Line_1) == 0x000418, "Member 'UEquipInfoDetail_Ability_C::Line_1' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, ListPoint_1) == 0x000420, "Member 'UEquipInfoDetail_Ability_C::ListPoint_1' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, ListPoint_2) == 0x000428, "Member 'UEquipInfoDetail_Ability_C::ListPoint_2' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, ListPoint_3) == 0x000430, "Member 'UEquipInfoDetail_Ability_C::ListPoint_3' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, ListPoint_4) == 0x000438, "Member 'UEquipInfoDetail_Ability_C::ListPoint_4' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, ListPoint_5) == 0x000440, "Member 'UEquipInfoDetail_Ability_C::ListPoint_5' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, ListPoint_6) == 0x000448, "Member 'UEquipInfoDetail_Ability_C::ListPoint_6' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, ListPoint_7) == 0x000450, "Member 'UEquipInfoDetail_Ability_C::ListPoint_7' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, ListPoint_8) == 0x000458, "Member 'UEquipInfoDetail_Ability_C::ListPoint_8' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, MovieBase) == 0x000460, "Member 'UEquipInfoDetail_Ability_C::MovieBase' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, MovieFrame) == 0x000468, "Member 'UEquipInfoDetail_Ability_C::MovieFrame' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, Txt_Title) == 0x000470, "Member 'UEquipInfoDetail_Ability_C::Txt_Title' has a wrong offset!");
static_assert(offsetof(UEquipInfoDetail_Ability_C, Txt_Title3) == 0x000478, "Member 'UEquipInfoDetail_Ability_C::Txt_Title3' has a wrong offset!");

}

