#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MobPrefabTemplate_ReactionAndContact_04

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MobPrefabTemplate_ReactionAndContact_03_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MobPrefabTemplate_ReactionAndContact_04.MobPrefabTemplate_ReactionAndContact_04_C
// 0x0260 (0x0EC0 - 0x0C60)
class AMobPrefabTemplate_ReactionAndContact_04_C : public AMobPrefabTemplate_ReactionAndContact_03_C
{
public:
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_MobPrefabTemplate_ReactionAndContact_04_C; // 0x0C58(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	TSoftClassPtr<class UClass>                   CharacterClass04;                                  // 0x0C60(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   LoopMotionName04;                                  // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   AttachActor04;                                     // 0x0C90(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   AttachSocketName04;                                // 0x0CB8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableReaction04;                                  // 0x0CC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableContact04;                                   // 0x0CC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ContactDuringReaction04;                           // 0x0CC2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC3[0x1];                                      // 0x0CC3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ContactForwardLeftMotionName04;                    // 0x0CC4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactForwardRightMotionName04;                   // 0x0CCC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactBackLeftMotionName04;                       // 0x0CD4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactBackRightMotionName04;                      // 0x0CDC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactBlendTime04;                                // 0x0CE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FName>                ContactPropagateMotionTable04;                     // 0x0CE8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateForwardLeftMotionTable04;          // 0x0D38(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateForwardRightMotionTable04;         // 0x0D88(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateBackLeftMotionTable04;             // 0x0DD8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateBackRightMotionTable04;            // 0x0E28(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ContactPropagateBlendTime04;                       // 0x0E78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutMotionName04;                            // 0x0E7C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactOutBlendTime04;                             // 0x0E84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutReplaceBaseMotionName04;                 // 0x0E88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionMotionName04;                              // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionBlendTime04;                               // 0x0E98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionReplaceBaseMotionName04;                   // 0x0E9C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionOutMotionName04;                           // 0x0EA4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionOutBlendTime04;                            // 0x0EAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionOutReplaceBaseMotionName04;                // 0x0EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReactionOnce04;                                    // 0x0EB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MobPrefabTemplate_ReactionAndContact_04(int32 EntryPoint);
	void OnPreUpdateRegistry();
	void GetContext(class FName MobId, bool* EnableReaction, bool* EnableContact, bool* ContactDuringReaction, class FName* ForwardLeftMotion, class FName* ForwardRightMotion, class FName* BackLeftMotion, class FName* BackRightMotion, float* ContactBlendTime, TMap<class FName, class FName>* ContactPropagateMotionTable, TMap<class FName, class FName>* ContactPropagateForwardLeftMotionTable, TMap<class FName, class FName>* ContactPropagateForwardRightMotionTable, TMap<class FName, class FName>* ContactPropagateBackLeftMotionTable, TMap<class FName, class FName>* ContactPropagateBackRightMotionTable, float* ContactPropagateBlendTime, class FName* ContactOutMotionName, float* ContactOutBlendTime, class FName* ContactOutReplaceBaseMotionName, class FName* Motion, float* BlendTime, class FName* ReplaceBaseMotion, class FName* ReactionOutMotionName, float* ReactionOutBlendTime, class FName* ReactionOutReplaceBaseMotionName, bool* PlayMotionOnce);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MobPrefabTemplate_ReactionAndContact_04_C">();
	}
	static class AMobPrefabTemplate_ReactionAndContact_04_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMobPrefabTemplate_ReactionAndContact_04_C>();
	}
};
static_assert(alignof(AMobPrefabTemplate_ReactionAndContact_04_C) == 0x000010, "Wrong alignment on AMobPrefabTemplate_ReactionAndContact_04_C");
static_assert(sizeof(AMobPrefabTemplate_ReactionAndContact_04_C) == 0x000EC0, "Wrong size on AMobPrefabTemplate_ReactionAndContact_04_C");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, UberGraphFrame_MobPrefabTemplate_ReactionAndContact_04_C) == 0x000C58, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::UberGraphFrame_MobPrefabTemplate_ReactionAndContact_04_C' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, CharacterClass04) == 0x000C60, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::CharacterClass04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, LoopMotionName04) == 0x000C88, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::LoopMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, AttachActor04) == 0x000C90, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::AttachActor04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, AttachSocketName04) == 0x000CB8, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::AttachSocketName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, EnableReaction04) == 0x000CC0, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::EnableReaction04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, EnableContact04) == 0x000CC1, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::EnableContact04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactDuringReaction04) == 0x000CC2, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactDuringReaction04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactForwardLeftMotionName04) == 0x000CC4, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactForwardLeftMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactForwardRightMotionName04) == 0x000CCC, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactForwardRightMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactBackLeftMotionName04) == 0x000CD4, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactBackLeftMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactBackRightMotionName04) == 0x000CDC, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactBackRightMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactBlendTime04) == 0x000CE4, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactBlendTime04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactPropagateMotionTable04) == 0x000CE8, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactPropagateMotionTable04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactPropagateForwardLeftMotionTable04) == 0x000D38, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactPropagateForwardLeftMotionTable04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactPropagateForwardRightMotionTable04) == 0x000D88, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactPropagateForwardRightMotionTable04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactPropagateBackLeftMotionTable04) == 0x000DD8, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactPropagateBackLeftMotionTable04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactPropagateBackRightMotionTable04) == 0x000E28, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactPropagateBackRightMotionTable04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactPropagateBlendTime04) == 0x000E78, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactPropagateBlendTime04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactOutMotionName04) == 0x000E7C, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactOutMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactOutBlendTime04) == 0x000E84, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactOutBlendTime04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ContactOutReplaceBaseMotionName04) == 0x000E88, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ContactOutReplaceBaseMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ReactionMotionName04) == 0x000E90, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ReactionMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ReactionBlendTime04) == 0x000E98, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ReactionBlendTime04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ReactionReplaceBaseMotionName04) == 0x000E9C, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ReactionReplaceBaseMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ReactionOutMotionName04) == 0x000EA4, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ReactionOutMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ReactionOutBlendTime04) == 0x000EAC, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ReactionOutBlendTime04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ReactionOutReplaceBaseMotionName04) == 0x000EB0, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ReactionOutReplaceBaseMotionName04' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_04_C, ReactionOnce04) == 0x000EB8, "Member 'AMobPrefabTemplate_ReactionAndContact_04_C::ReactionOnce04' has a wrong offset!");

}

