#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MemberChange_Btn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MemberChange_Btn.MemberChange_Btn_C
// 0x01A0 (0x0608 - 0x0468)
class UMemberChange_Btn_C final : public UEndMemberChangeBtn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0468(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       Change;                                            // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Lock_Detial;                                       // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Lock_BtnHover;                                     // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Lock;                                              // 0x0490(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FieldLeader_Detial;                                // 0x0498(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FieldLeader_BtnHover;                              // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FieldLeader;                                       // 0x04A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Off_Detail;                                        // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Off_Selected;                                      // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On_Detial;                                         // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Off_BtnHover;                                      // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BattleLeader;                                      // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On_Selected;                                       // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Off;                                               // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On;                                                // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       On_BtnHover;                                       // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Zero1;                                             // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero2;                                             // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero2_1;                                           // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero2_2;                                           // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero2_3;                                           // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero3;                                             // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero3_1;                                           // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero3_2;                                           // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero3_3;                                           // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero4;                                             // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero4_1;                                           // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero4_2;                                           // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Zero4_3;                                           // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Lock;                                         // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndButton*                             Btn;                                               // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Cursor_Frame1;                                     // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Cursor_Frame1_1;                                   // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_IconBottom;                                 // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_IconLeft;                                   // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_IconRight;                                  // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_IconTop;                                    // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              FieldLeaderIcon;                                   // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Gauge_Frame;                                       // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_BattleLeader;                                 // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Change;                                       // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Lock;                                         // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             ImgBase_1;                                         // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             InfoBase;                                          // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             InfoBase_Frame;                                    // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             InfoBase_shadow;                                   // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line;                                              // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line1;                                             // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MarkBase;                                          // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MarkFrame;                                         // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MemberChange_Btn(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MemberChange_Btn_C">();
	}
	static class UMemberChange_Btn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMemberChange_Btn_C>();
	}
};
static_assert(alignof(UMemberChange_Btn_C) == 0x000008, "Wrong alignment on UMemberChange_Btn_C");
static_assert(sizeof(UMemberChange_Btn_C) == 0x000608, "Wrong size on UMemberChange_Btn_C");
static_assert(offsetof(UMemberChange_Btn_C, UberGraphFrame) == 0x000468, "Member 'UMemberChange_Btn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Change) == 0x000470, "Member 'UMemberChange_Btn_C::Change' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Loop) == 0x000478, "Member 'UMemberChange_Btn_C::Loop' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Lock_Detial) == 0x000480, "Member 'UMemberChange_Btn_C::Lock_Detial' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Lock_BtnHover) == 0x000488, "Member 'UMemberChange_Btn_C::Lock_BtnHover' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Lock) == 0x000490, "Member 'UMemberChange_Btn_C::Lock' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, FieldLeader_Detial) == 0x000498, "Member 'UMemberChange_Btn_C::FieldLeader_Detial' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, FieldLeader_BtnHover) == 0x0004A0, "Member 'UMemberChange_Btn_C::FieldLeader_BtnHover' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, FieldLeader) == 0x0004A8, "Member 'UMemberChange_Btn_C::FieldLeader' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Off_Detail) == 0x0004B0, "Member 'UMemberChange_Btn_C::Off_Detail' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Off_Selected) == 0x0004B8, "Member 'UMemberChange_Btn_C::Off_Selected' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, On_Detial) == 0x0004C0, "Member 'UMemberChange_Btn_C::On_Detial' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Off_BtnHover) == 0x0004C8, "Member 'UMemberChange_Btn_C::Off_BtnHover' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, BattleLeader) == 0x0004D0, "Member 'UMemberChange_Btn_C::BattleLeader' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, On_Selected) == 0x0004D8, "Member 'UMemberChange_Btn_C::On_Selected' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Off) == 0x0004E0, "Member 'UMemberChange_Btn_C::Off' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, On) == 0x0004E8, "Member 'UMemberChange_Btn_C::On' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, On_BtnHover) == 0x0004F0, "Member 'UMemberChange_Btn_C::On_BtnHover' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero1) == 0x0004F8, "Member 'UMemberChange_Btn_C::Zero1' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero2) == 0x000500, "Member 'UMemberChange_Btn_C::Zero2' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero2_1) == 0x000508, "Member 'UMemberChange_Btn_C::Zero2_1' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero2_2) == 0x000510, "Member 'UMemberChange_Btn_C::Zero2_2' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero2_3) == 0x000518, "Member 'UMemberChange_Btn_C::Zero2_3' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero3) == 0x000520, "Member 'UMemberChange_Btn_C::Zero3' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero3_1) == 0x000528, "Member 'UMemberChange_Btn_C::Zero3_1' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero3_2) == 0x000530, "Member 'UMemberChange_Btn_C::Zero3_2' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero3_3) == 0x000538, "Member 'UMemberChange_Btn_C::Zero3_3' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero4) == 0x000540, "Member 'UMemberChange_Btn_C::Zero4' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero4_1) == 0x000548, "Member 'UMemberChange_Btn_C::Zero4_1' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero4_2) == 0x000550, "Member 'UMemberChange_Btn_C::Zero4_2' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Zero4_3) == 0x000558, "Member 'UMemberChange_Btn_C::Zero4_3' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Base_Lock) == 0x000560, "Member 'UMemberChange_Btn_C::Base_Lock' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Btn) == 0x000568, "Member 'UMemberChange_Btn_C::Btn' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Cursor_Frame1) == 0x000570, "Member 'UMemberChange_Btn_C::Cursor_Frame1' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Cursor_Frame1_1) == 0x000578, "Member 'UMemberChange_Btn_C::Cursor_Frame1_1' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Cursor_IconBottom) == 0x000580, "Member 'UMemberChange_Btn_C::Cursor_IconBottom' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Cursor_IconLeft) == 0x000588, "Member 'UMemberChange_Btn_C::Cursor_IconLeft' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Cursor_IconRight) == 0x000590, "Member 'UMemberChange_Btn_C::Cursor_IconRight' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Cursor_IconTop) == 0x000598, "Member 'UMemberChange_Btn_C::Cursor_IconTop' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, FieldLeaderIcon) == 0x0005A0, "Member 'UMemberChange_Btn_C::FieldLeaderIcon' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Gauge_Frame) == 0x0005A8, "Member 'UMemberChange_Btn_C::Gauge_Frame' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Icon_BattleLeader) == 0x0005B0, "Member 'UMemberChange_Btn_C::Icon_BattleLeader' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Icon_Change) == 0x0005B8, "Member 'UMemberChange_Btn_C::Icon_Change' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Icon_Lock) == 0x0005C0, "Member 'UMemberChange_Btn_C::Icon_Lock' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, ImgBase_1) == 0x0005C8, "Member 'UMemberChange_Btn_C::ImgBase_1' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, InfoBase) == 0x0005D0, "Member 'UMemberChange_Btn_C::InfoBase' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, InfoBase_Frame) == 0x0005D8, "Member 'UMemberChange_Btn_C::InfoBase_Frame' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, InfoBase_shadow) == 0x0005E0, "Member 'UMemberChange_Btn_C::InfoBase_shadow' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Line) == 0x0005E8, "Member 'UMemberChange_Btn_C::Line' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, Line1) == 0x0005F0, "Member 'UMemberChange_Btn_C::Line1' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, MarkBase) == 0x0005F8, "Member 'UMemberChange_Btn_C::MarkBase' has a wrong offset!");
static_assert(offsetof(UMemberChange_Btn_C, MarkFrame) == 0x000600, "Member 'UMemberChange_Btn_C::MarkFrame' has a wrong offset!");

}

