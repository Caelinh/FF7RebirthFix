#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Command_SummonEffect

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Command_SummonEffect.Command_SummonEffect_C
// 0x00D8 (0x04B8 - 0x03E0)
class UCommand_SummonEffect_C final : public UEndMenuCmdSummonEffect
{
public:
	class UWidgetAnimation*                       Hovered;                                           // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Press;                                             // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_Nut;                                           // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Color_00;                                          // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Color_01;                                          // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Color_02;                                          // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light_00;                                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light_01;                                          // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light_02;                                          // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light_03;                                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light_04;                                          // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_00;                                           // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MagicCircle;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Particle_00;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Particle_01;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Particle_02;                                       // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Particle_03;                                       // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Particle_04;                                       // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Particle_05;                                       // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Particle_06;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl_Color;                                         // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl_Light;                                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl_Particle;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Rainbow;                                           // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Command_SummonEffect_C">();
	}
	static class UCommand_SummonEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommand_SummonEffect_C>();
	}
};
static_assert(alignof(UCommand_SummonEffect_C) == 0x000008, "Wrong alignment on UCommand_SummonEffect_C");
static_assert(sizeof(UCommand_SummonEffect_C) == 0x0004B8, "Wrong size on UCommand_SummonEffect_C");
static_assert(offsetof(UCommand_SummonEffect_C, Hovered) == 0x0003E0, "Member 'UCommand_SummonEffect_C::Hovered' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Out) == 0x0003E8, "Member 'UCommand_SummonEffect_C::Out' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Press) == 0x0003F0, "Member 'UCommand_SummonEffect_C::Press' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, In) == 0x0003F8, "Member 'UCommand_SummonEffect_C::In' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Loop) == 0x000400, "Member 'UCommand_SummonEffect_C::Loop' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, All_Nut) == 0x000408, "Member 'UCommand_SummonEffect_C::All_Nut' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Color_00) == 0x000410, "Member 'UCommand_SummonEffect_C::Color_00' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Color_01) == 0x000418, "Member 'UCommand_SummonEffect_C::Color_01' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Color_02) == 0x000420, "Member 'UCommand_SummonEffect_C::Color_02' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Light_00) == 0x000428, "Member 'UCommand_SummonEffect_C::Light_00' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Light_01) == 0x000430, "Member 'UCommand_SummonEffect_C::Light_01' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Light_02) == 0x000438, "Member 'UCommand_SummonEffect_C::Light_02' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Light_03) == 0x000440, "Member 'UCommand_SummonEffect_C::Light_03' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Light_04) == 0x000448, "Member 'UCommand_SummonEffect_C::Light_04' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Line_00) == 0x000450, "Member 'UCommand_SummonEffect_C::Line_00' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, MagicCircle) == 0x000458, "Member 'UCommand_SummonEffect_C::MagicCircle' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Particle_00) == 0x000460, "Member 'UCommand_SummonEffect_C::Particle_00' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Particle_01) == 0x000468, "Member 'UCommand_SummonEffect_C::Particle_01' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Particle_02) == 0x000470, "Member 'UCommand_SummonEffect_C::Particle_02' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Particle_03) == 0x000478, "Member 'UCommand_SummonEffect_C::Particle_03' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Particle_04) == 0x000480, "Member 'UCommand_SummonEffect_C::Particle_04' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Particle_05) == 0x000488, "Member 'UCommand_SummonEffect_C::Particle_05' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Particle_06) == 0x000490, "Member 'UCommand_SummonEffect_C::Particle_06' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Pnl_Color) == 0x000498, "Member 'UCommand_SummonEffect_C::Pnl_Color' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Pnl_Light) == 0x0004A0, "Member 'UCommand_SummonEffect_C::Pnl_Light' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Pnl_Particle) == 0x0004A8, "Member 'UCommand_SummonEffect_C::Pnl_Particle' has a wrong offset!");
static_assert(offsetof(UCommand_SummonEffect_C, Rainbow) == 0x0004B0, "Member 'UCommand_SummonEffect_C::Rainbow' has a wrong offset!");

}

