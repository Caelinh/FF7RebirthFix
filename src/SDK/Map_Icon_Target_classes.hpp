#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Map_Icon_Target

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Map_Icon_Target.Map_Icon_Target_C
// 0x0050 (0x0418 - 0x03C8)
class UMap_Icon_Target_C final : public UEndUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       Loop;                                              // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop_MapTarget_Quest;                              // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop_MapTarget_Side;                               // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop_MapTarget;                                    // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Cursor_00;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_01;                                         // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_circle_01;                                     // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_00;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_01;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Map_Icon_Target(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Map_Icon_Target_C">();
	}
	static class UMap_Icon_Target_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMap_Icon_Target_C>();
	}
};
static_assert(alignof(UMap_Icon_Target_C) == 0x000008, "Wrong alignment on UMap_Icon_Target_C");
static_assert(sizeof(UMap_Icon_Target_C) == 0x000418, "Wrong size on UMap_Icon_Target_C");
static_assert(offsetof(UMap_Icon_Target_C, UberGraphFrame) == 0x0003C8, "Member 'UMap_Icon_Target_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMap_Icon_Target_C, Loop) == 0x0003D0, "Member 'UMap_Icon_Target_C::Loop' has a wrong offset!");
static_assert(offsetof(UMap_Icon_Target_C, Loop_MapTarget_Quest) == 0x0003D8, "Member 'UMap_Icon_Target_C::Loop_MapTarget_Quest' has a wrong offset!");
static_assert(offsetof(UMap_Icon_Target_C, Loop_MapTarget_Side) == 0x0003E0, "Member 'UMap_Icon_Target_C::Loop_MapTarget_Side' has a wrong offset!");
static_assert(offsetof(UMap_Icon_Target_C, Loop_MapTarget) == 0x0003E8, "Member 'UMap_Icon_Target_C::Loop_MapTarget' has a wrong offset!");
static_assert(offsetof(UMap_Icon_Target_C, Cursor_00) == 0x0003F0, "Member 'UMap_Icon_Target_C::Cursor_00' has a wrong offset!");
static_assert(offsetof(UMap_Icon_Target_C, Cursor_01) == 0x0003F8, "Member 'UMap_Icon_Target_C::Cursor_01' has a wrong offset!");
static_assert(offsetof(UMap_Icon_Target_C, Img_circle_01) == 0x000400, "Member 'UMap_Icon_Target_C::Img_circle_01' has a wrong offset!");
static_assert(offsetof(UMap_Icon_Target_C, Img_Effect_00) == 0x000408, "Member 'UMap_Icon_Target_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(UMap_Icon_Target_C, Img_Effect_01) == 0x000410, "Member 'UMap_Icon_Target_C::Img_Effect_01' has a wrong offset!");

}

