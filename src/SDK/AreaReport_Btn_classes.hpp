#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AreaReport_Btn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AreaReport_Btn.AreaReport_Btn_C
// 0x0078 (0x0470 - 0x03F8)
class UAreaReport_Btn_C final : public UEndResearchTargetBtn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       Loop;                                              // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Locked;                                            // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Clear;                                             // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Released;                                          // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BtnHover;                                          // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base1_3;                                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Clear2;                                       // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Lock;                                         // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_1;                                          // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_2;                                          // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Frame;                                             // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Lock;                                         // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndButton*                             Target_Btn;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AreaReport_Btn(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AreaReport_Btn_C">();
	}
	static class UAreaReport_Btn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAreaReport_Btn_C>();
	}
};
static_assert(alignof(UAreaReport_Btn_C) == 0x000008, "Wrong alignment on UAreaReport_Btn_C");
static_assert(sizeof(UAreaReport_Btn_C) == 0x000470, "Wrong size on UAreaReport_Btn_C");
static_assert(offsetof(UAreaReport_Btn_C, UberGraphFrame) == 0x0003F8, "Member 'UAreaReport_Btn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Loop) == 0x000400, "Member 'UAreaReport_Btn_C::Loop' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Locked) == 0x000408, "Member 'UAreaReport_Btn_C::Locked' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Clear) == 0x000410, "Member 'UAreaReport_Btn_C::Clear' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Released) == 0x000418, "Member 'UAreaReport_Btn_C::Released' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, BtnHover) == 0x000420, "Member 'UAreaReport_Btn_C::BtnHover' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Base) == 0x000428, "Member 'UAreaReport_Btn_C::Base' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Base1_3) == 0x000430, "Member 'UAreaReport_Btn_C::Base1_3' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Base_Clear2) == 0x000438, "Member 'UAreaReport_Btn_C::Base_Clear2' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Base_Lock) == 0x000440, "Member 'UAreaReport_Btn_C::Base_Lock' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Cursor_1) == 0x000448, "Member 'UAreaReport_Btn_C::Cursor_1' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Cursor_2) == 0x000450, "Member 'UAreaReport_Btn_C::Cursor_2' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Frame) == 0x000458, "Member 'UAreaReport_Btn_C::Frame' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Icon_Lock) == 0x000460, "Member 'UAreaReport_Btn_C::Icon_Lock' has a wrong offset!");
static_assert(offsetof(UAreaReport_Btn_C, Target_Btn) == 0x000468, "Member 'UAreaReport_Btn_C::Target_Btn' has a wrong offset!");

}

