#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainMenu_Craft_ListItem

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MainMenu_Craft_ListItem.MainMenu_Craft_ListItem_C
// 0x0068 (0x0498 - 0x0430)
class UMainMenu_Craft_ListItem_C final : public UEndMainItemSelectBtnText
{
public:
	class UWidgetAnimation*                       BtnHover;                                          // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Shortage;                                          // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Normal;                                            // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Selected;                                     // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Cost;                                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Item_C*                           Icon_Item_new;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Member_C*                         Icon_Member;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Shortage;                                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Slash;                                         // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndButton*                             MainMenu_Btn;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Cost_Volume;                                   // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Item_Total;                                    // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MainMenu_Craft_ListItem_C">();
	}
	static class UMainMenu_Craft_ListItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu_Craft_ListItem_C>();
	}
};
static_assert(alignof(UMainMenu_Craft_ListItem_C) == 0x000008, "Wrong alignment on UMainMenu_Craft_ListItem_C");
static_assert(sizeof(UMainMenu_Craft_ListItem_C) == 0x000498, "Wrong size on UMainMenu_Craft_ListItem_C");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, BtnHover) == 0x000430, "Member 'UMainMenu_Craft_ListItem_C::BtnHover' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Shortage) == 0x000438, "Member 'UMainMenu_Craft_ListItem_C::Shortage' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Normal) == 0x000440, "Member 'UMainMenu_Craft_ListItem_C::Normal' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Base) == 0x000448, "Member 'UMainMenu_Craft_ListItem_C::Base' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Base_Selected) == 0x000450, "Member 'UMainMenu_Craft_ListItem_C::Base_Selected' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Cost) == 0x000458, "Member 'UMainMenu_Craft_ListItem_C::Cost' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Icon_Item_new) == 0x000460, "Member 'UMainMenu_Craft_ListItem_C::Icon_Item_new' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Icon_Member) == 0x000468, "Member 'UMainMenu_Craft_ListItem_C::Icon_Member' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Icon_Shortage) == 0x000470, "Member 'UMainMenu_Craft_ListItem_C::Icon_Shortage' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Img_Slash) == 0x000478, "Member 'UMainMenu_Craft_ListItem_C::Img_Slash' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, MainMenu_Btn) == 0x000480, "Member 'UMainMenu_Craft_ListItem_C::MainMenu_Btn' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Txt_Cost_Volume) == 0x000488, "Member 'UMainMenu_Craft_ListItem_C::Txt_Cost_Volume' has a wrong offset!");
static_assert(offsetof(UMainMenu_Craft_ListItem_C, Txt_Item_Total) == 0x000490, "Member 'UMainMenu_Craft_ListItem_C::Txt_Item_Total' has a wrong offset!");

}

