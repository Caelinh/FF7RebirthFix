#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KBDRt

#include "Basic.hpp"


namespace SDK
{

// Enum KBDRt.ESQEX_AnimNotifyState_Bonamik_TemporaryCollision_CollisionType
// NumValues: 0x0004
enum class ESQEX_AnimNotifyState_Bonamik_TemporaryCollision_CollisionType : uint8
{
	Box                                      = 0,
	Sphere                                   = 1,
	Capsule                                  = 2,
	Max                                      = 3,
};

// ScriptStruct KBDRt.SQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3
// 0x0003 (0x0003 - 0x0000)
struct FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3 final
{
public:
	bool                                          bConstraintX;                                      // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConstraintY;                                      // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bConstraintZ;                                      // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3) == 0x000001, "Wrong alignment on FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3");
static_assert(sizeof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3) == 0x000003, "Wrong size on FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3");
static_assert(offsetof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3, bConstraintX) == 0x000000, "Member 'FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3::bConstraintX' has a wrong offset!");
static_assert(offsetof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3, bConstraintY) == 0x000001, "Member 'FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3::bConstraintY' has a wrong offset!");
static_assert(offsetof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3, bConstraintZ) == 0x000002, "Member 'FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3::bConstraintZ' has a wrong offset!");

// ScriptStruct KBDRt.SQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules
// 0x0009 (0x0009 - 0x0000)
struct FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules final
{
public:
	struct FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3 ConstraintLocation;                                // 0x0000(0x0003)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3 ConstraintRotation;                                // 0x0003(0x0003)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules_Vec3 ConstraintScale;                                   // 0x0006(0x0003)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules) == 0x000001, "Wrong alignment on FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules");
static_assert(sizeof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules) == 0x000009, "Wrong size on FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules");
static_assert(offsetof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules, ConstraintLocation) == 0x000000, "Member 'FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules::ConstraintLocation' has a wrong offset!");
static_assert(offsetof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules, ConstraintRotation) == 0x000003, "Member 'FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules::ConstraintRotation' has a wrong offset!");
static_assert(offsetof(FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules, ConstraintScale) == 0x000006, "Member 'FSQEX_AnimNotifyState_Bonamik_TemporaryCollision_ConstraintTransformRules::ConstraintScale' has a wrong offset!");

// ScriptStruct KBDRt.SQEX_KBD_OverrideBonamikDataList
// 0x0018 (0x0018 - 0x0000)
struct FSQEX_KBD_OverrideBonamikDataList final
{
public:
	class FName                                   EnsembleName;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USQEX_BonamikAsset*>             BonamikDataList;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSQEX_KBD_OverrideBonamikDataList) == 0x000008, "Wrong alignment on FSQEX_KBD_OverrideBonamikDataList");
static_assert(sizeof(FSQEX_KBD_OverrideBonamikDataList) == 0x000018, "Wrong size on FSQEX_KBD_OverrideBonamikDataList");
static_assert(offsetof(FSQEX_KBD_OverrideBonamikDataList, EnsembleName) == 0x000000, "Member 'FSQEX_KBD_OverrideBonamikDataList::EnsembleName' has a wrong offset!");
static_assert(offsetof(FSQEX_KBD_OverrideBonamikDataList, BonamikDataList) == 0x000008, "Member 'FSQEX_KBD_OverrideBonamikDataList::BonamikDataList' has a wrong offset!");

}

