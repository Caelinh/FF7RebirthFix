#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainMenu_WeaponUpgrade_CircleGaugeSmall

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MainMenu_WeaponUpgrade_CircleGaugeSmall.MainMenu_WeaponUpgrade_CircleGaugeSmall_C
// 0x0060 (0x0428 - 0x03C8)
class UMainMenu_WeaponUpgrade_CircleGaugeSmall_C final : public UEndUserWidget
{
public:
	class UEndImage*                              Balloon_Right;                                     // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base1;                                             // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base2;                                             // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base3;                                             // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base4;                                             // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base5;                                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base6;                                             // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_WeaponUpgrade_Gauge_C*        CircleGauge;                                       // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Max;                                          // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Start;                                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Used;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              UnderLine;                                         // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MainMenu_WeaponUpgrade_CircleGaugeSmall_C">();
	}
	static class UMainMenu_WeaponUpgrade_CircleGaugeSmall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMainMenu_WeaponUpgrade_CircleGaugeSmall_C>();
	}
};
static_assert(alignof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C) == 0x000008, "Wrong alignment on UMainMenu_WeaponUpgrade_CircleGaugeSmall_C");
static_assert(sizeof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C) == 0x000428, "Wrong size on UMainMenu_WeaponUpgrade_CircleGaugeSmall_C");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Balloon_Right) == 0x0003C8, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Balloon_Right' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Base1) == 0x0003D0, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Base1' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Base2) == 0x0003D8, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Base2' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Base3) == 0x0003E0, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Base3' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Base4) == 0x0003E8, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Base4' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Base5) == 0x0003F0, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Base5' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Base6) == 0x0003F8, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Base6' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, CircleGauge) == 0x000400, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::CircleGauge' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Icon_Max) == 0x000408, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Icon_Max' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Icon_Start) == 0x000410, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Icon_Start' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, Icon_Used) == 0x000418, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::Icon_Used' has a wrong offset!");
static_assert(offsetof(UMainMenu_WeaponUpgrade_CircleGaugeSmall_C, UnderLine) == 0x000420, "Member 'UMainMenu_WeaponUpgrade_CircleGaugeSmall_C::UnderLine' has a wrong offset!");

}

