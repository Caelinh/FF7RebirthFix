#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI_FollowEscapePoint

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AI_FollowEscapePoint.BP_AI_FollowEscapePoint_C
// 0x0020 (0x0250 - 0x0230)
class ABP_AI_FollowEscapePoint_C final : public AEndAIFollowEscapePoint
{
public:
	class UArrowComponent*                        Arrow;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AI_FollowEscapePoint_C">();
	}
	static class ABP_AI_FollowEscapePoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AI_FollowEscapePoint_C>();
	}
};
static_assert(alignof(ABP_AI_FollowEscapePoint_C) == 0x000008, "Wrong alignment on ABP_AI_FollowEscapePoint_C");
static_assert(sizeof(ABP_AI_FollowEscapePoint_C) == 0x000250, "Wrong size on ABP_AI_FollowEscapePoint_C");
static_assert(offsetof(ABP_AI_FollowEscapePoint_C, Arrow) == 0x000230, "Member 'ABP_AI_FollowEscapePoint_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_AI_FollowEscapePoint_C, Billboard) == 0x000238, "Member 'ABP_AI_FollowEscapePoint_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_AI_FollowEscapePoint_C, Scene) == 0x000240, "Member 'ABP_AI_FollowEscapePoint_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_AI_FollowEscapePoint_C, Root) == 0x000248, "Member 'ABP_AI_FollowEscapePoint_C::Root' has a wrong offset!");

}

