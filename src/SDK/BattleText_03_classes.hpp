#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleText_03

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleText_03.BattleText_03_C
// 0x00C8 (0x0490 - 0x03C8)
class UBattleText_03_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       MateriaSlotUp_In;                                  // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SkillUp_In;                                        // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Learning_In;                                       // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Materia_In;                                        // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Weapon_In;                                         // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_BattleText_01;                                 // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_Base;                                          // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_Base_Shadow;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_01;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Add;                                    // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Learning;                               // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Learning_1;                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Level;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Level_1;                                // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Materia;                                // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Materia_1;                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_Effect_Particle;                               // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Weapon;                                 // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Weapon_1;                               // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Light_00;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Light_01;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_SkillUpBase;                                   // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBorder*                             Nut_Txt;                                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_LevelUp;                                       // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleText_03_C">();
	}
	static class UBattleText_03_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleText_03_C>();
	}
};
static_assert(alignof(UBattleText_03_C) == 0x000008, "Wrong alignment on UBattleText_03_C");
static_assert(sizeof(UBattleText_03_C) == 0x000490, "Wrong size on UBattleText_03_C");
static_assert(offsetof(UBattleText_03_C, MateriaSlotUp_In) == 0x0003C8, "Member 'UBattleText_03_C::MateriaSlotUp_In' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, SkillUp_In) == 0x0003D0, "Member 'UBattleText_03_C::SkillUp_In' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Learning_In) == 0x0003D8, "Member 'UBattleText_03_C::Learning_In' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Materia_In) == 0x0003E0, "Member 'UBattleText_03_C::Materia_In' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Weapon_In) == 0x0003E8, "Member 'UBattleText_03_C::Weapon_In' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, In) == 0x0003F0, "Member 'UBattleText_03_C::In' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, All_BattleText_01) == 0x0003F8, "Member 'UBattleText_03_C::All_BattleText_01' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Base) == 0x000400, "Member 'UBattleText_03_C::Img_Base' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Base_Shadow) == 0x000408, "Member 'UBattleText_03_C::Img_Base_Shadow' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_01) == 0x000410, "Member 'UBattleText_03_C::Img_Effect_01' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Add) == 0x000418, "Member 'UBattleText_03_C::Img_Effect_Add' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Learning) == 0x000420, "Member 'UBattleText_03_C::Img_Effect_Learning' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Learning_1) == 0x000428, "Member 'UBattleText_03_C::Img_Effect_Learning_1' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Level) == 0x000430, "Member 'UBattleText_03_C::Img_Effect_Level' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Level_1) == 0x000438, "Member 'UBattleText_03_C::Img_Effect_Level_1' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Materia) == 0x000440, "Member 'UBattleText_03_C::Img_Effect_Materia' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Materia_1) == 0x000448, "Member 'UBattleText_03_C::Img_Effect_Materia_1' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Particle) == 0x000450, "Member 'UBattleText_03_C::Img_Effect_Particle' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Weapon) == 0x000458, "Member 'UBattleText_03_C::Img_Effect_Weapon' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Effect_Weapon_1) == 0x000460, "Member 'UBattleText_03_C::Img_Effect_Weapon_1' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Light_00) == 0x000468, "Member 'UBattleText_03_C::Img_Light_00' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_Light_01) == 0x000470, "Member 'UBattleText_03_C::Img_Light_01' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Img_SkillUpBase) == 0x000478, "Member 'UBattleText_03_C::Img_SkillUpBase' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Nut_Txt) == 0x000480, "Member 'UBattleText_03_C::Nut_Txt' has a wrong offset!");
static_assert(offsetof(UBattleText_03_C, Txt_LevelUp) == 0x000488, "Member 'UBattleText_03_C::Txt_LevelUp' has a wrong offset!");

}

