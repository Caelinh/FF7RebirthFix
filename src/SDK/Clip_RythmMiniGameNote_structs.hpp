#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Clip_RythmMiniGameNote

#include "Basic.hpp"

#include "EndGame_structs.hpp"


namespace SDK
{

// UserDefinedStruct Clip_RythmMiniGameNote.Clip_RythmMiniGameNote
// 0x0020 (0x0020 - 0x0000)
struct FClip_RythmMiniGameNote final
{
public:
	EEndRythmMiniGameInputKey                     KeyInput_62_C6B2ED9E46658F5DCB520C98721C4A88;      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EEndRythmMiniGameNote                         Type_63_1F6495734024815C222D5FA35D22BE72;          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Scale_79_5707784A40FF55E8DF0707815C955CF7;         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         HideFirstSeconds_57_20DDB4604ECA9E04B6CAD683BC2054D3; // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         ConsecutiveTapsGoodThreshold_71_3BB99F0047B95C40E9E07F82891F0C39; // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         ConsecutiveTapsGreatThreshold_74_CAA8D8424D8F3251AEEA808A85FAC5D7; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         NoteLength_67_FBE9F7404AA9CE011920A494D0F11C34;    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         SplineTrack_66_7814F73245E8D86C722BE3AAAFA0E7B2;   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          LongConsecutive3DUIMirror_83_A8CF6B25409F78EE8152F8BE767C68B1; // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          Flip3DUIToCamera_86_AD4308CF44BF972D2CE86E8A84E73B11; // 0x001D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(FClip_RythmMiniGameNote) == 0x000004, "Wrong alignment on FClip_RythmMiniGameNote");
static_assert(sizeof(FClip_RythmMiniGameNote) == 0x000020, "Wrong size on FClip_RythmMiniGameNote");
static_assert(offsetof(FClip_RythmMiniGameNote, KeyInput_62_C6B2ED9E46658F5DCB520C98721C4A88) == 0x000000, "Member 'FClip_RythmMiniGameNote::KeyInput_62_C6B2ED9E46658F5DCB520C98721C4A88' has a wrong offset!");
static_assert(offsetof(FClip_RythmMiniGameNote, Type_63_1F6495734024815C222D5FA35D22BE72) == 0x000001, "Member 'FClip_RythmMiniGameNote::Type_63_1F6495734024815C222D5FA35D22BE72' has a wrong offset!");
static_assert(offsetof(FClip_RythmMiniGameNote, Scale_79_5707784A40FF55E8DF0707815C955CF7) == 0x000004, "Member 'FClip_RythmMiniGameNote::Scale_79_5707784A40FF55E8DF0707815C955CF7' has a wrong offset!");
static_assert(offsetof(FClip_RythmMiniGameNote, HideFirstSeconds_57_20DDB4604ECA9E04B6CAD683BC2054D3) == 0x000008, "Member 'FClip_RythmMiniGameNote::HideFirstSeconds_57_20DDB4604ECA9E04B6CAD683BC2054D3' has a wrong offset!");
static_assert(offsetof(FClip_RythmMiniGameNote, ConsecutiveTapsGoodThreshold_71_3BB99F0047B95C40E9E07F82891F0C39) == 0x00000C, "Member 'FClip_RythmMiniGameNote::ConsecutiveTapsGoodThreshold_71_3BB99F0047B95C40E9E07F82891F0C39' has a wrong offset!");
static_assert(offsetof(FClip_RythmMiniGameNote, ConsecutiveTapsGreatThreshold_74_CAA8D8424D8F3251AEEA808A85FAC5D7) == 0x000010, "Member 'FClip_RythmMiniGameNote::ConsecutiveTapsGreatThreshold_74_CAA8D8424D8F3251AEEA808A85FAC5D7' has a wrong offset!");
static_assert(offsetof(FClip_RythmMiniGameNote, NoteLength_67_FBE9F7404AA9CE011920A494D0F11C34) == 0x000014, "Member 'FClip_RythmMiniGameNote::NoteLength_67_FBE9F7404AA9CE011920A494D0F11C34' has a wrong offset!");
static_assert(offsetof(FClip_RythmMiniGameNote, SplineTrack_66_7814F73245E8D86C722BE3AAAFA0E7B2) == 0x000018, "Member 'FClip_RythmMiniGameNote::SplineTrack_66_7814F73245E8D86C722BE3AAAFA0E7B2' has a wrong offset!");
static_assert(offsetof(FClip_RythmMiniGameNote, LongConsecutive3DUIMirror_83_A8CF6B25409F78EE8152F8BE767C68B1) == 0x00001C, "Member 'FClip_RythmMiniGameNote::LongConsecutive3DUIMirror_83_A8CF6B25409F78EE8152F8BE767C68B1' has a wrong offset!");
static_assert(offsetof(FClip_RythmMiniGameNote, Flip3DUIToCamera_86_AD4308CF44BF972D2CE86E8A84E73B11) == 0x00001D, "Member 'FClip_RythmMiniGameNote::Flip3DUIToCamera_86_AD4308CF44BF972D2CE86E8A84E73B11' has a wrong offset!");

}

