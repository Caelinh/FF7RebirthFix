#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Sense

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Sense.Sense_C
// 0x0138 (0x06B0 - 0x0578)
class USense_C final : public UEndEnemyDetailWindow
{
public:
	class UWidgetAnimation*                       MenuOff;                                           // 0x0578(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       IconInfo_In;                                       // 0x0580(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RightInfo_Switching;                               // 0x0588(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0590(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Arrow_00;                                          // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Arrow_01;                                          // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Type;                                         // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Deco_RB;                                           // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Deco_RT;                                           // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_2;                                        // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_HP;                                          // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_L2;                                           // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Left;                                         // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_R2;                                           // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Right;                                        // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_00;                                       // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_L;                                        // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_R;                                        // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Filter;                                        // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_HP_Gauge_BG;                                   // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_NameBase;                                      // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_SurveyTarget;                                  // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Icon;                                          // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light3;                                            // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCom_Loading_Simple2_C*                 LoadingCircle;                                     // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Nut_HP;                                            // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              RightMenu_BG;                                      // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USense_Title_Cell_C*                    Title_Ability;                                     // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USense_Title_Cell_C*                    Title_Acquisition;                                 // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USense_Title_Cell_C*                    Title_DropItems;                                   // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USense_Title_Cell_C*                    Title_Log;                                         // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USense_Title_Cell_C*                    Title_RareDropItems;                               // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USense_Title_Cell_C*                    Title_Resistances;                                 // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USense_Title_Cell_C*                    Title_Steal;                                       // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_HP;                                            // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_HP_Num;                                        // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_HP_NumMax;                                     // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Type;                                          // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Sense_C">();
	}
	static class USense_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USense_C>();
	}
};
static_assert(alignof(USense_C) == 0x000008, "Wrong alignment on USense_C");
static_assert(sizeof(USense_C) == 0x0006B0, "Wrong size on USense_C");
static_assert(offsetof(USense_C, MenuOff) == 0x000578, "Member 'USense_C::MenuOff' has a wrong offset!");
static_assert(offsetof(USense_C, IconInfo_In) == 0x000580, "Member 'USense_C::IconInfo_In' has a wrong offset!");
static_assert(offsetof(USense_C, RightInfo_Switching) == 0x000588, "Member 'USense_C::RightInfo_Switching' has a wrong offset!");
static_assert(offsetof(USense_C, Out) == 0x000590, "Member 'USense_C::Out' has a wrong offset!");
static_assert(offsetof(USense_C, In) == 0x000598, "Member 'USense_C::In' has a wrong offset!");
static_assert(offsetof(USense_C, Arrow_00) == 0x0005A0, "Member 'USense_C::Arrow_00' has a wrong offset!");
static_assert(offsetof(USense_C, Arrow_01) == 0x0005A8, "Member 'USense_C::Arrow_01' has a wrong offset!");
static_assert(offsetof(USense_C, Base_Type) == 0x0005B0, "Member 'USense_C::Base_Type' has a wrong offset!");
static_assert(offsetof(USense_C, Deco_RB) == 0x0005B8, "Member 'USense_C::Deco_RB' has a wrong offset!");
static_assert(offsetof(USense_C, Deco_RT) == 0x0005C0, "Member 'USense_C::Deco_RT' has a wrong offset!");
static_assert(offsetof(USense_C, EndImage_2) == 0x0005C8, "Member 'USense_C::EndImage_2' has a wrong offset!");
static_assert(offsetof(USense_C, Gauge_HP) == 0x0005D0, "Member 'USense_C::Gauge_HP' has a wrong offset!");
static_assert(offsetof(USense_C, Icon_L2) == 0x0005D8, "Member 'USense_C::Icon_L2' has a wrong offset!");
static_assert(offsetof(USense_C, Icon_Left) == 0x0005E0, "Member 'USense_C::Icon_Left' has a wrong offset!");
static_assert(offsetof(USense_C, Icon_R2) == 0x0005E8, "Member 'USense_C::Icon_R2' has a wrong offset!");
static_assert(offsetof(USense_C, Icon_Right) == 0x0005F0, "Member 'USense_C::Icon_Right' has a wrong offset!");
static_assert(offsetof(USense_C, Img_Base_00) == 0x0005F8, "Member 'USense_C::Img_Base_00' has a wrong offset!");
static_assert(offsetof(USense_C, Img_Base_L) == 0x000600, "Member 'USense_C::Img_Base_L' has a wrong offset!");
static_assert(offsetof(USense_C, Img_Base_R) == 0x000608, "Member 'USense_C::Img_Base_R' has a wrong offset!");
static_assert(offsetof(USense_C, Img_Filter) == 0x000610, "Member 'USense_C::Img_Filter' has a wrong offset!");
static_assert(offsetof(USense_C, Img_HP_Gauge_BG) == 0x000618, "Member 'USense_C::Img_HP_Gauge_BG' has a wrong offset!");
static_assert(offsetof(USense_C, Img_NameBase) == 0x000620, "Member 'USense_C::Img_NameBase' has a wrong offset!");
static_assert(offsetof(USense_C, Img_SurveyTarget) == 0x000628, "Member 'USense_C::Img_SurveyTarget' has a wrong offset!");
static_assert(offsetof(USense_C, Ims_Icon) == 0x000630, "Member 'USense_C::Ims_Icon' has a wrong offset!");
static_assert(offsetof(USense_C, Light3) == 0x000638, "Member 'USense_C::Light3' has a wrong offset!");
static_assert(offsetof(USense_C, LoadingCircle) == 0x000640, "Member 'USense_C::LoadingCircle' has a wrong offset!");
static_assert(offsetof(USense_C, Nut_HP) == 0x000648, "Member 'USense_C::Nut_HP' has a wrong offset!");
static_assert(offsetof(USense_C, RightMenu_BG) == 0x000650, "Member 'USense_C::RightMenu_BG' has a wrong offset!");
static_assert(offsetof(USense_C, Title_Ability) == 0x000658, "Member 'USense_C::Title_Ability' has a wrong offset!");
static_assert(offsetof(USense_C, Title_Acquisition) == 0x000660, "Member 'USense_C::Title_Acquisition' has a wrong offset!");
static_assert(offsetof(USense_C, Title_DropItems) == 0x000668, "Member 'USense_C::Title_DropItems' has a wrong offset!");
static_assert(offsetof(USense_C, Title_Log) == 0x000670, "Member 'USense_C::Title_Log' has a wrong offset!");
static_assert(offsetof(USense_C, Title_RareDropItems) == 0x000678, "Member 'USense_C::Title_RareDropItems' has a wrong offset!");
static_assert(offsetof(USense_C, Title_Resistances) == 0x000680, "Member 'USense_C::Title_Resistances' has a wrong offset!");
static_assert(offsetof(USense_C, Title_Steal) == 0x000688, "Member 'USense_C::Title_Steal' has a wrong offset!");
static_assert(offsetof(USense_C, Txt_HP) == 0x000690, "Member 'USense_C::Txt_HP' has a wrong offset!");
static_assert(offsetof(USense_C, Txt_HP_Num) == 0x000698, "Member 'USense_C::Txt_HP_Num' has a wrong offset!");
static_assert(offsetof(USense_C, Txt_HP_NumMax) == 0x0006A0, "Member 'USense_C::Txt_HP_NumMax' has a wrong offset!");
static_assert(offsetof(USense_C, Txt_Type) == 0x0006A8, "Member 'USense_C::Txt_Type' has a wrong offset!");

}

