#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EndDataBase

#include "Basic.hpp"

#include "EndDataBase_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EndDataObject_structs.hpp"


namespace SDK::Params
{

// Function EndDataBase.EndBattleCountAPI.GetBattleCountLogBoolByBP
// 0x0028 (0x0028 - 0x0000)
struct EndBattleCountAPI_GetBattleCountLogBoolByBP final
{
public:
	class FName                                   ownerCharaName;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndBattleCountLogType                        Type;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetCharaName;                                   // 0x000C(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   subTypeName;                                       // 0x0014(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   territoryID;                                       // 0x001C(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EndBattleCountAPI_GetBattleCountLogBoolByBP) == 0x000004, "Wrong alignment on EndBattleCountAPI_GetBattleCountLogBoolByBP");
static_assert(sizeof(EndBattleCountAPI_GetBattleCountLogBoolByBP) == 0x000028, "Wrong size on EndBattleCountAPI_GetBattleCountLogBoolByBP");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogBoolByBP, ownerCharaName) == 0x000000, "Member 'EndBattleCountAPI_GetBattleCountLogBoolByBP::ownerCharaName' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogBoolByBP, Type) == 0x000008, "Member 'EndBattleCountAPI_GetBattleCountLogBoolByBP::Type' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogBoolByBP, TargetCharaName) == 0x00000C, "Member 'EndBattleCountAPI_GetBattleCountLogBoolByBP::TargetCharaName' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogBoolByBP, subTypeName) == 0x000014, "Member 'EndBattleCountAPI_GetBattleCountLogBoolByBP::subTypeName' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogBoolByBP, territoryID) == 0x00001C, "Member 'EndBattleCountAPI_GetBattleCountLogBoolByBP::territoryID' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogBoolByBP, ReturnValue) == 0x000024, "Member 'EndBattleCountAPI_GetBattleCountLogBoolByBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndBattleCountAPI.GetBattleCountLogFloatByBP
// 0x0028 (0x0028 - 0x0000)
struct EndBattleCountAPI_GetBattleCountLogFloatByBP final
{
public:
	class FName                                   ownerCharaName;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndBattleCountLogType                        Type;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetCharaName;                                   // 0x000C(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   subTypeName;                                       // 0x0014(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   territoryID;                                       // 0x001C(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndBattleCountAPI_GetBattleCountLogFloatByBP) == 0x000004, "Wrong alignment on EndBattleCountAPI_GetBattleCountLogFloatByBP");
static_assert(sizeof(EndBattleCountAPI_GetBattleCountLogFloatByBP) == 0x000028, "Wrong size on EndBattleCountAPI_GetBattleCountLogFloatByBP");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogFloatByBP, ownerCharaName) == 0x000000, "Member 'EndBattleCountAPI_GetBattleCountLogFloatByBP::ownerCharaName' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogFloatByBP, Type) == 0x000008, "Member 'EndBattleCountAPI_GetBattleCountLogFloatByBP::Type' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogFloatByBP, TargetCharaName) == 0x00000C, "Member 'EndBattleCountAPI_GetBattleCountLogFloatByBP::TargetCharaName' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogFloatByBP, subTypeName) == 0x000014, "Member 'EndBattleCountAPI_GetBattleCountLogFloatByBP::subTypeName' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogFloatByBP, territoryID) == 0x00001C, "Member 'EndBattleCountAPI_GetBattleCountLogFloatByBP::territoryID' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogFloatByBP, ReturnValue) == 0x000024, "Member 'EndBattleCountAPI_GetBattleCountLogFloatByBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndBattleCountAPI.GetBattleCountLogIntByBP
// 0x0028 (0x0028 - 0x0000)
struct EndBattleCountAPI_GetBattleCountLogIntByBP final
{
public:
	class FName                                   ownerCharaName;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEndBattleCountLogType                        Type;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetCharaName;                                   // 0x000C(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   subTypeName;                                       // 0x0014(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   territoryID;                                       // 0x001C(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndBattleCountAPI_GetBattleCountLogIntByBP) == 0x000004, "Wrong alignment on EndBattleCountAPI_GetBattleCountLogIntByBP");
static_assert(sizeof(EndBattleCountAPI_GetBattleCountLogIntByBP) == 0x000028, "Wrong size on EndBattleCountAPI_GetBattleCountLogIntByBP");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogIntByBP, ownerCharaName) == 0x000000, "Member 'EndBattleCountAPI_GetBattleCountLogIntByBP::ownerCharaName' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogIntByBP, Type) == 0x000008, "Member 'EndBattleCountAPI_GetBattleCountLogIntByBP::Type' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogIntByBP, TargetCharaName) == 0x00000C, "Member 'EndBattleCountAPI_GetBattleCountLogIntByBP::TargetCharaName' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogIntByBP, subTypeName) == 0x000014, "Member 'EndBattleCountAPI_GetBattleCountLogIntByBP::subTypeName' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogIntByBP, territoryID) == 0x00001C, "Member 'EndBattleCountAPI_GetBattleCountLogIntByBP::territoryID' has a wrong offset!");
static_assert(offsetof(EndBattleCountAPI_GetBattleCountLogIntByBP, ReturnValue) == 0x000024, "Member 'EndBattleCountAPI_GetBattleCountLogIntByBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.EnemyBook_IncrementKillCount_BP
// 0x0008 (0x0008 - 0x0000)
struct EndDataBaseDataBaseAPI_EnemyBook_IncrementKillCount_BP final
{
public:
	class FName                                   enemyBookTableId;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_EnemyBook_IncrementKillCount_BP) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_EnemyBook_IncrementKillCount_BP");
static_assert(sizeof(EndDataBaseDataBaseAPI_EnemyBook_IncrementKillCount_BP) == 0x000008, "Wrong size on EndDataBaseDataBaseAPI_EnemyBook_IncrementKillCount_BP");
static_assert(offsetof(EndDataBaseDataBaseAPI_EnemyBook_IncrementKillCount_BP, enemyBookTableId) == 0x000000, "Member 'EndDataBaseDataBaseAPI_EnemyBook_IncrementKillCount_BP::enemyBookTableId' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetChapterProgress
// 0x0004 (0x0004 - 0x0000)
struct EndDataBaseDataBaseAPI_GetChapterProgress final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetChapterProgress) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetChapterProgress");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetChapterProgress) == 0x000004, "Wrong size on EndDataBaseDataBaseAPI_GetChapterProgress");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetChapterProgress, ReturnValue) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetChapterProgress::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetDebugChapterID
// 0x0008 (0x0008 - 0x0000)
struct EndDataBaseDataBaseAPI_GetDebugChapterID final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetDebugChapterID) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetDebugChapterID");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetDebugChapterID) == 0x000008, "Wrong size on EndDataBaseDataBaseAPI_GetDebugChapterID");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetDebugChapterID, ReturnValue) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetDebugChapterID::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetDefaultBattleLeaderTypeBP
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataBaseAPI_GetDefaultBattleLeaderTypeBP final
{
public:
	EPlayerType                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetDefaultBattleLeaderTypeBP) == 0x000001, "Wrong alignment on EndDataBaseDataBaseAPI_GetDefaultBattleLeaderTypeBP");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetDefaultBattleLeaderTypeBP) == 0x000001, "Wrong size on EndDataBaseDataBaseAPI_GetDefaultBattleLeaderTypeBP");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetDefaultBattleLeaderTypeBP, ReturnValue) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetDefaultBattleLeaderTypeBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetDefaultPartyLeaderTypeBP
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataBaseAPI_GetDefaultPartyLeaderTypeBP final
{
public:
	EPlayerType                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetDefaultPartyLeaderTypeBP) == 0x000001, "Wrong alignment on EndDataBaseDataBaseAPI_GetDefaultPartyLeaderTypeBP");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetDefaultPartyLeaderTypeBP) == 0x000001, "Wrong size on EndDataBaseDataBaseAPI_GetDefaultPartyLeaderTypeBP");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetDefaultPartyLeaderTypeBP, ReturnValue) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetDefaultPartyLeaderTypeBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetItemNumBP
// 0x0008 (0x0008 - 0x0000)
struct EndDataBaseDataBaseAPI_GetItemNumBP final
{
public:
	int32                                         UniqueId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetItemNumBP) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetItemNumBP");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetItemNumBP) == 0x000008, "Wrong size on EndDataBaseDataBaseAPI_GetItemNumBP");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetItemNumBP, UniqueId) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetItemNumBP::UniqueId' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetItemNumBP, ReturnValue) == 0x000004, "Member 'EndDataBaseDataBaseAPI_GetItemNumBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetLocationWorkFloat
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_GetLocationWorkFloat final
{
public:
	class FName                                   LocationWorkID;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetLocationWorkFloat) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetLocationWorkFloat");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetLocationWorkFloat) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_GetLocationWorkFloat");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetLocationWorkFloat, LocationWorkID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetLocationWorkFloat::LocationWorkID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetLocationWorkFloat, ReturnValue) == 0x000008, "Member 'EndDataBaseDataBaseAPI_GetLocationWorkFloat::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetLocationWorkInteger
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_GetLocationWorkInteger final
{
public:
	class FName                                   LocationWorkID;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetLocationWorkInteger) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetLocationWorkInteger");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetLocationWorkInteger) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_GetLocationWorkInteger");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetLocationWorkInteger, LocationWorkID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetLocationWorkInteger::LocationWorkID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetLocationWorkInteger, ReturnValue) == 0x000008, "Member 'EndDataBaseDataBaseAPI_GetLocationWorkInteger::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetPlayerPosition
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataBaseAPI_GetPlayerPosition final
{
public:
	EPlayerType                                   Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetPlayerPosition) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetPlayerPosition");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetPlayerPosition) == 0x000010, "Wrong size on EndDataBaseDataBaseAPI_GetPlayerPosition");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetPlayerPosition, Type) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetPlayerPosition::Type' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetPlayerPosition, ReturnValue) == 0x000004, "Member 'EndDataBaseDataBaseAPI_GetPlayerPosition::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetPlayerRotation
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataBaseAPI_GetPlayerRotation final
{
public:
	EPlayerType                                   Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetPlayerRotation) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetPlayerRotation");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetPlayerRotation) == 0x000010, "Wrong size on EndDataBaseDataBaseAPI_GetPlayerRotation");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetPlayerRotation, Type) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetPlayerRotation::Type' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetPlayerRotation, ReturnValue) == 0x000004, "Member 'EndDataBaseDataBaseAPI_GetPlayerRotation::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetResidentWorkFloat
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_GetResidentWorkFloat final
{
public:
	class FName                                   ResidentWorkID;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetResidentWorkFloat) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetResidentWorkFloat");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetResidentWorkFloat) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_GetResidentWorkFloat");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetResidentWorkFloat, ResidentWorkID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetResidentWorkFloat::ResidentWorkID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetResidentWorkFloat, ReturnValue) == 0x000008, "Member 'EndDataBaseDataBaseAPI_GetResidentWorkFloat::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetResidentWorkInteger
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_GetResidentWorkInteger final
{
public:
	class FName                                   ResidentWorkID;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetResidentWorkInteger) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetResidentWorkInteger");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetResidentWorkInteger) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_GetResidentWorkInteger");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetResidentWorkInteger, ResidentWorkID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetResidentWorkInteger::ResidentWorkID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetResidentWorkInteger, ReturnValue) == 0x000008, "Member 'EndDataBaseDataBaseAPI_GetResidentWorkInteger::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetTestPlayModeTableID
// 0x0008 (0x0008 - 0x0000)
struct EndDataBaseDataBaseAPI_GetTestPlayModeTableID final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetTestPlayModeTableID) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_GetTestPlayModeTableID");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetTestPlayModeTableID) == 0x000008, "Wrong size on EndDataBaseDataBaseAPI_GetTestPlayModeTableID");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetTestPlayModeTableID, ReturnValue) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetTestPlayModeTableID::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.GetUpdatePlayTimeFlag
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataBaseAPI_GetUpdatePlayTimeFlag final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_GetUpdatePlayTimeFlag) == 0x000001, "Wrong alignment on EndDataBaseDataBaseAPI_GetUpdatePlayTimeFlag");
static_assert(sizeof(EndDataBaseDataBaseAPI_GetUpdatePlayTimeFlag) == 0x000001, "Wrong size on EndDataBaseDataBaseAPI_GetUpdatePlayTimeFlag");
static_assert(offsetof(EndDataBaseDataBaseAPI_GetUpdatePlayTimeFlag, ReturnValue) == 0x000000, "Member 'EndDataBaseDataBaseAPI_GetUpdatePlayTimeFlag::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.IsClassic
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataBaseAPI_IsClassic final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_IsClassic) == 0x000001, "Wrong alignment on EndDataBaseDataBaseAPI_IsClassic");
static_assert(sizeof(EndDataBaseDataBaseAPI_IsClassic) == 0x000001, "Wrong size on EndDataBaseDataBaseAPI_IsClassic");
static_assert(offsetof(EndDataBaseDataBaseAPI_IsClassic, ReturnValue) == 0x000000, "Member 'EndDataBaseDataBaseAPI_IsClassic::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.IsDebugPartyList
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataBaseAPI_IsDebugPartyList final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_IsDebugPartyList) == 0x000001, "Wrong alignment on EndDataBaseDataBaseAPI_IsDebugPartyList");
static_assert(sizeof(EndDataBaseDataBaseAPI_IsDebugPartyList) == 0x000001, "Wrong size on EndDataBaseDataBaseAPI_IsDebugPartyList");
static_assert(offsetof(EndDataBaseDataBaseAPI_IsDebugPartyList, ReturnValue) == 0x000000, "Member 'EndDataBaseDataBaseAPI_IsDebugPartyList::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.IsDifficulty
// 0x0002 (0x0002 - 0x0000)
struct EndDataBaseDataBaseAPI_IsDifficulty final
{
public:
	EDifficultyType                               Difficulty;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_IsDifficulty) == 0x000001, "Wrong alignment on EndDataBaseDataBaseAPI_IsDifficulty");
static_assert(sizeof(EndDataBaseDataBaseAPI_IsDifficulty) == 0x000002, "Wrong size on EndDataBaseDataBaseAPI_IsDifficulty");
static_assert(offsetof(EndDataBaseDataBaseAPI_IsDifficulty, Difficulty) == 0x000000, "Member 'EndDataBaseDataBaseAPI_IsDifficulty::Difficulty' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_IsDifficulty, ReturnValue) == 0x000001, "Member 'EndDataBaseDataBaseAPI_IsDifficulty::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.IsFinishStreamMateriaModel
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataBaseAPI_IsFinishStreamMateriaModel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_IsFinishStreamMateriaModel) == 0x000001, "Wrong alignment on EndDataBaseDataBaseAPI_IsFinishStreamMateriaModel");
static_assert(sizeof(EndDataBaseDataBaseAPI_IsFinishStreamMateriaModel) == 0x000001, "Wrong size on EndDataBaseDataBaseAPI_IsFinishStreamMateriaModel");
static_assert(offsetof(EndDataBaseDataBaseAPI_IsFinishStreamMateriaModel, ReturnValue) == 0x000000, "Member 'EndDataBaseDataBaseAPI_IsFinishStreamMateriaModel::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.IsStoryFlag
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_IsStoryFlag final
{
public:
	class FName                                   StoryFlagId;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EndDataBaseDataBaseAPI_IsStoryFlag) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_IsStoryFlag");
static_assert(sizeof(EndDataBaseDataBaseAPI_IsStoryFlag) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_IsStoryFlag");
static_assert(offsetof(EndDataBaseDataBaseAPI_IsStoryFlag, StoryFlagId) == 0x000000, "Member 'EndDataBaseDataBaseAPI_IsStoryFlag::StoryFlagId' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_IsStoryFlag, ReturnValue) == 0x000008, "Member 'EndDataBaseDataBaseAPI_IsStoryFlag::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetDebugChapterID
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataBaseAPI_SetDebugChapterID final
{
public:
	class FString                                 DebugChapterID;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetDebugChapterID) == 0x000008, "Wrong alignment on EndDataBaseDataBaseAPI_SetDebugChapterID");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetDebugChapterID) == 0x000010, "Wrong size on EndDataBaseDataBaseAPI_SetDebugChapterID");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetDebugChapterID, DebugChapterID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetDebugChapterID::DebugChapterID' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetDefaultBattleLeaderTypeBP
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataBaseAPI_SetDefaultBattleLeaderTypeBP final
{
public:
	EPlayerType                                   Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetDefaultBattleLeaderTypeBP) == 0x000001, "Wrong alignment on EndDataBaseDataBaseAPI_SetDefaultBattleLeaderTypeBP");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetDefaultBattleLeaderTypeBP) == 0x000001, "Wrong size on EndDataBaseDataBaseAPI_SetDefaultBattleLeaderTypeBP");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetDefaultBattleLeaderTypeBP, Type) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetDefaultBattleLeaderTypeBP::Type' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetDefaultPartyLeaderTypeBP
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataBaseAPI_SetDefaultPartyLeaderTypeBP final
{
public:
	EPlayerType                                   Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetDefaultPartyLeaderTypeBP) == 0x000001, "Wrong alignment on EndDataBaseDataBaseAPI_SetDefaultPartyLeaderTypeBP");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetDefaultPartyLeaderTypeBP) == 0x000001, "Wrong size on EndDataBaseDataBaseAPI_SetDefaultPartyLeaderTypeBP");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetDefaultPartyLeaderTypeBP, Type) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetDefaultPartyLeaderTypeBP::Type' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetLocationWorkFloat
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_SetLocationWorkFloat final
{
public:
	class FName                                   LocationWorkID;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetLocationWorkFloat) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_SetLocationWorkFloat");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetLocationWorkFloat) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_SetLocationWorkFloat");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetLocationWorkFloat, LocationWorkID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetLocationWorkFloat::LocationWorkID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetLocationWorkFloat, Value) == 0x000008, "Member 'EndDataBaseDataBaseAPI_SetLocationWorkFloat::Value' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetLocationWorkInteger
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_SetLocationWorkInteger final
{
public:
	class FName                                   LocationWorkID;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetLocationWorkInteger) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_SetLocationWorkInteger");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetLocationWorkInteger) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_SetLocationWorkInteger");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetLocationWorkInteger, LocationWorkID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetLocationWorkInteger::LocationWorkID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetLocationWorkInteger, Value) == 0x000008, "Member 'EndDataBaseDataBaseAPI_SetLocationWorkInteger::Value' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetResidentWorkFloat
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_SetResidentWorkFloat final
{
public:
	class FName                                   ResidentWorkID;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetResidentWorkFloat) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_SetResidentWorkFloat");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetResidentWorkFloat) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_SetResidentWorkFloat");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetResidentWorkFloat, ResidentWorkID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetResidentWorkFloat::ResidentWorkID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetResidentWorkFloat, Value) == 0x000008, "Member 'EndDataBaseDataBaseAPI_SetResidentWorkFloat::Value' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetResidentWorkInteger
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_SetResidentWorkInteger final
{
public:
	class FName                                   ResidentWorkID;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetResidentWorkInteger) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_SetResidentWorkInteger");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetResidentWorkInteger) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_SetResidentWorkInteger");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetResidentWorkInteger, ResidentWorkID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetResidentWorkInteger::ResidentWorkID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetResidentWorkInteger, Value) == 0x000008, "Member 'EndDataBaseDataBaseAPI_SetResidentWorkInteger::Value' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetStoryFlagBP
// 0x000C (0x000C - 0x0000)
struct EndDataBaseDataBaseAPI_SetStoryFlagBP final
{
public:
	class FName                                   StoryFlagId;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetStoryFlagBP) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_SetStoryFlagBP");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetStoryFlagBP) == 0x00000C, "Wrong size on EndDataBaseDataBaseAPI_SetStoryFlagBP");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetStoryFlagBP, StoryFlagId) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetStoryFlagBP::StoryFlagId' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetStoryFlagBP, Value) == 0x000008, "Member 'EndDataBaseDataBaseAPI_SetStoryFlagBP::Value' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetTestPlayModeTableID
// 0x0008 (0x0008 - 0x0000)
struct EndDataBaseDataBaseAPI_SetTestPlayModeTableID final
{
public:
	class FName                                   setTableID;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetTestPlayModeTableID) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_SetTestPlayModeTableID");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetTestPlayModeTableID) == 0x000008, "Wrong size on EndDataBaseDataBaseAPI_SetTestPlayModeTableID");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetTestPlayModeTableID, setTableID) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetTestPlayModeTableID::setTableID' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataBaseAPI.SetupInitialParameter
// 0x0008 (0x0008 - 0x0000)
struct EndDataBaseDataBaseAPI_SetupInitialParameter final
{
public:
	class FName                                   debugPartyListDataTableId;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataBaseAPI_SetupInitialParameter) == 0x000004, "Wrong alignment on EndDataBaseDataBaseAPI_SetupInitialParameter");
static_assert(sizeof(EndDataBaseDataBaseAPI_SetupInitialParameter) == 0x000008, "Wrong size on EndDataBaseDataBaseAPI_SetupInitialParameter");
static_assert(offsetof(EndDataBaseDataBaseAPI_SetupInitialParameter, debugPartyListDataTableId) == 0x000000, "Member 'EndDataBaseDataBaseAPI_SetupInitialParameter::debugPartyListDataTableId' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.ClearDebugFlag
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataObjectAPI_ClearDebugFlag final
{
public:
	EEndDataObjectDebugFlag                       Flag;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_ClearDebugFlag) == 0x000001, "Wrong alignment on EndDataBaseDataObjectAPI_ClearDebugFlag");
static_assert(sizeof(EndDataBaseDataObjectAPI_ClearDebugFlag) == 0x000001, "Wrong size on EndDataBaseDataObjectAPI_ClearDebugFlag");
static_assert(offsetof(EndDataBaseDataObjectAPI_ClearDebugFlag, Flag) == 0x000000, "Member 'EndDataBaseDataObjectAPI_ClearDebugFlag::Flag' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetActorNameMap
// 0x0050 (0x0050 - 0x0000)
struct EndDataBaseDataObjectAPI_GetActorNameMap final
{
public:
	TMap<EPlayerType, class FName>                ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetActorNameMap) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetActorNameMap");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetActorNameMap) == 0x000050, "Wrong size on EndDataBaseDataObjectAPI_GetActorNameMap");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetActorNameMap, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetActorNameMap::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetChapterList
// 0x0020 (0x0020 - 0x0000)
struct EndDataBaseDataObjectAPI_GetChapterList final
{
public:
	class FString                                 LocationName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetChapterList) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetChapterList");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetChapterList) == 0x000020, "Wrong size on EndDataBaseDataObjectAPI_GetChapterList");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetChapterList, LocationName) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetChapterList::LocationName' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetChapterList, ReturnValue) == 0x000010, "Member 'EndDataBaseDataObjectAPI_GetChapterList::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetDebugID
// 0x0008 (0x0008 - 0x0000)
struct EndDataBaseDataObjectAPI_GetDebugID final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetDebugID) == 0x000004, "Wrong alignment on EndDataBaseDataObjectAPI_GetDebugID");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetDebugID) == 0x000008, "Wrong size on EndDataBaseDataObjectAPI_GetDebugID");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetDebugID, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetDebugID::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetEquipmentTypeList
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetEquipmentTypeList final
{
public:
	TArray<EEquipmentType>                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetEquipmentTypeList) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetEquipmentTypeList");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetEquipmentTypeList) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetEquipmentTypeList");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetEquipmentTypeList, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetEquipmentTypeList::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetFieldTestLocationNameDetails
// 0x0018 (0x0018 - 0x0000)
struct EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails final
{
public:
	bool                                          bWithBack;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails) == 0x000018, "Wrong size on EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails, bWithBack) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails::bWithBack' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails, ReturnValue) == 0x000008, "Member 'EndDataBaseDataObjectAPI_GetFieldTestLocationNameDetails::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationDetails
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetLocationDetails final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetLocationDetails) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetLocationDetails");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetLocationDetails) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetLocationDetails");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetLocationDetails, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetLocationDetails::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationIdFromLocationWorkId
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId final
{
public:
	class FName                                   dataObjectId;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId) == 0x000004, "Wrong alignment on EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId, dataObjectId) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId::dataObjectId' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId, ReturnValue) == 0x000008, "Member 'EndDataBaseDataObjectAPI_GetLocationIdFromLocationWorkId::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationNameDetails
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetLocationNameDetails final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetLocationNameDetails) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetLocationNameDetails");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetLocationNameDetails) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetLocationNameDetails");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetLocationNameDetails, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetLocationNameDetails::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationNames
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetLocationNames final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetLocationNames) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetLocationNames");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetLocationNames) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetLocationNames");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetLocationNames, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetLocationNames::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationPresetList
// 0x0020 (0x0020 - 0x0000)
struct EndDataBaseDataObjectAPI_GetLocationPresetList final
{
public:
	class FString                                 LocationName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetLocationPresetList) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetLocationPresetList");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetLocationPresetList) == 0x000020, "Wrong size on EndDataBaseDataObjectAPI_GetLocationPresetList");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetLocationPresetList, LocationName) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetLocationPresetList::LocationName' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetLocationPresetList, ReturnValue) == 0x000010, "Member 'EndDataBaseDataObjectAPI_GetLocationPresetList::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetLocationSlotList
// 0x0020 (0x0020 - 0x0000)
struct EndDataBaseDataObjectAPI_GetLocationSlotList final
{
public:
	class FString                                 LocationName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetLocationSlotList) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetLocationSlotList");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetLocationSlotList) == 0x000020, "Wrong size on EndDataBaseDataObjectAPI_GetLocationSlotList");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetLocationSlotList, LocationName) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetLocationSlotList::LocationName' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetLocationSlotList, ReturnValue) == 0x000010, "Member 'EndDataBaseDataObjectAPI_GetLocationSlotList::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetPlayerTypeListSortFavPointBP
// 0x0028 (0x0028 - 0x0000)
struct EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP final
{
public:
	TArray<EPlayerType>                           InList;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	EEndFavPointSortType                          sortType;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPlayerType>                           ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP) == 0x000028, "Wrong size on EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP, InList) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP::InList' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP, sortType) == 0x000010, "Member 'EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP::sortType' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP, ReturnValue) == 0x000018, "Member 'EndDataBaseDataObjectAPI_GetPlayerTypeListSortFavPointBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentID
// 0x0008 (0x0008 - 0x0000)
struct EndDataBaseDataObjectAPI_GetResidentID final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetResidentID) == 0x000004, "Wrong alignment on EndDataBaseDataObjectAPI_GetResidentID");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetResidentID) == 0x000008, "Wrong size on EndDataBaseDataObjectAPI_GetResidentID");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentID, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetResidentID::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentParameterFloatBP
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetResidentParameterFloatBP final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultValue;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetResidentParameterFloatBP) == 0x000004, "Wrong alignment on EndDataBaseDataObjectAPI_GetResidentParameterFloatBP");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetResidentParameterFloatBP) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetResidentParameterFloatBP");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterFloatBP, ID) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterFloatBP::ID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterFloatBP, DefaultValue) == 0x000008, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterFloatBP::DefaultValue' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterFloatBP, ReturnValue) == 0x00000C, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterFloatBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentParameterIntegerBP
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultValue;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP) == 0x000004, "Wrong alignment on EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP, ID) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP::ID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP, DefaultValue) == 0x000008, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP::DefaultValue' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP, ReturnValue) == 0x00000C, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterIntegerBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentParameterNameBP
// 0x0018 (0x0018 - 0x0000)
struct EndDataBaseDataObjectAPI_GetResidentParameterNameBP final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DefaultValue;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetResidentParameterNameBP) == 0x000004, "Wrong alignment on EndDataBaseDataObjectAPI_GetResidentParameterNameBP");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetResidentParameterNameBP) == 0x000018, "Wrong size on EndDataBaseDataObjectAPI_GetResidentParameterNameBP");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterNameBP, ID) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterNameBP::ID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterNameBP, DefaultValue) == 0x000008, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterNameBP::DefaultValue' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterNameBP, ReturnValue) == 0x000010, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterNameBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetResidentParameterStringBP
// 0x0028 (0x0028 - 0x0000)
struct EndDataBaseDataObjectAPI_GetResidentParameterStringBP final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultValue;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetResidentParameterStringBP) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetResidentParameterStringBP");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetResidentParameterStringBP) == 0x000028, "Wrong size on EndDataBaseDataObjectAPI_GetResidentParameterStringBP");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterStringBP, ID) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterStringBP::ID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterStringBP, DefaultValue) == 0x000008, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterStringBP::DefaultValue' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetResidentParameterStringBP, ReturnValue) == 0x000018, "Member 'EndDataBaseDataObjectAPI_GetResidentParameterStringBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestCutSceneEnviSetNameList
// 0x0020 (0x0020 - 0x0000)
struct EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList final
{
public:
	TArray<class FString>                         CutSceneNames;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList) == 0x000020, "Wrong size on EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList, CutSceneNames) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList::CutSceneNames' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList, ReturnValue) == 0x000010, "Member 'EndDataBaseDataObjectAPI_GetTestCutSceneEnviSetNameList::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestCutSceneNameList
// 0x0020 (0x0020 - 0x0000)
struct EndDataBaseDataObjectAPI_GetTestCutSceneNameList final
{
public:
	class FString                                 LocationName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetTestCutSceneNameList) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetTestCutSceneNameList");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetTestCutSceneNameList) == 0x000020, "Wrong size on EndDataBaseDataObjectAPI_GetTestCutSceneNameList");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetTestCutSceneNameList, LocationName) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetTestCutSceneNameList::LocationName' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetTestCutSceneNameList, ReturnValue) == 0x000010, "Member 'EndDataBaseDataObjectAPI_GetTestCutSceneNameList::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestPlayModeSettingDataName
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName final
{
public:
	class FName                                   TableID;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName) == 0x000004, "Wrong alignment on EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName, TableID) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName::TableID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName, ReturnValue) == 0x000008, "Member 'EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataName::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestPlayModeSettingDataObjectIds
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataObjectIds final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataObjectIds) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataObjectIds");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataObjectIds) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataObjectIds");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataObjectIds, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetTestPlayModeSettingDataObjectIds::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetTestPlayModeTitleLocation
// 0x0010 (0x0010 - 0x0000)
struct EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation final
{
public:
	class FName                                   TableID;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation) == 0x000004, "Wrong alignment on EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation) == 0x000010, "Wrong size on EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation, TableID) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation::TableID' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation, ReturnValue) == 0x000008, "Member 'EndDataBaseDataObjectAPI_GetTestPlayModeTitleLocation::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.GetWeaponNameMap
// 0x0050 (0x0050 - 0x0000)
struct EndDataBaseDataObjectAPI_GetWeaponNameMap final
{
public:
	TMap<EPlayerType, class FName>                ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_GetWeaponNameMap) == 0x000008, "Wrong alignment on EndDataBaseDataObjectAPI_GetWeaponNameMap");
static_assert(sizeof(EndDataBaseDataObjectAPI_GetWeaponNameMap) == 0x000050, "Wrong size on EndDataBaseDataObjectAPI_GetWeaponNameMap");
static_assert(offsetof(EndDataBaseDataObjectAPI_GetWeaponNameMap, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_GetWeaponNameMap::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.IsDebugFlag
// 0x0002 (0x0002 - 0x0000)
struct EndDataBaseDataObjectAPI_IsDebugFlag final
{
public:
	EEndDataObjectDebugFlag                       Flag;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_IsDebugFlag) == 0x000001, "Wrong alignment on EndDataBaseDataObjectAPI_IsDebugFlag");
static_assert(sizeof(EndDataBaseDataObjectAPI_IsDebugFlag) == 0x000002, "Wrong size on EndDataBaseDataObjectAPI_IsDebugFlag");
static_assert(offsetof(EndDataBaseDataObjectAPI_IsDebugFlag, Flag) == 0x000000, "Member 'EndDataBaseDataObjectAPI_IsDebugFlag::Flag' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_IsDebugFlag, ReturnValue) == 0x000001, "Member 'EndDataBaseDataObjectAPI_IsDebugFlag::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.IsExistDataObjectBP
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataObjectAPI_IsExistDataObjectBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_IsExistDataObjectBP) == 0x000001, "Wrong alignment on EndDataBaseDataObjectAPI_IsExistDataObjectBP");
static_assert(sizeof(EndDataBaseDataObjectAPI_IsExistDataObjectBP) == 0x000001, "Wrong size on EndDataBaseDataObjectAPI_IsExistDataObjectBP");
static_assert(offsetof(EndDataBaseDataObjectAPI_IsExistDataObjectBP, ReturnValue) == 0x000000, "Member 'EndDataBaseDataObjectAPI_IsExistDataObjectBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.IsExistDataObjectFromTypeBP
// 0x0002 (0x0002 - 0x0000)
struct EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP final
{
public:
	EDataObjectType                               Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP) == 0x000001, "Wrong alignment on EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP");
static_assert(sizeof(EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP) == 0x000002, "Wrong size on EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP");
static_assert(offsetof(EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP, Type) == 0x000000, "Member 'EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP::Type' has a wrong offset!");
static_assert(offsetof(EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP, ReturnValue) == 0x000001, "Member 'EndDataBaseDataObjectAPI_IsExistDataObjectFromTypeBP::ReturnValue' has a wrong offset!");

// Function EndDataBase.EndDataBaseDataObjectAPI.SetDebugFlag
// 0x0001 (0x0001 - 0x0000)
struct EndDataBaseDataObjectAPI_SetDebugFlag final
{
public:
	EEndDataObjectDebugFlag                       Flag;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EndDataBaseDataObjectAPI_SetDebugFlag) == 0x000001, "Wrong alignment on EndDataBaseDataObjectAPI_SetDebugFlag");
static_assert(sizeof(EndDataBaseDataObjectAPI_SetDebugFlag) == 0x000001, "Wrong size on EndDataBaseDataObjectAPI_SetDebugFlag");
static_assert(offsetof(EndDataBaseDataObjectAPI_SetDebugFlag, Flag) == 0x000000, "Member 'EndDataBaseDataObjectAPI_SetDebugFlag::Flag' has a wrong offset!");

}

