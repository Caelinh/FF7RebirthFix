#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Map_AreaInfoWindow

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Map_AreaInfoWindow.Map_AreaInfoWindow_C
// 0x00F0 (0x04F0 - 0x0400)
class UMap_AreaInfoWindow_C final : public UEndAreaMapInfoWindow
{
public:
	class UWidgetAnimation*                       Complete_Tower;                                    // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Complete_Report;                                   // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Normal;                                            // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndProgressBar*                        AreaProgressBar;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base1_3;                                           // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base1_6;                                           // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base1_7;                                           // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Bg;                                                // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Bg_1;                                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Bg_6;                                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage;                                          // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_1;                                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_2;                                        // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_3;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_ChadleyPoint;                                 // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Complete;                                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Report;                                       // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_ReportClear;                                  // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Tower;                                        // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_TowerClear;                                   // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Left1;                                             // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Left2;                                             // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Left3;                                             // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Left4;                                             // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint;                                         // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_1;                                       // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_2;                                       // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_3;                                       // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_4;                                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              ListPoint_5;                                       // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Map_AreaInfoWindow_C">();
	}
	static class UMap_AreaInfoWindow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMap_AreaInfoWindow_C>();
	}
};
static_assert(alignof(UMap_AreaInfoWindow_C) == 0x000008, "Wrong alignment on UMap_AreaInfoWindow_C");
static_assert(sizeof(UMap_AreaInfoWindow_C) == 0x0004F0, "Wrong size on UMap_AreaInfoWindow_C");
static_assert(offsetof(UMap_AreaInfoWindow_C, Complete_Tower) == 0x000400, "Member 'UMap_AreaInfoWindow_C::Complete_Tower' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Complete_Report) == 0x000408, "Member 'UMap_AreaInfoWindow_C::Complete_Report' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Normal) == 0x000410, "Member 'UMap_AreaInfoWindow_C::Normal' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, AreaProgressBar) == 0x000418, "Member 'UMap_AreaInfoWindow_C::AreaProgressBar' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Base1_3) == 0x000420, "Member 'UMap_AreaInfoWindow_C::Base1_3' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Base1_6) == 0x000428, "Member 'UMap_AreaInfoWindow_C::Base1_6' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Base1_7) == 0x000430, "Member 'UMap_AreaInfoWindow_C::Base1_7' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Bg) == 0x000438, "Member 'UMap_AreaInfoWindow_C::Bg' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Bg_1) == 0x000440, "Member 'UMap_AreaInfoWindow_C::Bg_1' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Bg_6) == 0x000448, "Member 'UMap_AreaInfoWindow_C::Bg_6' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, EndImage) == 0x000450, "Member 'UMap_AreaInfoWindow_C::EndImage' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, EndImage_1) == 0x000458, "Member 'UMap_AreaInfoWindow_C::EndImage_1' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, EndImage_2) == 0x000460, "Member 'UMap_AreaInfoWindow_C::EndImage_2' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, EndImage_3) == 0x000468, "Member 'UMap_AreaInfoWindow_C::EndImage_3' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Icon_ChadleyPoint) == 0x000470, "Member 'UMap_AreaInfoWindow_C::Icon_ChadleyPoint' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Icon_Complete) == 0x000478, "Member 'UMap_AreaInfoWindow_C::Icon_Complete' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Icon_Report) == 0x000480, "Member 'UMap_AreaInfoWindow_C::Icon_Report' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Icon_ReportClear) == 0x000488, "Member 'UMap_AreaInfoWindow_C::Icon_ReportClear' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Icon_Tower) == 0x000490, "Member 'UMap_AreaInfoWindow_C::Icon_Tower' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Icon_TowerClear) == 0x000498, "Member 'UMap_AreaInfoWindow_C::Icon_TowerClear' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Left1) == 0x0004A0, "Member 'UMap_AreaInfoWindow_C::Left1' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Left2) == 0x0004A8, "Member 'UMap_AreaInfoWindow_C::Left2' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Left3) == 0x0004B0, "Member 'UMap_AreaInfoWindow_C::Left3' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, Left4) == 0x0004B8, "Member 'UMap_AreaInfoWindow_C::Left4' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, ListPoint) == 0x0004C0, "Member 'UMap_AreaInfoWindow_C::ListPoint' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, ListPoint_1) == 0x0004C8, "Member 'UMap_AreaInfoWindow_C::ListPoint_1' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, ListPoint_2) == 0x0004D0, "Member 'UMap_AreaInfoWindow_C::ListPoint_2' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, ListPoint_3) == 0x0004D8, "Member 'UMap_AreaInfoWindow_C::ListPoint_3' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, ListPoint_4) == 0x0004E0, "Member 'UMap_AreaInfoWindow_C::ListPoint_4' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoWindow_C, ListPoint_5) == 0x0004E8, "Member 'UMap_AreaInfoWindow_C::ListPoint_5' has a wrong offset!");

}

