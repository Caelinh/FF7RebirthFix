#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Map_AreaInfoStone

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Map_AreaInfoStone.Map_AreaInfoStone_C
// 0x0068 (0x0430 - 0x03C8)
class UMap_AreaInfoStone_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Clear_ChadleyQuest;                                // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Release_ChadleyQuest;                              // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Flash;                                             // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Unreleased;                                        // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Clear;                                             // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Closed;                                            // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Release;                                           // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base;                                              // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Current_1;                                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Currentbg;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Stone;                                        // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring;                                              // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Ring2;                                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Map_AreaInfoStone_C">();
	}
	static class UMap_AreaInfoStone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMap_AreaInfoStone_C>();
	}
};
static_assert(alignof(UMap_AreaInfoStone_C) == 0x000008, "Wrong alignment on UMap_AreaInfoStone_C");
static_assert(sizeof(UMap_AreaInfoStone_C) == 0x000430, "Wrong size on UMap_AreaInfoStone_C");
static_assert(offsetof(UMap_AreaInfoStone_C, Clear_ChadleyQuest) == 0x0003C8, "Member 'UMap_AreaInfoStone_C::Clear_ChadleyQuest' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Release_ChadleyQuest) == 0x0003D0, "Member 'UMap_AreaInfoStone_C::Release_ChadleyQuest' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Flash) == 0x0003D8, "Member 'UMap_AreaInfoStone_C::Flash' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Unreleased) == 0x0003E0, "Member 'UMap_AreaInfoStone_C::Unreleased' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Clear) == 0x0003E8, "Member 'UMap_AreaInfoStone_C::Clear' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Closed) == 0x0003F0, "Member 'UMap_AreaInfoStone_C::Closed' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Release) == 0x0003F8, "Member 'UMap_AreaInfoStone_C::Release' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Base) == 0x000400, "Member 'UMap_AreaInfoStone_C::Base' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Icon_Current_1) == 0x000408, "Member 'UMap_AreaInfoStone_C::Icon_Current_1' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Icon_Currentbg) == 0x000410, "Member 'UMap_AreaInfoStone_C::Icon_Currentbg' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Icon_Stone) == 0x000418, "Member 'UMap_AreaInfoStone_C::Icon_Stone' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Ring) == 0x000420, "Member 'UMap_AreaInfoStone_C::Ring' has a wrong offset!");
static_assert(offsetof(UMap_AreaInfoStone_C, Ring2) == 0x000428, "Member 'UMap_AreaInfoStone_C::Ring2' has a wrong offset!");

}

