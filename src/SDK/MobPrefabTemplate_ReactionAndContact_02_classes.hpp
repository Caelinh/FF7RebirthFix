#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MobPrefabTemplate_ReactionAndContact_02

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MobPrefabTemplate_ReactionAndContact_01_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MobPrefabTemplate_ReactionAndContact_02.MobPrefabTemplate_ReactionAndContact_02_C
// 0x0260 (0x09F0 - 0x0790)
class AMobPrefabTemplate_ReactionAndContact_02_C : public AMobPrefabTemplate_ReactionAndContact_01_C
{
public:
	uint8                                         Pad_782[0x6];                                      // 0x0782(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_MobPrefabTemplate_ReactionAndContact_02_C; // 0x0788(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	TSoftClassPtr<class UClass>                   CharacterClass02;                                  // 0x0790(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   LoopMotionName02;                                  // 0x07B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   AttachActor02;                                     // 0x07C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   AttachSocketName02;                                // 0x07E8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableReaction02;                                  // 0x07F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableContact02;                                   // 0x07F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ContactDuringReaction02;                           // 0x07F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F3[0x1];                                      // 0x07F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ContactForwardLeftMotionName02;                    // 0x07F4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactForwardRightMotionName02;                   // 0x07FC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactBackLeftMotionName02;                       // 0x0804(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactBackRightMotionName02;                      // 0x080C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactBlendTime02;                                // 0x0814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FName>                ContactPropagateMotionTable02;                     // 0x0818(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateForwardLeftMotionTable02;          // 0x0868(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateForwardRightMotionTable02;         // 0x08B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateBackLeftMotionTable02;             // 0x0908(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateBackRightMotionTable02;            // 0x0958(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ContactPropagateBlendTime02;                       // 0x09A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutMotionName02;                            // 0x09AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactOutBlendTime02;                             // 0x09B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutReplaceBaseMotionName02;                 // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionMotionName02;                              // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionBlendTime02;                               // 0x09C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionReplaceBaseMotionName02;                   // 0x09CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionOutMotionName02;                           // 0x09D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionOutBlendTime02;                            // 0x09DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionOutReplaceBaseMotionName02;                // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReactionOnce02;                                    // 0x09E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MobPrefabTemplate_ReactionAndContact_02(int32 EntryPoint);
	void OnPreUpdateRegistry();
	void GetContext(class FName MobId, bool* EnableReaction, bool* EnableContact, bool* ContactDuringReaction, class FName* ForwardLeftMotion, class FName* ForwardRightMotion, class FName* BackLeftMotion, class FName* BackRightMotion, float* ContactBlendTime, TMap<class FName, class FName>* ContactPropagateMotionTable, TMap<class FName, class FName>* ContactPropagateForwardLeftMotionTable, TMap<class FName, class FName>* ContactPropagateForwardRightMotionTable, TMap<class FName, class FName>* ContactPropagateBackLeftMotionTable, TMap<class FName, class FName>* ContactPropagateBackRightMotionTable, float* ContactPropagateBlendTime, class FName* ContactOutMotionName, float* ContactOutBlendTime, class FName* ContactOutReplaceBaseMotionName, class FName* Motion, float* BlendTime, class FName* ReplaceBaseMotion, class FName* ReactionOutMotionName, float* ReactionOutBlendTime, class FName* ReactionOutReplaceBaseMotionName, bool* PlayMotionOnce);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MobPrefabTemplate_ReactionAndContact_02_C">();
	}
	static class AMobPrefabTemplate_ReactionAndContact_02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMobPrefabTemplate_ReactionAndContact_02_C>();
	}
};
static_assert(alignof(AMobPrefabTemplate_ReactionAndContact_02_C) == 0x000010, "Wrong alignment on AMobPrefabTemplate_ReactionAndContact_02_C");
static_assert(sizeof(AMobPrefabTemplate_ReactionAndContact_02_C) == 0x0009F0, "Wrong size on AMobPrefabTemplate_ReactionAndContact_02_C");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, UberGraphFrame_MobPrefabTemplate_ReactionAndContact_02_C) == 0x000788, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::UberGraphFrame_MobPrefabTemplate_ReactionAndContact_02_C' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, CharacterClass02) == 0x000790, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::CharacterClass02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, LoopMotionName02) == 0x0007B8, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::LoopMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, AttachActor02) == 0x0007C0, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::AttachActor02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, AttachSocketName02) == 0x0007E8, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::AttachSocketName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, EnableReaction02) == 0x0007F0, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::EnableReaction02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, EnableContact02) == 0x0007F1, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::EnableContact02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactDuringReaction02) == 0x0007F2, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactDuringReaction02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactForwardLeftMotionName02) == 0x0007F4, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactForwardLeftMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactForwardRightMotionName02) == 0x0007FC, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactForwardRightMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactBackLeftMotionName02) == 0x000804, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactBackLeftMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactBackRightMotionName02) == 0x00080C, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactBackRightMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactBlendTime02) == 0x000814, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactBlendTime02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactPropagateMotionTable02) == 0x000818, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactPropagateMotionTable02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactPropagateForwardLeftMotionTable02) == 0x000868, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactPropagateForwardLeftMotionTable02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactPropagateForwardRightMotionTable02) == 0x0008B8, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactPropagateForwardRightMotionTable02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactPropagateBackLeftMotionTable02) == 0x000908, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactPropagateBackLeftMotionTable02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactPropagateBackRightMotionTable02) == 0x000958, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactPropagateBackRightMotionTable02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactPropagateBlendTime02) == 0x0009A8, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactPropagateBlendTime02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactOutMotionName02) == 0x0009AC, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactOutMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactOutBlendTime02) == 0x0009B4, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactOutBlendTime02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ContactOutReplaceBaseMotionName02) == 0x0009B8, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ContactOutReplaceBaseMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ReactionMotionName02) == 0x0009C0, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ReactionMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ReactionBlendTime02) == 0x0009C8, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ReactionBlendTime02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ReactionReplaceBaseMotionName02) == 0x0009CC, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ReactionReplaceBaseMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ReactionOutMotionName02) == 0x0009D4, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ReactionOutMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ReactionOutBlendTime02) == 0x0009DC, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ReactionOutBlendTime02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ReactionOutReplaceBaseMotionName02) == 0x0009E0, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ReactionOutReplaceBaseMotionName02' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_02_C, ReactionOnce02) == 0x0009E8, "Member 'AMobPrefabTemplate_ReactionAndContact_02_C::ReactionOnce02' has a wrong offset!");

}

