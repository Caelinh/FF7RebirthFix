#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Command_List_00

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Command_List_00.Command_List_00_C
// 0x00F0 (0x04B8 - 0x03C8)
class UCommand_List_00_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       BattleMemberCommand;                               // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ReserveMemberCommand;                              // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Preinput_In;                                       // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Command_In;                                        // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       List_Fade;                                         // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hierarchy_In;                                      // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hierarchy_Out;                                     // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base_BtnGuide;                                     // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommand_CoopEffect_C*                  CoopEffect_00;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCoopGauge_C*                           CoopGauge;                                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Retry_00;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Retry_01;                                   // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              EndImage_1;                                        // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Frame_ATBCost_00;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_ATBCost_C*                        Icon_ATBCost;                                      // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base;                                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_Add;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_Add_Reserve;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_Reserve;                                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBillboard*                          Img_Player;                                        // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommand_ItemEffect_C*                  ItemEffect_00;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommand_LimitEffect_C*                 LimitEffect_00;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_00;                                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MP_Base;                                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MP_Base_Add;                                       // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPreInput_Icon_C*                       PreInput_Icon;                                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommand_SummonEffect_C*                SummonEffect_00;                                   // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_MP;                                            // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_MP_MaxNum;                                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_MP_Num;                                        // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Command_List_00_C">();
	}
	static class UCommand_List_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommand_List_00_C>();
	}
};
static_assert(alignof(UCommand_List_00_C) == 0x000008, "Wrong alignment on UCommand_List_00_C");
static_assert(sizeof(UCommand_List_00_C) == 0x0004B8, "Wrong size on UCommand_List_00_C");
static_assert(offsetof(UCommand_List_00_C, BattleMemberCommand) == 0x0003C8, "Member 'UCommand_List_00_C::BattleMemberCommand' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, ReserveMemberCommand) == 0x0003D0, "Member 'UCommand_List_00_C::ReserveMemberCommand' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Preinput_In) == 0x0003D8, "Member 'UCommand_List_00_C::Preinput_In' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Command_In) == 0x0003E0, "Member 'UCommand_List_00_C::Command_In' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, List_Fade) == 0x0003E8, "Member 'UCommand_List_00_C::List_Fade' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Hierarchy_In) == 0x0003F0, "Member 'UCommand_List_00_C::Hierarchy_In' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Hierarchy_Out) == 0x0003F8, "Member 'UCommand_List_00_C::Hierarchy_Out' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Base_BtnGuide) == 0x000400, "Member 'UCommand_List_00_C::Base_BtnGuide' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, CoopEffect_00) == 0x000408, "Member 'UCommand_List_00_C::CoopEffect_00' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, CoopGauge) == 0x000410, "Member 'UCommand_List_00_C::CoopGauge' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Effect_Retry_00) == 0x000418, "Member 'UCommand_List_00_C::Effect_Retry_00' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Effect_Retry_01) == 0x000420, "Member 'UCommand_List_00_C::Effect_Retry_01' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, EndImage_1) == 0x000428, "Member 'UCommand_List_00_C::EndImage_1' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Frame_ATBCost_00) == 0x000430, "Member 'UCommand_List_00_C::Frame_ATBCost_00' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Icon_ATBCost) == 0x000438, "Member 'UCommand_List_00_C::Icon_ATBCost' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Img_Base) == 0x000440, "Member 'UCommand_List_00_C::Img_Base' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Img_Base_Add) == 0x000448, "Member 'UCommand_List_00_C::Img_Base_Add' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Img_Base_Add_Reserve) == 0x000450, "Member 'UCommand_List_00_C::Img_Base_Add_Reserve' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Img_Base_Reserve) == 0x000458, "Member 'UCommand_List_00_C::Img_Base_Reserve' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Img_Player) == 0x000460, "Member 'UCommand_List_00_C::Img_Player' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, ItemEffect_00) == 0x000468, "Member 'UCommand_List_00_C::ItemEffect_00' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, LimitEffect_00) == 0x000470, "Member 'UCommand_List_00_C::LimitEffect_00' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Line_00) == 0x000478, "Member 'UCommand_List_00_C::Line_00' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, MP_Base) == 0x000480, "Member 'UCommand_List_00_C::MP_Base' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, MP_Base_Add) == 0x000488, "Member 'UCommand_List_00_C::MP_Base_Add' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, PreInput_Icon) == 0x000490, "Member 'UCommand_List_00_C::PreInput_Icon' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, SummonEffect_00) == 0x000498, "Member 'UCommand_List_00_C::SummonEffect_00' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Txt_MP) == 0x0004A0, "Member 'UCommand_List_00_C::Txt_MP' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Txt_MP_MaxNum) == 0x0004A8, "Member 'UCommand_List_00_C::Txt_MP_MaxNum' has a wrong offset!");
static_assert(offsetof(UCommand_List_00_C, Txt_MP_Num) == 0x0004B0, "Member 'UCommand_List_00_C::Txt_MP_Num' has a wrong offset!");

}

