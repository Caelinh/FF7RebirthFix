#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: btsc_2660_NIBLM_EB2000

#include "Basic.hpp"

#include "btsc_2660_NIBLM_EB2000_classes.hpp"
#include "btsc_2660_NIBLM_EB2000_parameters.hpp"


namespace SDK
{

// Function btsc_2660-NIBLM_EB2000.btsc_2660-NIBLM_EB2000_C.ExecuteUbergraph_btsc_2660-NIBLM_EB2000
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abtsc_2660_NIBLM_EB2000_C::ExecuteUbergraph_btsc_2660_NIBLM_EB2000(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("btsc_2660-NIBLM_EB2000_C", "ExecuteUbergraph_btsc_2660-NIBLM_EB2000");

	Params::btsc_2660_NIBLM_EB2000_C_ExecuteUbergraph_btsc_2660_NIBLM_EB2000 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function btsc_2660-NIBLM_EB2000.btsc_2660-NIBLM_EB2000_C.OnBattleTalkInterrupted
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             TalkID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEndBattleTalkInterruptReason           SkipReason                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abtsc_2660_NIBLM_EB2000_C::OnBattleTalkInterrupted(class FName TalkID, EEndBattleTalkInterruptReason SkipReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("btsc_2660-NIBLM_EB2000_C", "OnBattleTalkInterrupted");

	Params::btsc_2660_NIBLM_EB2000_C_OnBattleTalkInterrupted Parms{};

	Parms.TalkID = TalkID;
	Parms.SkipReason = SkipReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function btsc_2660-NIBLM_EB2000.btsc_2660-NIBLM_EB2000_C.ChangePhase
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   _phase                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abtsc_2660_NIBLM_EB2000_C::ChangePhase(int32 _phase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("btsc_2660-NIBLM_EB2000_C", "ChangePhase");

	Params::btsc_2660_NIBLM_EB2000_C_ChangePhase Parms{};

	Parms._phase = _phase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function btsc_2660-NIBLM_EB2000.btsc_2660-NIBLM_EB2000_C.OnIncrementBattleCountPerID
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             CauserCharaName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             TargetCharaName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEndBattleCountLogType                  Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void Abtsc_2660_NIBLM_EB2000_C::OnIncrementBattleCountPerID(class FName CauserCharaName, class FName TargetCharaName, EEndBattleCountLogType Type, class FName ID, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("btsc_2660-NIBLM_EB2000_C", "OnIncrementBattleCountPerID");

	Params::btsc_2660_NIBLM_EB2000_C_OnIncrementBattleCountPerID Parms{};

	Parms.CauserCharaName = CauserCharaName;
	Parms.TargetCharaName = TargetCharaName;
	Parms.Type = Type;
	Parms.ID = ID;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function btsc_2660-NIBLM_EB2000.btsc_2660-NIBLM_EB2000_C.OnTakeDamage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             CauserCharaName                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             DamagedCharaName                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AbilityId                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBind                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bGuard                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             hitBoneName                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAttributeHit                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bResistHit                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             DamageSourceID                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEndBattleAttributeType                 appendAttribute                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   justHitRotYaw                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          hitPosition                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHeal                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bBurst                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLock                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void Abtsc_2660_NIBLM_EB2000_C::OnTakeDamage(int32 Damage, const class FName& CauserCharaName, const class FName& DamagedCharaName, const class FName& AbilityId, bool bBind, bool bGuard, const class FName& hitBoneName, bool bAttributeHit, bool bResistHit, const class FName& DamageSourceID, EEndBattleAttributeType appendAttribute, float justHitRotYaw, const struct FVector& hitPosition, bool bHeal, bool bBurst, bool bLock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("btsc_2660-NIBLM_EB2000_C", "OnTakeDamage");

	Params::btsc_2660_NIBLM_EB2000_C_OnTakeDamage Parms{};

	Parms.Damage = Damage;
	Parms.CauserCharaName = CauserCharaName;
	Parms.DamagedCharaName = DamagedCharaName;
	Parms.AbilityId = AbilityId;
	Parms.bBind = bBind;
	Parms.bGuard = bGuard;
	Parms.hitBoneName = hitBoneName;
	Parms.bAttributeHit = bAttributeHit;
	Parms.bResistHit = bResistHit;
	Parms.DamageSourceID = DamageSourceID;
	Parms.appendAttribute = appendAttribute;
	Parms.justHitRotYaw = justHitRotYaw;
	Parms.hitPosition = std::move(hitPosition);
	Parms.bHeal = bHeal;
	Parms.bBurst = bBurst;
	Parms.bLock = bLock;

	UObject::ProcessEvent(Func, &Parms);
}

}

