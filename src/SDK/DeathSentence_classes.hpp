#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeathSentence

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DeathSentence.DeathSentence_C
// 0x0060 (0x0428 - 0x03C8)
class UDeathSentence_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImageSet*                           Base;                                              // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Black1;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Black2;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Black3;                                     // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Red;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Red2;                                       // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Red1;                                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Red2;                                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndNumberLabel*                        Number;                                            // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DeathSentence_C">();
	}
	static class UDeathSentence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeathSentence_C>();
	}
};
static_assert(alignof(UDeathSentence_C) == 0x000008, "Wrong alignment on UDeathSentence_C");
static_assert(sizeof(UDeathSentence_C) == 0x000428, "Wrong size on UDeathSentence_C");
static_assert(offsetof(UDeathSentence_C, Out) == 0x0003C8, "Member 'UDeathSentence_C::Out' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Loop) == 0x0003D0, "Member 'UDeathSentence_C::Loop' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, In) == 0x0003D8, "Member 'UDeathSentence_C::In' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Base) == 0x0003E0, "Member 'UDeathSentence_C::Base' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Effect_Black1) == 0x0003E8, "Member 'UDeathSentence_C::Effect_Black1' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Effect_Black2) == 0x0003F0, "Member 'UDeathSentence_C::Effect_Black2' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Effect_Black3) == 0x0003F8, "Member 'UDeathSentence_C::Effect_Black3' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Effect_Red) == 0x000400, "Member 'UDeathSentence_C::Effect_Red' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Effect_Red2) == 0x000408, "Member 'UDeathSentence_C::Effect_Red2' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Line_Red1) == 0x000410, "Member 'UDeathSentence_C::Line_Red1' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Line_Red2) == 0x000418, "Member 'UDeathSentence_C::Line_Red2' has a wrong offset!");
static_assert(offsetof(UDeathSentence_C, Number) == 0x000420, "Member 'UDeathSentence_C::Number' has a wrong offset!");

}

