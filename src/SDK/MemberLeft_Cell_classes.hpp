#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MemberLeft_Cell

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MemberLeft_Cell.MemberLeft_Cell_C
// 0x0030 (0x03F8 - 0x03C8)
class UMemberLeft_Cell_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Loop;                                              // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_MemberLeft_Cell;                               // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BG;                                            // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBillboard*                          Img_Chara;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MemberLeft_Cell_C">();
	}
	static class UMemberLeft_Cell_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMemberLeft_Cell_C>();
	}
};
static_assert(alignof(UMemberLeft_Cell_C) == 0x000008, "Wrong alignment on UMemberLeft_Cell_C");
static_assert(sizeof(UMemberLeft_Cell_C) == 0x0003F8, "Wrong size on UMemberLeft_Cell_C");
static_assert(offsetof(UMemberLeft_Cell_C, Out) == 0x0003C8, "Member 'UMemberLeft_Cell_C::Out' has a wrong offset!");
static_assert(offsetof(UMemberLeft_Cell_C, Loop) == 0x0003D0, "Member 'UMemberLeft_Cell_C::Loop' has a wrong offset!");
static_assert(offsetof(UMemberLeft_Cell_C, In) == 0x0003D8, "Member 'UMemberLeft_Cell_C::In' has a wrong offset!");
static_assert(offsetof(UMemberLeft_Cell_C, All_MemberLeft_Cell) == 0x0003E0, "Member 'UMemberLeft_Cell_C::All_MemberLeft_Cell' has a wrong offset!");
static_assert(offsetof(UMemberLeft_Cell_C, Img_BG) == 0x0003E8, "Member 'UMemberLeft_Cell_C::Img_BG' has a wrong offset!");
static_assert(offsetof(UMemberLeft_Cell_C, Img_Chara) == 0x0003F0, "Member 'UMemberLeft_Cell_C::Img_Chara' has a wrong offset!");

}

