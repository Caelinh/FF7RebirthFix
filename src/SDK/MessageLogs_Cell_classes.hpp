#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MessageLogs_Cell

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MessageLogs_Cell.MessageLogs_Cell_C
// 0x00E8 (0x04B8 - 0x03D0)
class UMessageLogs_Cell_C final : public UEndMessageLogsCell
{
public:
	class UWidgetAnimation*                       Craft_Color;                                       // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Alert_Color;                                       // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Report_Color;                                      // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Quest_Color;                                       // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Main_Color;                                        // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_Color;                                     // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm02_Loop;                                        // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm03;                                             // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Default;                                       // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm02;                                             // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm01;                                             // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm00;                                             // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_MessageLogs_Cell;                              // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBorder*                             All_Nut_MessageLogs_Cell;                          // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_00;                                           // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndBillboard*                          Billboard_00;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon;                                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_00;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_01;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_02;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_03;                                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_04;                                     // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_05;                                     // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Line_00;                                // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_Line_01;                                // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Message;                                           // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Pnl_MessageLogs_Cell;                              // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              TxtBase;                                           // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              TxtBase_01;                                        // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MessageLogs_Cell_C">();
	}
	static class UMessageLogs_Cell_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMessageLogs_Cell_C>();
	}
};
static_assert(alignof(UMessageLogs_Cell_C) == 0x000008, "Wrong alignment on UMessageLogs_Cell_C");
static_assert(sizeof(UMessageLogs_Cell_C) == 0x0004B8, "Wrong size on UMessageLogs_Cell_C");
static_assert(offsetof(UMessageLogs_Cell_C, Craft_Color) == 0x0003D0, "Member 'UMessageLogs_Cell_C::Craft_Color' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Alert_Color) == 0x0003D8, "Member 'UMessageLogs_Cell_C::Alert_Color' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Report_Color) == 0x0003E0, "Member 'UMessageLogs_Cell_C::Report_Color' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Quest_Color) == 0x0003E8, "Member 'UMessageLogs_Cell_C::Quest_Color' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Main_Color) == 0x0003F0, "Member 'UMessageLogs_Cell_C::Main_Color' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Default_Color) == 0x0003F8, "Member 'UMessageLogs_Cell_C::Default_Color' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Anm02_Loop) == 0x000400, "Member 'UMessageLogs_Cell_C::Anm02_Loop' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Anm03) == 0x000408, "Member 'UMessageLogs_Cell_C::Anm03' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Anm_Default) == 0x000410, "Member 'UMessageLogs_Cell_C::Anm_Default' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Anm02) == 0x000418, "Member 'UMessageLogs_Cell_C::Anm02' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Anm01) == 0x000420, "Member 'UMessageLogs_Cell_C::Anm01' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Anm00) == 0x000428, "Member 'UMessageLogs_Cell_C::Anm00' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, All_MessageLogs_Cell) == 0x000430, "Member 'UMessageLogs_Cell_C::All_MessageLogs_Cell' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, All_Nut_MessageLogs_Cell) == 0x000438, "Member 'UMessageLogs_Cell_C::All_Nut_MessageLogs_Cell' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Base_00) == 0x000440, "Member 'UMessageLogs_Cell_C::Base_00' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Billboard_00) == 0x000448, "Member 'UMessageLogs_Cell_C::Billboard_00' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Icon) == 0x000450, "Member 'UMessageLogs_Cell_C::Icon' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Img_Effect_00) == 0x000458, "Member 'UMessageLogs_Cell_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Img_Effect_01) == 0x000460, "Member 'UMessageLogs_Cell_C::Img_Effect_01' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Img_Effect_02) == 0x000468, "Member 'UMessageLogs_Cell_C::Img_Effect_02' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Img_Effect_03) == 0x000470, "Member 'UMessageLogs_Cell_C::Img_Effect_03' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Img_Effect_04) == 0x000478, "Member 'UMessageLogs_Cell_C::Img_Effect_04' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Img_Effect_05) == 0x000480, "Member 'UMessageLogs_Cell_C::Img_Effect_05' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Img_Effect_Line_00) == 0x000488, "Member 'UMessageLogs_Cell_C::Img_Effect_Line_00' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Img_Effect_Line_01) == 0x000490, "Member 'UMessageLogs_Cell_C::Img_Effect_Line_01' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Message) == 0x000498, "Member 'UMessageLogs_Cell_C::Message' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, Pnl_MessageLogs_Cell) == 0x0004A0, "Member 'UMessageLogs_Cell_C::Pnl_MessageLogs_Cell' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, TxtBase) == 0x0004A8, "Member 'UMessageLogs_Cell_C::TxtBase' has a wrong offset!");
static_assert(offsetof(UMessageLogs_Cell_C, TxtBase_01) == 0x0004B0, "Member 'UMessageLogs_Cell_C::TxtBase_01' has a wrong offset!");

}

