#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KBDRt

#include "Basic.hpp"

#include "BonamikRt_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_AddOrSetWind
// 0x0050 (0x0050 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USQEX_BonamikWind_Asset*                Wind;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Offset;                                            // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0040(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableWorldWind;                                 // 0x0044(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Outer_0;                                           // 0x0048(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind) == 0x000010, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind) == 0x000050, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind, Component) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind::Component' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind, Wind) == 0x000008, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind::Wind' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind, Offset) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind::Offset' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind, Scale) == 0x000040, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind, bDisableWorldWind) == 0x000044, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind::bDisableWorldWind' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind, Outer_0) == 0x000048, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWind::Outer_0' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_AddOrSetWindDirect
// 0x02B0 (0x02B0 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSQEX_BonamikWind_Desc                 Wind;                                              // 0x0010(0x0260)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FTransform                             Offset;                                            // 0x0270(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x02A0(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableWorldWind;                                 // 0x02A4(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Outer_0;                                           // 0x02A8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect) == 0x000010, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect) == 0x0002B0, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect, Component) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect::Component' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect, Wind) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect::Wind' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect, Offset) == 0x000270, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect::Offset' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect, Scale) == 0x0002A0, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect, bDisableWorldWind) == 0x0002A4, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect::bDisableWorldWind' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect, Outer_0) == 0x0002A8, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWindDirect::Outer_0' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_AddOrSetWorldWind
// 0x0060 (0x0060 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSQEX_BonamikWind_Desc>         Winds;                                             // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Offset;                                            // 0x0020(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0050(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Outer_0;                                           // 0x0058(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind) == 0x000010, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind) == 0x000060, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind, Component) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind::Component' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind, Winds) == 0x000008, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind::Winds' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind, Offset) == 0x000020, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind::Offset' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind, Scale) == 0x000050, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind, Outer_0) == 0x000058, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWind::Outer_0' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_AddOrSetWorldWindModifier
// 0x0020 (0x0020 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USQEX_BonamikWind_Asset*                Wind;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Outer_0;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier) == 0x000020, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier, Component) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier::Component' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier, Wind) == 0x000008, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier::Wind' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier, Outer_0) == 0x000018, "Member 'SQEX_KBD_Component_SQEX_Bonamik_AddOrSetWorldWindModifier::Outer_0' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_Freeze
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_Freeze final
{
public:
	bool                                          FreezeState;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Groups;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_Freeze) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_Freeze");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_Freeze) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_Freeze");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_Freeze, FreezeState) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_Freeze::FreezeState' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_Freeze, Groups) == 0x000008, "Member 'SQEX_KBD_Component_SQEX_Bonamik_Freeze::Groups' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RemoveWind
// 0x0010 (0x0010 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_RemoveWind final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Outer_0;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_RemoveWind) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_RemoveWind");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_RemoveWind) == 0x000010, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_RemoveWind");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_RemoveWind, Component) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_RemoveWind::Component' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_RemoveWind, Outer_0) == 0x000008, "Member 'SQEX_KBD_Component_SQEX_Bonamik_RemoveWind::Outer_0' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_RemoveWorldWindModifier
// 0x0010 (0x0010 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_RemoveWorldWindModifier final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Outer_0;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_RemoveWorldWindModifier) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_RemoveWorldWindModifier");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_RemoveWorldWindModifier) == 0x000010, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_RemoveWorldWindModifier");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_RemoveWorldWindModifier, Component) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_RemoveWorldWindModifier::Component' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_RemoveWorldWindModifier, Outer_0) == 0x000008, "Member 'SQEX_KBD_Component_SQEX_Bonamik_RemoveWorldWindModifier::Outer_0' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_Reset
// 0x0002 (0x0002 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_Reset final
{
public:
	bool                                          bResetPose;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_Reset) == 0x000001, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_Reset");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_Reset) == 0x000002, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_Reset");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_Reset, bResetPose) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_Reset::bResetPose' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_Reset, PropagationMode) == 0x000001, "Member 'SQEX_KBD_Component_SQEX_Bonamik_Reset::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetAccurateGroundCollisionAll
// 0x0001 (0x0001 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetAccurateGroundCollisionAll final
{
public:
	bool                                          V;                                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetAccurateGroundCollisionAll) == 0x000001, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetAccurateGroundCollisionAll");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetAccurateGroundCollisionAll) == 0x000001, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetAccurateGroundCollisionAll");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetAccurateGroundCollisionAll, V) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetAccurateGroundCollisionAll::V' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetActorCentrifugalScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorCentrifugalScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetActorFictitiousForceScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorFictitiousForceScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetActorImpulseScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorImpulseScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetActorRotDragScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorRotDragScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetActorTransDragScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetActorTransDragScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetAutoDisable
// 0x0001 (0x0001 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetAutoDisable final
{
public:
	bool                                          AutoDisable;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetAutoDisable) == 0x000001, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetAutoDisable");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetAutoDisable) == 0x000001, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetAutoDisable");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetAutoDisable, AutoDisable) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetAutoDisable::AutoDisable' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetBodyConstraintDampingScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyConstraintDampingScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetBodyDampingScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyDampingScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetBodyDragScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyDragScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetBodyFrictionScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyFrictionScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetBodyGravityScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyGravityScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetBodyLiftScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyLiftScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetBodyRadiusScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyRadiusScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetBodyVelocityDampingScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetBodyVelocityDampingScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetChainRootCentrifugalScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootCentrifugalScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetChainRootFictitiousForceScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootFictitiousForceScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetChainRootImpulseScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootImpulseScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetChainRootRotDragScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootRotDragScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetChainRootTransDragScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetChainRootTransDragScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetEnable
// 0x0001 (0x0001 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetEnable final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetEnable) == 0x000001, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetEnable");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetEnable) == 0x000001, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetEnable");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetEnable, NewEnable) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetEnable::NewEnable' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetEnableExternalColliders
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetEnableExternalColliders final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          V;                                                 // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableExternalColliders) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetEnableExternalColliders");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableExternalColliders) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetEnableExternalColliders");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableExternalColliders, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetEnableExternalColliders::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableExternalColliders, V) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetEnableExternalColliders::V' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetEnableGroundCollision
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bNewEnable;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision, bNewEnable) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollision::bNewEnable' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetEnableGroundCollisionAll
// 0x0001 (0x0001 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollisionAll final
{
public:
	bool                                          bNewEnable;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollisionAll) == 0x000001, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollisionAll");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollisionAll) == 0x000001, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollisionAll");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollisionAll, bNewEnable) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetEnableGroundCollisionAll::bNewEnable' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetEnsemble
// 0x0008 (0x0008 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetEnsemble final
{
public:
	class FName                                   NewEnsemble;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetEnsemble) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetEnsemble");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetEnsemble) == 0x000008, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetEnsemble");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetEnsemble, NewEnsemble) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetEnsemble::NewEnsemble' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetFrozenState
// 0x0001 (0x0001 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetFrozenState final
{
public:
	bool                                          IsFrozen;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetFrozenState) == 0x000001, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetFrozenState");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetFrozenState) == 0x000001, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetFrozenState");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetFrozenState, IsFrozen) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetFrozenState::IsFrozen' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetGravity
// 0x000C (0x000C - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetGravity final
{
public:
	struct FVector                                Gravity;                                           // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetGravity) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetGravity");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetGravity) == 0x00000C, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetGravity");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetGravity, Gravity) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetGravity::Gravity' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetGroupFrozenState
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetGroupFrozenState final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          IsFrozen;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupFrozenState) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetGroupFrozenState");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupFrozenState) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetGroupFrozenState");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupFrozenState, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetGroupFrozenState::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupFrozenState, IsFrozen) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetGroupFrozenState::IsFrozen' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetGroupWeight
// 0x0020 (0x0020 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Weight;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeightChangeTime;                                  // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ResetWhenNonZeroWeight;                            // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight) == 0x000020, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight, Weight) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight::Weight' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight, WeightChangeTime) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight::WeightChangeTime' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight, ResetWhenNonZeroWeight) == 0x000018, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetGroupWeight::ResetWhenNonZeroWeight' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetInnerConeScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetInnerConeScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetLocalForceScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetLocalForceScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetMassScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetMassScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetMassScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetMassScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetMassScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetMassScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetMassScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetMassScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetMassScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetMassScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetMassScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetMassScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetOuterConeScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetOuterConeScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetParkRateScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetParkRateScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetPreRoll
// 0x0008 (0x0008 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll final
{
public:
	int32                                         Step;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll) == 0x000008, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll, Step) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll::Step' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll, PropagationMode) == 0x000004, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetPreRoll::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetSpeedRate
// 0x000C (0x000C - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate final
{
public:
	float                                         SpeedRate;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpeedRateChangeTime;                               // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate) == 0x00000C, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate, SpeedRate) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate::SpeedRate' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate, SpeedRateChangeTime) == 0x000004, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate::SpeedRateChangeTime' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate, PropagationMode) == 0x000008, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetSpeedRate::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetWeight
// 0x000C (0x000C - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetWeight final
{
public:
	float                                         Weight;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WeightChangeTime;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ResetWhenNonZeroWeight;                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AutoDisable;                                       // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetWeight) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetWeight");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetWeight) == 0x00000C, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetWeight");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetWeight, Weight) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetWeight::Weight' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetWeight, WeightChangeTime) == 0x000004, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetWeight::WeightChangeTime' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetWeight, ResetWhenNonZeroWeight) == 0x000008, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetWeight::ResetWhenNonZeroWeight' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetWeight, AutoDisable) == 0x000009, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetWeight::AutoDisable' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_SetWorldWindScale
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         Scale;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESQEX_Bonamik_PropagationMode                 PropagationMode;                                   // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale, Scale) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale::Scale' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale, PropagationMode) == 0x000014, "Member 'SQEX_KBD_Component_SQEX_Bonamik_SetWorldWindScale::PropagationMode' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_TurnOff
// 0x0020 (0x0020 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_TurnOff final
{
public:
	bool                                          preserveLatestResult;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Groups;                                            // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         BlendTime;                                         // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_TurnOff) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_TurnOff");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_TurnOff) == 0x000020, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_TurnOff");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_TurnOff, preserveLatestResult) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_TurnOff::preserveLatestResult' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_TurnOff, Groups) == 0x000008, "Member 'SQEX_KBD_Component_SQEX_Bonamik_TurnOff::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_TurnOff, BlendTime) == 0x000018, "Member 'SQEX_KBD_Component_SQEX_Bonamik_TurnOff::BlendTime' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_TurnOn
// 0x0018 (0x0018 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_TurnOn final
{
public:
	TArray<class FName>                           Groups;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         BlendTime;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_TurnOn) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_TurnOn");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_TurnOn) == 0x000018, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_TurnOn");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_TurnOn, Groups) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_TurnOn::Groups' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_TurnOn, BlendTime) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_Bonamik_TurnOn::BlendTime' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_KineDriver_SetEnable
// 0x000C (0x000C - 0x0000)
struct SQEX_KBD_Component_SQEX_KineDriver_SetEnable final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NewLabel;                                          // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_KineDriver_SetEnable) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_KineDriver_SetEnable");
static_assert(sizeof(SQEX_KBD_Component_SQEX_KineDriver_SetEnable) == 0x00000C, "Wrong size on SQEX_KBD_Component_SQEX_KineDriver_SetEnable");
static_assert(offsetof(SQEX_KBD_Component_SQEX_KineDriver_SetEnable, NewEnable) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_KineDriver_SetEnable::NewEnable' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_KineDriver_SetEnable, NewLabel) == 0x000004, "Member 'SQEX_KBD_Component_SQEX_KineDriver_SetEnable::NewLabel' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_KineDriver_SetEnableBone
// 0x0014 (0x0014 - 0x0000)
struct SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone final
{
public:
	bool                                          NewEnable;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoneName;                                          // 0x0004(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PauseRate;                                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyBonamik;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyChildren;                                    // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone");
static_assert(sizeof(SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone) == 0x000014, "Wrong size on SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone");
static_assert(offsetof(SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone, NewEnable) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone::NewEnable' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone, BoneName) == 0x000004, "Member 'SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone::BoneName' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone, PauseRate) == 0x00000C, "Member 'SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone::PauseRate' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone, bApplyBonamik) == 0x000010, "Member 'SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone::bApplyBonamik' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone, bApplyChildren) == 0x000011, "Member 'SQEX_KBD_Component_SQEX_KineDriver_SetEnableBone::bApplyChildren' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_KineDriver_SetParam
// 0x0050 (0x0050 - 0x0000)
struct SQEX_KBD_Component_SQEX_KineDriver_SetParam final
{
public:
	TMap<class FName, float>                      Params_0;                                          // 0x0000(0x0050)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_KineDriver_SetParam) == 0x000008, "Wrong alignment on SQEX_KBD_Component_SQEX_KineDriver_SetParam");
static_assert(sizeof(SQEX_KBD_Component_SQEX_KineDriver_SetParam) == 0x000050, "Wrong size on SQEX_KBD_Component_SQEX_KineDriver_SetParam");
static_assert(offsetof(SQEX_KBD_Component_SQEX_KineDriver_SetParam, Params_0) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_KineDriver_SetParam::Params_0' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetEnsemble
// 0x0008 (0x0008 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_GetEnsemble final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_GetEnsemble) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_GetEnsemble");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_GetEnsemble) == 0x000008, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_GetEnsemble");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_GetEnsemble, ReturnValue) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_GetEnsemble::ReturnValue' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetGravity
// 0x000C (0x000C - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_GetGravity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_GetGravity) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_GetGravity");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_GetGravity) == 0x00000C, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_GetGravity");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_GetGravity, ReturnValue) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_GetGravity::ReturnValue' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetGroupName
// 0x000C (0x000C - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_GetGroupName final
{
public:
	int32                                         idx;                                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_GetGroupName) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_GetGroupName");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_GetGroupName) == 0x00000C, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_GetGroupName");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_GetGroupName, idx) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_GetGroupName::idx' has a wrong offset!");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_GetGroupName, ReturnValue) == 0x000004, "Member 'SQEX_KBD_Component_SQEX_Bonamik_GetGroupName::ReturnValue' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetNumGroups
// 0x0004 (0x0004 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_GetNumGroups final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_GetNumGroups) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_GetNumGroups");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_GetNumGroups) == 0x000004, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_GetNumGroups");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_GetNumGroups, ReturnValue) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_GetNumGroups::ReturnValue' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_GetSpeedRate
// 0x0004 (0x0004 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_GetSpeedRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_GetSpeedRate) == 0x000004, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_GetSpeedRate");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_GetSpeedRate) == 0x000004, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_GetSpeedRate");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_GetSpeedRate, ReturnValue) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_GetSpeedRate::ReturnValue' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_IsAutoDisable
// 0x0001 (0x0001 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_IsAutoDisable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_IsAutoDisable) == 0x000001, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_IsAutoDisable");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_IsAutoDisable) == 0x000001, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_IsAutoDisable");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_IsAutoDisable, ReturnValue) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_IsAutoDisable::ReturnValue' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_Bonamik_IsEnable
// 0x0001 (0x0001 - 0x0000)
struct SQEX_KBD_Component_SQEX_Bonamik_IsEnable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_Bonamik_IsEnable) == 0x000001, "Wrong alignment on SQEX_KBD_Component_SQEX_Bonamik_IsEnable");
static_assert(sizeof(SQEX_KBD_Component_SQEX_Bonamik_IsEnable) == 0x000001, "Wrong size on SQEX_KBD_Component_SQEX_Bonamik_IsEnable");
static_assert(offsetof(SQEX_KBD_Component_SQEX_Bonamik_IsEnable, ReturnValue) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_Bonamik_IsEnable::ReturnValue' has a wrong offset!");

// Function KBDRt.SQEX_KBD_Component.SQEX_KineDriver_IsEnable
// 0x0001 (0x0001 - 0x0000)
struct SQEX_KBD_Component_SQEX_KineDriver_IsEnable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SQEX_KBD_Component_SQEX_KineDriver_IsEnable) == 0x000001, "Wrong alignment on SQEX_KBD_Component_SQEX_KineDriver_IsEnable");
static_assert(sizeof(SQEX_KBD_Component_SQEX_KineDriver_IsEnable) == 0x000001, "Wrong size on SQEX_KBD_Component_SQEX_KineDriver_IsEnable");
static_assert(offsetof(SQEX_KBD_Component_SQEX_KineDriver_IsEnable, ReturnValue) == 0x000000, "Member 'SQEX_KBD_Component_SQEX_KineDriver_IsEnable::ReturnValue' has a wrong offset!");

}

