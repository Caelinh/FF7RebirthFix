#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Command_Rivenge

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Command_Rivenge.Command_Rivenge_C
// 0x0170 (0x0568 - 0x03F8)
class UCommand_Rivenge_C final : public UEndCmdShortcutCell
{
public:
	class UWidgetAnimation*                       RivengeMode_Default;                               // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SwitchHighlight;                                   // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RivengeHeat_Loop;                                  // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Cmd_Running_Loop;                                  // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       E_BtnDisabled;                                     // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       E_Execution;                                       // 0x0428(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       E_Executable;                                      // 0x0430(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       E_Default;                                         // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Executable;                                      // 0x0440(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Off;                                             // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Default;                                         // 0x0450(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       C_Default;                                         // 0x0458(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_Default;                                         // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       A_Default;                                         // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Disabled;                                          // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Execution;                                       // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Charging_Loop;                                   // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       D_Charge;                                          // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       C_Pressed;                                         // 0x0490(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_Off;                                             // 0x0498(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_Running_Loop;                                    // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_Pressed;                                         // 0x04A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_From3To1;                                        // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_From2To3;                                        // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       B_From1To2;                                        // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       A_Running_Loop;                                    // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       A_Switch_OnOff;                                    // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndButton*                             Btn;                                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommand_Effect_00_C*                   Command_Effect_00;                                 // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Deco_Left;                                         // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_00;                                         // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_01;                                         // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_02;                                         // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Light;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndProgressBar*                        Gauge_00;                                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Bullet;                                       // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_SpinCounter_C*                    Icon_SpinCounter;                                  // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_B_01;                                          // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_B_02;                                          // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BtnBase_Off;                                   // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_BtnBase_On;                                    // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_Effect_00;                                     // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Img_Effect_Red;                                    // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_GaugeBG;                                       // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Number;                                        // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Command_Rivenge_C">();
	}
	static class UCommand_Rivenge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCommand_Rivenge_C>();
	}
};
static_assert(alignof(UCommand_Rivenge_C) == 0x000008, "Wrong alignment on UCommand_Rivenge_C");
static_assert(sizeof(UCommand_Rivenge_C) == 0x000568, "Wrong size on UCommand_Rivenge_C");
static_assert(offsetof(UCommand_Rivenge_C, RivengeMode_Default) == 0x0003F8, "Member 'UCommand_Rivenge_C::RivengeMode_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, In) == 0x000400, "Member 'UCommand_Rivenge_C::In' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, SwitchHighlight) == 0x000408, "Member 'UCommand_Rivenge_C::SwitchHighlight' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, RivengeHeat_Loop) == 0x000410, "Member 'UCommand_Rivenge_C::RivengeHeat_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Cmd_Running_Loop) == 0x000418, "Member 'UCommand_Rivenge_C::Cmd_Running_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, E_BtnDisabled) == 0x000420, "Member 'UCommand_Rivenge_C::E_BtnDisabled' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, E_Execution) == 0x000428, "Member 'UCommand_Rivenge_C::E_Execution' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, E_Executable) == 0x000430, "Member 'UCommand_Rivenge_C::E_Executable' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, E_Default) == 0x000438, "Member 'UCommand_Rivenge_C::E_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, D_Executable) == 0x000440, "Member 'UCommand_Rivenge_C::D_Executable' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, D_Off) == 0x000448, "Member 'UCommand_Rivenge_C::D_Off' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, D_Default) == 0x000450, "Member 'UCommand_Rivenge_C::D_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, C_Default) == 0x000458, "Member 'UCommand_Rivenge_C::C_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, B_Default) == 0x000460, "Member 'UCommand_Rivenge_C::B_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, A_Default) == 0x000468, "Member 'UCommand_Rivenge_C::A_Default' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Disabled) == 0x000470, "Member 'UCommand_Rivenge_C::Disabled' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, D_Execution) == 0x000478, "Member 'UCommand_Rivenge_C::D_Execution' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, D_Charging_Loop) == 0x000480, "Member 'UCommand_Rivenge_C::D_Charging_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, D_Charge) == 0x000488, "Member 'UCommand_Rivenge_C::D_Charge' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, C_Pressed) == 0x000490, "Member 'UCommand_Rivenge_C::C_Pressed' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, B_Off) == 0x000498, "Member 'UCommand_Rivenge_C::B_Off' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, B_Running_Loop) == 0x0004A0, "Member 'UCommand_Rivenge_C::B_Running_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, B_Pressed) == 0x0004A8, "Member 'UCommand_Rivenge_C::B_Pressed' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, B_From3To1) == 0x0004B0, "Member 'UCommand_Rivenge_C::B_From3To1' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, B_From2To3) == 0x0004B8, "Member 'UCommand_Rivenge_C::B_From2To3' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, B_From1To2) == 0x0004C0, "Member 'UCommand_Rivenge_C::B_From1To2' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, A_Running_Loop) == 0x0004C8, "Member 'UCommand_Rivenge_C::A_Running_Loop' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, A_Switch_OnOff) == 0x0004D0, "Member 'UCommand_Rivenge_C::A_Switch_OnOff' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Btn) == 0x0004D8, "Member 'UCommand_Rivenge_C::Btn' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Command_Effect_00) == 0x0004E0, "Member 'UCommand_Rivenge_C::Command_Effect_00' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Deco_Left) == 0x0004E8, "Member 'UCommand_Rivenge_C::Deco_Left' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Effect_00) == 0x0004F0, "Member 'UCommand_Rivenge_C::Effect_00' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Effect_01) == 0x0004F8, "Member 'UCommand_Rivenge_C::Effect_01' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Effect_02) == 0x000500, "Member 'UCommand_Rivenge_C::Effect_02' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Effect_Light) == 0x000508, "Member 'UCommand_Rivenge_C::Effect_Light' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Gauge_00) == 0x000510, "Member 'UCommand_Rivenge_C::Gauge_00' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Icon_Bullet) == 0x000518, "Member 'UCommand_Rivenge_C::Icon_Bullet' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Icon_SpinCounter) == 0x000520, "Member 'UCommand_Rivenge_C::Icon_SpinCounter' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Img_B_01) == 0x000528, "Member 'UCommand_Rivenge_C::Img_B_01' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Img_B_02) == 0x000530, "Member 'UCommand_Rivenge_C::Img_B_02' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Img_BtnBase_Off) == 0x000538, "Member 'UCommand_Rivenge_C::Img_BtnBase_Off' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Img_BtnBase_On) == 0x000540, "Member 'UCommand_Rivenge_C::Img_BtnBase_On' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Img_Effect_00) == 0x000548, "Member 'UCommand_Rivenge_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Img_Effect_Red) == 0x000550, "Member 'UCommand_Rivenge_C::Img_Effect_Red' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Img_GaugeBG) == 0x000558, "Member 'UCommand_Rivenge_C::Img_GaugeBG' has a wrong offset!");
static_assert(offsetof(UCommand_Rivenge_C, Txt_Number) == 0x000560, "Member 'UCommand_Rivenge_C::Txt_Number' has a wrong offset!");

}

