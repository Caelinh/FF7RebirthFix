#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: btsc_COMMON_ColosseumExcitement

#include "Basic.hpp"

#include "EndDataBase_structs.hpp"
#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass btsc_COMMON_ColosseumExcitement.btsc_COMMON_ColosseumExcitement_C
// 0x0010 (0x02D0 - 0x02C0)
class Abtsc_COMMON_ColosseumExcitement_C final : public AEndBattleSceneBlueprint
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_btsc_COMMON_ColosseumExcitement(int32 EntryPoint);
	void OnExitBattleScene();
	void OnIncrementBattleCountPerID(class FName CauserCharaName, class FName TargetCharaName, EEndBattleCountLogType Type, class FName ID, int32 Count);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"btsc_COMMON_ColosseumExcitement_C">();
	}
	static class Abtsc_COMMON_ColosseumExcitement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Abtsc_COMMON_ColosseumExcitement_C>();
	}
};
static_assert(alignof(Abtsc_COMMON_ColosseumExcitement_C) == 0x000008, "Wrong alignment on Abtsc_COMMON_ColosseumExcitement_C");
static_assert(sizeof(Abtsc_COMMON_ColosseumExcitement_C) == 0x0002D0, "Wrong size on Abtsc_COMMON_ColosseumExcitement_C");
static_assert(offsetof(Abtsc_COMMON_ColosseumExcitement_C, UberGraphFrame) == 0x0002C0, "Member 'Abtsc_COMMON_ColosseumExcitement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(Abtsc_COMMON_ColosseumExcitement_C, DefaultSceneRoot) == 0x0002C8, "Member 'Abtsc_COMMON_ColosseumExcitement_C::DefaultSceneRoot' has a wrong offset!");

}

