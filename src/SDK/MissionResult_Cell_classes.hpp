#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionResult_Cell

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MissionResult_Cell.MissionResult_Cell_C
// 0x0090 (0x0458 - 0x03C8)
class UMissionResult_Cell_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Quest_Failed;                                      // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VR_Failed;                                         // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Report_Failed;                                     // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Quest_Clear;                                       // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VR_Clear;                                          // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Report_Clear;                                      // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base_01;                                           // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Add;                                          // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Gradation;                                    // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              BaseFrame;                                         // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              CheckMark_Black;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              CheckMark_Effect;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              CheckMark_White;                                   // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              FailedMark;                                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Check_Black;                                   // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Check_White;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Effect_00;                                     // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              MissionClear_Add;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MissionResult_Cell_C">();
	}
	static class UMissionResult_Cell_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionResult_Cell_C>();
	}
};
static_assert(alignof(UMissionResult_Cell_C) == 0x000008, "Wrong alignment on UMissionResult_Cell_C");
static_assert(sizeof(UMissionResult_Cell_C) == 0x000458, "Wrong size on UMissionResult_Cell_C");
static_assert(offsetof(UMissionResult_Cell_C, Quest_Failed) == 0x0003C8, "Member 'UMissionResult_Cell_C::Quest_Failed' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, VR_Failed) == 0x0003D0, "Member 'UMissionResult_Cell_C::VR_Failed' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, Report_Failed) == 0x0003D8, "Member 'UMissionResult_Cell_C::Report_Failed' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, Quest_Clear) == 0x0003E0, "Member 'UMissionResult_Cell_C::Quest_Clear' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, VR_Clear) == 0x0003E8, "Member 'UMissionResult_Cell_C::VR_Clear' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, Report_Clear) == 0x0003F0, "Member 'UMissionResult_Cell_C::Report_Clear' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, Base_01) == 0x0003F8, "Member 'UMissionResult_Cell_C::Base_01' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, Base_Add) == 0x000400, "Member 'UMissionResult_Cell_C::Base_Add' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, Base_Gradation) == 0x000408, "Member 'UMissionResult_Cell_C::Base_Gradation' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, BaseFrame) == 0x000410, "Member 'UMissionResult_Cell_C::BaseFrame' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, CheckMark_Black) == 0x000418, "Member 'UMissionResult_Cell_C::CheckMark_Black' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, CheckMark_Effect) == 0x000420, "Member 'UMissionResult_Cell_C::CheckMark_Effect' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, CheckMark_White) == 0x000428, "Member 'UMissionResult_Cell_C::CheckMark_White' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, FailedMark) == 0x000430, "Member 'UMissionResult_Cell_C::FailedMark' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, Img_Check_Black) == 0x000438, "Member 'UMissionResult_Cell_C::Img_Check_Black' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, Img_Check_White) == 0x000440, "Member 'UMissionResult_Cell_C::Img_Check_White' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, Ims_Effect_00) == 0x000448, "Member 'UMissionResult_Cell_C::Ims_Effect_00' has a wrong offset!");
static_assert(offsetof(UMissionResult_Cell_C, MissionClear_Add) == 0x000450, "Member 'UMissionResult_Cell_C::MissionClear_Add' has a wrong offset!");

}

