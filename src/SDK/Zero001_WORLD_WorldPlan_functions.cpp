#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Zero001_WORLD_WorldPlan

#include "Basic.hpp"

#include "Zero001_WORLD_WorldPlan_classes.hpp"
#include "Zero001_WORLD_WorldPlan_parameters.hpp"


namespace SDK
{

// Function 0001-WORLD_WorldPlan.0001-WORLD_WorldPlan_C.OnSetChapterProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZero001_WORLD_WorldPlan_C::OnSetChapterProgress(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("0001-WORLD_WorldPlan_C", "OnSetChapterProgress");

	Params::Zero001_WORLD_WorldPlan_C_OnSetChapterProgress Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function 0001-WORLD_WorldPlan.0001-WORLD_WorldPlan_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AZero001_WORLD_WorldPlan_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("0001-WORLD_WorldPlan_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function 0001-WORLD_WorldPlan.0001-WORLD_WorldPlan_C.ExecuteUbergraph_0001-WORLD_WorldPlan
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZero001_WORLD_WorldPlan_C::ExecuteUbergraph_0001_WORLD_WorldPlan(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("0001-WORLD_WorldPlan_C", "ExecuteUbergraph_0001-WORLD_WorldPlan");

	Params::Zero001_WORLD_WorldPlan_C_ExecuteUbergraph_0001_WORLD_WorldPlan Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

