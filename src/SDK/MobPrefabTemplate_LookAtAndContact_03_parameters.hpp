#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MobPrefabTemplate_LookAtAndContact_03

#include "Basic.hpp"


namespace SDK::Params
{

// Function MobPrefabTemplate_LookAtAndContact_03.MobPrefabTemplate_LookAtAndContact_03_C.ExecuteUbergraph_MobPrefabTemplate_LookAtAndContact_03
// 0x0004 (0x0004 - 0x0000)
struct MobPrefabTemplate_LookAtAndContact_03_C_ExecuteUbergraph_MobPrefabTemplate_LookAtAndContact_03 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MobPrefabTemplate_LookAtAndContact_03_C_ExecuteUbergraph_MobPrefabTemplate_LookAtAndContact_03) == 0x000004, "Wrong alignment on MobPrefabTemplate_LookAtAndContact_03_C_ExecuteUbergraph_MobPrefabTemplate_LookAtAndContact_03");
static_assert(sizeof(MobPrefabTemplate_LookAtAndContact_03_C_ExecuteUbergraph_MobPrefabTemplate_LookAtAndContact_03) == 0x000004, "Wrong size on MobPrefabTemplate_LookAtAndContact_03_C_ExecuteUbergraph_MobPrefabTemplate_LookAtAndContact_03");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_ExecuteUbergraph_MobPrefabTemplate_LookAtAndContact_03, EntryPoint) == 0x000000, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_ExecuteUbergraph_MobPrefabTemplate_LookAtAndContact_03::EntryPoint' has a wrong offset!");

// Function MobPrefabTemplate_LookAtAndContact_03.MobPrefabTemplate_LookAtAndContact_03_C.GetContext
// 0x03B0 (0x03B0 - 0x0000)
struct MobPrefabTemplate_LookAtAndContact_03_C_GetContext final
{
public:
	class FName                                   MobId;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableLookAt;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableContact;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ContactDuringReaction;                             // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ForwardLeftMotion;                                 // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ForwardRightMotion;                                // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BackLeftMotion;                                    // 0x001C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BackRightMotion;                                   // 0x0024(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactBlendTime;                                  // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FName>                ContactPropagateMotionTable;                       // 0x0030(0x0050)(Parm, OutParm)
	TMap<class FName, class FName>                ContactPropagateForwardLeftMotionTable;            // 0x0080(0x0050)(Parm, OutParm)
	TMap<class FName, class FName>                ContactPropagateForwardRightMotionTable;           // 0x00D0(0x0050)(Parm, OutParm)
	TMap<class FName, class FName>                ContactPropagateBackLeftMotionTable;               // 0x0120(0x0050)(Parm, OutParm)
	TMap<class FName, class FName>                ContactPropagateBackRightMotionTable;              // 0x0170(0x0050)(Parm, OutParm)
	float                                         ContactPropagateBlendTime;                         // 0x01C0(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutMotionName;                              // 0x01C4(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactOutBlendTime;                               // 0x01CC(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutReplaceBaseMotionName;                   // 0x01D0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetContext_EnableLookAt;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetContext_EnableContact;                 // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetContext_ContactDuringReaction;         // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DB[0x1];                                      // 0x01DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetContext_ForwardLeftMotion;             // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContext_ForwardRightMotion;            // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContext_BackLeftMotion;                // 0x01EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContext_BackRightMotion;               // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetContext_ContactBlendTime;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FName>                CallFunc_GetContext_ContactPropagateMotionTable;   // 0x0200(0x0050)()
	TMap<class FName, class FName>                CallFunc_GetContext_ContactPropagateForwardLeftMotionTable; // 0x0250(0x0050)()
	TMap<class FName, class FName>                CallFunc_GetContext_ContactPropagateForwardRightMotionTable; // 0x02A0(0x0050)()
	TMap<class FName, class FName>                CallFunc_GetContext_ContactPropagateBackLeftMotionTable; // 0x02F0(0x0050)()
	TMap<class FName, class FName>                CallFunc_GetContext_ContactPropagateBackRightMotionTable; // 0x0340(0x0050)()
	float                                         CallFunc_GetContext_ContactPropagateBlendTime;     // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContext_ContactOutMotionName;          // 0x0394(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetContext_ContactOutBlendTime;           // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetContext_ContactOutReplaceBaseMotionName; // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext) == 0x000008, "Wrong alignment on MobPrefabTemplate_LookAtAndContact_03_C_GetContext");
static_assert(sizeof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext) == 0x0003B0, "Wrong size on MobPrefabTemplate_LookAtAndContact_03_C_GetContext");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, MobId) == 0x000000, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::MobId' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, EnableLookAt) == 0x000008, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::EnableLookAt' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, EnableContact) == 0x000009, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::EnableContact' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactDuringReaction) == 0x00000A, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactDuringReaction' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ForwardLeftMotion) == 0x00000C, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ForwardLeftMotion' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ForwardRightMotion) == 0x000014, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ForwardRightMotion' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, BackLeftMotion) == 0x00001C, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::BackLeftMotion' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, BackRightMotion) == 0x000024, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::BackRightMotion' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactBlendTime) == 0x00002C, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactBlendTime' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactPropagateMotionTable) == 0x000030, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactPropagateMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactPropagateForwardLeftMotionTable) == 0x000080, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactPropagateForwardLeftMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactPropagateForwardRightMotionTable) == 0x0000D0, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactPropagateForwardRightMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactPropagateBackLeftMotionTable) == 0x000120, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactPropagateBackLeftMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactPropagateBackRightMotionTable) == 0x000170, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactPropagateBackRightMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactPropagateBlendTime) == 0x0001C0, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactPropagateBlendTime' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactOutMotionName) == 0x0001C4, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactOutMotionName' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactOutBlendTime) == 0x0001CC, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactOutBlendTime' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, ContactOutReplaceBaseMotionName) == 0x0001D0, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::ContactOutReplaceBaseMotionName' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_EnableLookAt) == 0x0001D8, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_EnableLookAt' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_EnableContact) == 0x0001D9, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_EnableContact' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactDuringReaction) == 0x0001DA, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactDuringReaction' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ForwardLeftMotion) == 0x0001DC, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ForwardLeftMotion' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ForwardRightMotion) == 0x0001E4, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ForwardRightMotion' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_BackLeftMotion) == 0x0001EC, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_BackLeftMotion' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_BackRightMotion) == 0x0001F4, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_BackRightMotion' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactBlendTime) == 0x0001FC, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactBlendTime' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactPropagateMotionTable) == 0x000200, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactPropagateMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactPropagateForwardLeftMotionTable) == 0x000250, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactPropagateForwardLeftMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactPropagateForwardRightMotionTable) == 0x0002A0, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactPropagateForwardRightMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactPropagateBackLeftMotionTable) == 0x0002F0, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactPropagateBackLeftMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactPropagateBackRightMotionTable) == 0x000340, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactPropagateBackRightMotionTable' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactPropagateBlendTime) == 0x000390, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactPropagateBlendTime' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactOutMotionName) == 0x000394, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactOutMotionName' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactOutBlendTime) == 0x00039C, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactOutBlendTime' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_GetContext_ContactOutReplaceBaseMotionName) == 0x0003A0, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_GetContext_ContactOutReplaceBaseMotionName' has a wrong offset!");
static_assert(offsetof(MobPrefabTemplate_LookAtAndContact_03_C_GetContext, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0003A8, "Member 'MobPrefabTemplate_LookAtAndContact_03_C_GetContext::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

}

