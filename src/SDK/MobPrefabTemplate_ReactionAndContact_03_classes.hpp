#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MobPrefabTemplate_ReactionAndContact_03

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MobPrefabTemplate_ReactionAndContact_02_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MobPrefabTemplate_ReactionAndContact_03.MobPrefabTemplate_ReactionAndContact_03_C
// 0x0270 (0x0C60 - 0x09F0)
#pragma pack(push, 0x1)
class alignas(0x10) AMobPrefabTemplate_ReactionAndContact_03_C : public AMobPrefabTemplate_ReactionAndContact_02_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_MobPrefabTemplate_ReactionAndContact_03_C; // 0x09F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	TSoftClassPtr<class UClass>                   CharacterClass03;                                  // 0x09F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   LoopMotionName03;                                  // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   AttachActor03;                                     // 0x0A28(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   AttachSocketName03;                                // 0x0A50(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableReaction03;                                  // 0x0A58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableContact03;                                   // 0x0A59(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ContactDuringReaction03;                           // 0x0A5A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5B[0x1];                                      // 0x0A5B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ContactForwardLeftMotionName03;                    // 0x0A5C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactForwardRightMotionName03;                   // 0x0A64(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactBackLeftMotionName03;                       // 0x0A6C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactBackRightMotionName03;                      // 0x0A74(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactBlendTime03;                                // 0x0A7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FName>                ContactPropagateMotionTable03;                     // 0x0A80(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateForwardLeftMotionTable03;          // 0x0AD0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateForwardRightMotionTable03;         // 0x0B20(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateBackLeftMotionTable03;             // 0x0B70(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class FName>                ContactPropagateBackRightMotionTable03;            // 0x0BC0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         ContactPropagateBlendTime03;                       // 0x0C10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutMotionName03;                            // 0x0C14(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ContactOutBlendTime03;                             // 0x0C1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ContactOutReplaceBaseMotionName03;                 // 0x0C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionMotionName03;                              // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionBlendTime03;                               // 0x0C30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionReplaceBaseMotionName03;                   // 0x0C34(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionOutMotionName03;                           // 0x0C3C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReactionOutBlendTime03;                            // 0x0C44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ReactionOutReplaceBaseMotionName03;                // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReactionOnce03;                                    // 0x0C50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MobPrefabTemplate_ReactionAndContact_03(int32 EntryPoint);
	void OnPreUpdateRegistry();
	void GetContext(class FName MobId, bool* EnableReaction, bool* EnableContact, bool* ContactDuringReaction, class FName* ForwardLeftMotion, class FName* ForwardRightMotion, class FName* BackLeftMotion, class FName* BackRightMotion, float* ContactBlendTime, TMap<class FName, class FName>* ContactPropagateMotionTable, TMap<class FName, class FName>* ContactPropagateForwardLeftMotionTable, TMap<class FName, class FName>* ContactPropagateForwardRightMotionTable, TMap<class FName, class FName>* ContactPropagateBackLeftMotionTable, TMap<class FName, class FName>* ContactPropagateBackRightMotionTable, float* ContactPropagateBlendTime, class FName* ContactOutMotionName, float* ContactOutBlendTime, class FName* ContactOutReplaceBaseMotionName, class FName* Motion, float* BlendTime, class FName* ReplaceBaseMotion, class FName* ReactionOutMotionName, float* ReactionOutBlendTime, class FName* ReactionOutReplaceBaseMotionName, bool* PlayMotionOnce);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MobPrefabTemplate_ReactionAndContact_03_C">();
	}
	static class AMobPrefabTemplate_ReactionAndContact_03_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMobPrefabTemplate_ReactionAndContact_03_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AMobPrefabTemplate_ReactionAndContact_03_C) == 0x000010, "Wrong alignment on AMobPrefabTemplate_ReactionAndContact_03_C");
static_assert(sizeof(AMobPrefabTemplate_ReactionAndContact_03_C) == 0x000C60, "Wrong size on AMobPrefabTemplate_ReactionAndContact_03_C");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, UberGraphFrame_MobPrefabTemplate_ReactionAndContact_03_C) == 0x0009F0, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::UberGraphFrame_MobPrefabTemplate_ReactionAndContact_03_C' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, CharacterClass03) == 0x0009F8, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::CharacterClass03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, LoopMotionName03) == 0x000A20, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::LoopMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, AttachActor03) == 0x000A28, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::AttachActor03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, AttachSocketName03) == 0x000A50, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::AttachSocketName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, EnableReaction03) == 0x000A58, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::EnableReaction03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, EnableContact03) == 0x000A59, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::EnableContact03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactDuringReaction03) == 0x000A5A, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactDuringReaction03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactForwardLeftMotionName03) == 0x000A5C, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactForwardLeftMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactForwardRightMotionName03) == 0x000A64, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactForwardRightMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactBackLeftMotionName03) == 0x000A6C, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactBackLeftMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactBackRightMotionName03) == 0x000A74, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactBackRightMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactBlendTime03) == 0x000A7C, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactBlendTime03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactPropagateMotionTable03) == 0x000A80, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactPropagateMotionTable03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactPropagateForwardLeftMotionTable03) == 0x000AD0, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactPropagateForwardLeftMotionTable03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactPropagateForwardRightMotionTable03) == 0x000B20, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactPropagateForwardRightMotionTable03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactPropagateBackLeftMotionTable03) == 0x000B70, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactPropagateBackLeftMotionTable03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactPropagateBackRightMotionTable03) == 0x000BC0, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactPropagateBackRightMotionTable03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactPropagateBlendTime03) == 0x000C10, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactPropagateBlendTime03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactOutMotionName03) == 0x000C14, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactOutMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactOutBlendTime03) == 0x000C1C, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactOutBlendTime03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ContactOutReplaceBaseMotionName03) == 0x000C20, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ContactOutReplaceBaseMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ReactionMotionName03) == 0x000C28, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ReactionMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ReactionBlendTime03) == 0x000C30, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ReactionBlendTime03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ReactionReplaceBaseMotionName03) == 0x000C34, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ReactionReplaceBaseMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ReactionOutMotionName03) == 0x000C3C, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ReactionOutMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ReactionOutBlendTime03) == 0x000C44, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ReactionOutBlendTime03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ReactionOutReplaceBaseMotionName03) == 0x000C48, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ReactionOutReplaceBaseMotionName03' has a wrong offset!");
static_assert(offsetof(AMobPrefabTemplate_ReactionAndContact_03_C, ReactionOnce03) == 0x000C50, "Member 'AMobPrefabTemplate_ReactionAndContact_03_C::ReactionOnce03' has a wrong offset!");

}

