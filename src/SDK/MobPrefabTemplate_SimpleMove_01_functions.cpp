#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MobPrefabTemplate_SimpleMove_01

#include "Basic.hpp"

#include "MobPrefabTemplate_SimpleMove_01_classes.hpp"
#include "MobPrefabTemplate_SimpleMove_01_parameters.hpp"


namespace SDK
{

// Function MobPrefabTemplate_SimpleMove_01.MobPrefabTemplate_SimpleMove_01_C.ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMobPrefabTemplate_SimpleMove_01_C::ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobPrefabTemplate_SimpleMove_01_C", "ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01");

	Params::MobPrefabTemplate_SimpleMove_01_C_ExecuteUbergraph_MobPrefabTemplate_SimpleMove_01 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MobPrefabTemplate_SimpleMove_01.MobPrefabTemplate_SimpleMove_01_C.OnPreUpdateRegistry
// (Event, Public, BlueprintEvent)

void AMobPrefabTemplate_SimpleMove_01_C::OnPreUpdateRegistry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobPrefabTemplate_SimpleMove_01_C", "OnPreUpdateRegistry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MobPrefabTemplate_SimpleMove_01.MobPrefabTemplate_SimpleMove_01_C.CreateMobCommand
// (Event, Public, BlueprintEvent)

void AMobPrefabTemplate_SimpleMove_01_C::CreateMobCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobPrefabTemplate_SimpleMove_01_C", "CreateMobCommand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MobPrefabTemplate_SimpleMove_01.MobPrefabTemplate_SimpleMove_01_C.Initialize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             MobId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             CharacterClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
// class FName                             LoopMotionName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LoopMotionBlendFilter                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             AttachActor                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
// class FName                             AttachSocketName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AnimSetName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMobPrefabTemplate_SimpleMove_01_C::Initialize(class FName MobId, TSoftClassPtr<class UClass> CharacterClass, class FName LoopMotionName, class FName LoopMotionBlendFilter, const TSoftClassPtr<class UClass>& AttachActor, class FName AttachSocketName, class FName AnimSetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobPrefabTemplate_SimpleMove_01_C", "Initialize");

	Params::MobPrefabTemplate_SimpleMove_01_C_Initialize Parms{};

	Parms.MobId = MobId;
	Parms.CharacterClass = CharacterClass;
	Parms.LoopMotionName = LoopMotionName;
	Parms.LoopMotionBlendFilter = LoopMotionBlendFilter;
	Parms.AttachActor = AttachActor;
	Parms.AttachSocketName = AttachSocketName;
	Parms.AnimSetName = AnimSetName;

	UObject::ProcessEvent(Func, &Parms);
}

}

