#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vigilance_GaugeHead

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Vigilance_GaugeHead.Vigilance_GaugeHead_C
// 0x0020 (0x03E8 - 0x03C8)
class UVigilance_GaugeHead_C final : public UEndUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       Loop;                                              // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Effect_Light;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Light_Add;                                  // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Vigilance_GaugeHead(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Vigilance_GaugeHead_C">();
	}
	static class UVigilance_GaugeHead_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVigilance_GaugeHead_C>();
	}
};
static_assert(alignof(UVigilance_GaugeHead_C) == 0x000008, "Wrong alignment on UVigilance_GaugeHead_C");
static_assert(sizeof(UVigilance_GaugeHead_C) == 0x0003E8, "Wrong size on UVigilance_GaugeHead_C");
static_assert(offsetof(UVigilance_GaugeHead_C, UberGraphFrame) == 0x0003C8, "Member 'UVigilance_GaugeHead_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UVigilance_GaugeHead_C, Loop) == 0x0003D0, "Member 'UVigilance_GaugeHead_C::Loop' has a wrong offset!");
static_assert(offsetof(UVigilance_GaugeHead_C, Effect_Light) == 0x0003D8, "Member 'UVigilance_GaugeHead_C::Effect_Light' has a wrong offset!");
static_assert(offsetof(UVigilance_GaugeHead_C, Effect_Light_Add) == 0x0003E0, "Member 'UVigilance_GaugeHead_C::Effect_Light_Add' has a wrong offset!");

}

