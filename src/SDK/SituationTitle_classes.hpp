#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SituationTitle

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SituationTitle.SituationTitle_C
// 0x00F0 (0x04B8 - 0x03C8)
class USituationTitle_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Area_Out;                                          // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Area_In;                                           // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Location_Out;                                      // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Location_In;                                       // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Effect_Are_00;                                     // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Are_Particle;                               // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Are_Ring;                                   // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Loc_Ring;                                   // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_Particle;                                   // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_Particle_00;                                // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Particle_Head;                              // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_Main;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_Main_Add;                                 // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_Sub;                                      // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base_Sub_Add;                                  // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USituationTitle_Effect_C*               LifeStream;                                        // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              LifeStream2;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light_Horiz;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light_Move_Big;                                    // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light_Move_Small;                                  // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Light_Ver;                                         // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Area;                                         // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Area_Shadow;                                  // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Location;                                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Line_Location_Shadow;                              // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Particle1;                                         // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              UnderLine_00;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              UnderLine_01;                                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SituationTitle_C">();
	}
	static class USituationTitle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USituationTitle_C>();
	}
};
static_assert(alignof(USituationTitle_C) == 0x000008, "Wrong alignment on USituationTitle_C");
static_assert(sizeof(USituationTitle_C) == 0x0004B8, "Wrong size on USituationTitle_C");
static_assert(offsetof(USituationTitle_C, Area_Out) == 0x0003C8, "Member 'USituationTitle_C::Area_Out' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Area_In) == 0x0003D0, "Member 'USituationTitle_C::Area_In' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Location_Out) == 0x0003D8, "Member 'USituationTitle_C::Location_Out' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Location_In) == 0x0003E0, "Member 'USituationTitle_C::Location_In' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Out) == 0x0003E8, "Member 'USituationTitle_C::Out' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, In) == 0x0003F0, "Member 'USituationTitle_C::In' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Effect_Are_00) == 0x0003F8, "Member 'USituationTitle_C::Effect_Are_00' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Effect_Are_Particle) == 0x000400, "Member 'USituationTitle_C::Effect_Are_Particle' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Effect_Are_Ring) == 0x000408, "Member 'USituationTitle_C::Effect_Are_Ring' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Effect_Loc_Ring) == 0x000410, "Member 'USituationTitle_C::Effect_Loc_Ring' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Effect_Particle) == 0x000418, "Member 'USituationTitle_C::Effect_Particle' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Effect_Particle_00) == 0x000420, "Member 'USituationTitle_C::Effect_Particle_00' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Effect_Particle_Head) == 0x000428, "Member 'USituationTitle_C::Effect_Particle_Head' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Img_Base_Main) == 0x000430, "Member 'USituationTitle_C::Img_Base_Main' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Img_Base_Main_Add) == 0x000438, "Member 'USituationTitle_C::Img_Base_Main_Add' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Img_Base_Sub) == 0x000440, "Member 'USituationTitle_C::Img_Base_Sub' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Img_Base_Sub_Add) == 0x000448, "Member 'USituationTitle_C::Img_Base_Sub_Add' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, LifeStream) == 0x000450, "Member 'USituationTitle_C::LifeStream' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, LifeStream2) == 0x000458, "Member 'USituationTitle_C::LifeStream2' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Light_Horiz) == 0x000460, "Member 'USituationTitle_C::Light_Horiz' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Light_Move_Big) == 0x000468, "Member 'USituationTitle_C::Light_Move_Big' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Light_Move_Small) == 0x000470, "Member 'USituationTitle_C::Light_Move_Small' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Light_Ver) == 0x000478, "Member 'USituationTitle_C::Light_Ver' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Line_Area) == 0x000480, "Member 'USituationTitle_C::Line_Area' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Line_Area_Shadow) == 0x000488, "Member 'USituationTitle_C::Line_Area_Shadow' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Line_Location) == 0x000490, "Member 'USituationTitle_C::Line_Location' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Line_Location_Shadow) == 0x000498, "Member 'USituationTitle_C::Line_Location_Shadow' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, Particle1) == 0x0004A0, "Member 'USituationTitle_C::Particle1' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, UnderLine_00) == 0x0004A8, "Member 'USituationTitle_C::UnderLine_00' has a wrong offset!");
static_assert(offsetof(USituationTitle_C, UnderLine_01) == 0x0004B0, "Member 'USituationTitle_C::UnderLine_01' has a wrong offset!");

}

