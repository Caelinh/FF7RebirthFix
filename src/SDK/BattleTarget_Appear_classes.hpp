#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleTarget_Appear

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BattleTarget_Appear.BattleTarget_Appear_C
// 0x00D8 (0x04A0 - 0x03C8)
class UBattleTarget_Appear_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Disappear;                                         // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Appear;                                            // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Img_CrossLight;                                    // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_EffectLight;                                   // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_RingEffect;                                    // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_00a;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Lock_00b;                                      // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_01a;                                     // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_01b;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_02a;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_02b;                                     // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_03a;                                     // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_03b;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_04a;                                     // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Ims_Range_04b;                                     // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Parts_0;                                           // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Parts_1;                                           // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Parts_2;                                           // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Parts_3;                                           // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Parts_4;                                           // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Parts_5;                                           // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Parts_6;                                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCircle*                             Parts_7;                                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl_01;                                            // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl_02;                                            // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl_03;                                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl_04;                                            // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BattleTarget_Appear_C">();
	}
	static class UBattleTarget_Appear_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattleTarget_Appear_C>();
	}
};
static_assert(alignof(UBattleTarget_Appear_C) == 0x000008, "Wrong alignment on UBattleTarget_Appear_C");
static_assert(sizeof(UBattleTarget_Appear_C) == 0x0004A0, "Wrong size on UBattleTarget_Appear_C");
static_assert(offsetof(UBattleTarget_Appear_C, Disappear) == 0x0003C8, "Member 'UBattleTarget_Appear_C::Disappear' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Appear) == 0x0003D0, "Member 'UBattleTarget_Appear_C::Appear' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Img_CrossLight) == 0x0003D8, "Member 'UBattleTarget_Appear_C::Img_CrossLight' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Img_EffectLight) == 0x0003E0, "Member 'UBattleTarget_Appear_C::Img_EffectLight' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Img_RingEffect) == 0x0003E8, "Member 'UBattleTarget_Appear_C::Img_RingEffect' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Lock_00a) == 0x0003F0, "Member 'UBattleTarget_Appear_C::Ims_Lock_00a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Lock_00b) == 0x0003F8, "Member 'UBattleTarget_Appear_C::Ims_Lock_00b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Range_01a) == 0x000400, "Member 'UBattleTarget_Appear_C::Ims_Range_01a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Range_01b) == 0x000408, "Member 'UBattleTarget_Appear_C::Ims_Range_01b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Range_02a) == 0x000410, "Member 'UBattleTarget_Appear_C::Ims_Range_02a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Range_02b) == 0x000418, "Member 'UBattleTarget_Appear_C::Ims_Range_02b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Range_03a) == 0x000420, "Member 'UBattleTarget_Appear_C::Ims_Range_03a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Range_03b) == 0x000428, "Member 'UBattleTarget_Appear_C::Ims_Range_03b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Range_04a) == 0x000430, "Member 'UBattleTarget_Appear_C::Ims_Range_04a' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Ims_Range_04b) == 0x000438, "Member 'UBattleTarget_Appear_C::Ims_Range_04b' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Parts_0) == 0x000440, "Member 'UBattleTarget_Appear_C::Parts_0' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Parts_1) == 0x000448, "Member 'UBattleTarget_Appear_C::Parts_1' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Parts_2) == 0x000450, "Member 'UBattleTarget_Appear_C::Parts_2' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Parts_3) == 0x000458, "Member 'UBattleTarget_Appear_C::Parts_3' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Parts_4) == 0x000460, "Member 'UBattleTarget_Appear_C::Parts_4' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Parts_5) == 0x000468, "Member 'UBattleTarget_Appear_C::Parts_5' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Parts_6) == 0x000470, "Member 'UBattleTarget_Appear_C::Parts_6' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Parts_7) == 0x000478, "Member 'UBattleTarget_Appear_C::Parts_7' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Pnl_01) == 0x000480, "Member 'UBattleTarget_Appear_C::Pnl_01' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Pnl_02) == 0x000488, "Member 'UBattleTarget_Appear_C::Pnl_02' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Pnl_03) == 0x000490, "Member 'UBattleTarget_Appear_C::Pnl_03' has a wrong offset!");
static_assert(offsetof(UBattleTarget_Appear_C, Pnl_04) == 0x000498, "Member 'UBattleTarget_Appear_C::Pnl_04' has a wrong offset!");

}

