#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkillName_Enemy

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SkillName_Enemy.SkillName_Enemy_C
// 0x0068 (0x0430 - 0x03C8)
class USkillName_Enemy_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       SkillName_Out;                                     // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SkillName_In;                                      // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All;                                               // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        All_Nut;                                           // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Hrz_SkillName;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_NoGuard;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Base01;                                        // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_00;                                     // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_01;                                     // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_Effect_02;                                     // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Img_EnemySkill_Base_00;                            // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndCanvasPanel*                        Pnl_SkillName_Mask;                                // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_SkillName;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SkillName_Enemy_C">();
	}
	static class USkillName_Enemy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillName_Enemy_C>();
	}
};
static_assert(alignof(USkillName_Enemy_C) == 0x000008, "Wrong alignment on USkillName_Enemy_C");
static_assert(sizeof(USkillName_Enemy_C) == 0x000430, "Wrong size on USkillName_Enemy_C");
static_assert(offsetof(USkillName_Enemy_C, SkillName_Out) == 0x0003C8, "Member 'USkillName_Enemy_C::SkillName_Out' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, SkillName_In) == 0x0003D0, "Member 'USkillName_Enemy_C::SkillName_In' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, All) == 0x0003D8, "Member 'USkillName_Enemy_C::All' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, All_Nut) == 0x0003E0, "Member 'USkillName_Enemy_C::All_Nut' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, Hrz_SkillName) == 0x0003E8, "Member 'USkillName_Enemy_C::Hrz_SkillName' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, Icon_NoGuard) == 0x0003F0, "Member 'USkillName_Enemy_C::Icon_NoGuard' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, Img_Base01) == 0x0003F8, "Member 'USkillName_Enemy_C::Img_Base01' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, Img_Effect_00) == 0x000400, "Member 'USkillName_Enemy_C::Img_Effect_00' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, Img_Effect_01) == 0x000408, "Member 'USkillName_Enemy_C::Img_Effect_01' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, Img_Effect_02) == 0x000410, "Member 'USkillName_Enemy_C::Img_Effect_02' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, Img_EnemySkill_Base_00) == 0x000418, "Member 'USkillName_Enemy_C::Img_EnemySkill_Base_00' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, Pnl_SkillName_Mask) == 0x000420, "Member 'USkillName_Enemy_C::Pnl_SkillName_Mask' has a wrong offset!");
static_assert(offsetof(USkillName_Enemy_C, Txt_SkillName) == 0x000428, "Member 'USkillName_Enemy_C::Txt_SkillName' has a wrong offset!");

}

