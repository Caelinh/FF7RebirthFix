#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GSPlayerRank

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GSPlayerRank.GSPlayerRank_C
// 0x0070 (0x0438 - 0x03C8)
class UGSPlayerRank_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RankUp;                                            // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base_00;                                           // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_RankUp;                                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Star;                                         // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_Light_00a;                                  // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_Light_00b;                                  // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_Light_01a;                                  // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_Light_01b;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_Light_02a;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Effect_Light_02b;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Reflection;                                 // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Effect_Star;                                       // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GSPlayerRank_C">();
	}
	static class UGSPlayerRank_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGSPlayerRank_C>();
	}
};
static_assert(alignof(UGSPlayerRank_C) == 0x000008, "Wrong alignment on UGSPlayerRank_C");
static_assert(sizeof(UGSPlayerRank_C) == 0x000438, "Wrong size on UGSPlayerRank_C");
static_assert(offsetof(UGSPlayerRank_C, Out) == 0x0003C8, "Member 'UGSPlayerRank_C::Out' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, RankUp) == 0x0003D0, "Member 'UGSPlayerRank_C::RankUp' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, In) == 0x0003D8, "Member 'UGSPlayerRank_C::In' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Base_00) == 0x0003E0, "Member 'UGSPlayerRank_C::Base_00' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Base_RankUp) == 0x0003E8, "Member 'UGSPlayerRank_C::Base_RankUp' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Base_Star) == 0x0003F0, "Member 'UGSPlayerRank_C::Base_Star' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Effect_Light_00a) == 0x0003F8, "Member 'UGSPlayerRank_C::Effect_Light_00a' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Effect_Light_00b) == 0x000400, "Member 'UGSPlayerRank_C::Effect_Light_00b' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Effect_Light_01a) == 0x000408, "Member 'UGSPlayerRank_C::Effect_Light_01a' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Effect_Light_01b) == 0x000410, "Member 'UGSPlayerRank_C::Effect_Light_01b' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Effect_Light_02a) == 0x000418, "Member 'UGSPlayerRank_C::Effect_Light_02a' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Effect_Light_02b) == 0x000420, "Member 'UGSPlayerRank_C::Effect_Light_02b' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Effect_Reflection) == 0x000428, "Member 'UGSPlayerRank_C::Effect_Reflection' has a wrong offset!");
static_assert(offsetof(UGSPlayerRank_C, Effect_Star) == 0x000430, "Member 'UGSPlayerRank_C::Effect_Star' has a wrong offset!");

}

