#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EN0000_00_SecuritySoldier_Standard_AIBP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass EN0000_00_SecuritySoldier_Standard_3100-FOREA_AIBP.EN0000_00_SecuritySoldier_Standard_3100-FOREA_AIBP_C
// 0x0010 (0x1050 - 0x1040)
class AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C final : public AEN0000_00_SecuritySoldier_Standard_AIBP_C
{
public:
	uint8                                         Pad_1031[0x7];                                     // 0x1031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_EN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C; // 0x1038(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	bool                                          IsRightOfAttack;                                   // 0x1040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TemporaryRightOfAttack;                            // 0x1041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_EN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void AsyncCheckConditionInvoke();
	void OnStartActionRestrictionInvoke();
	void OnEndActionRestrictionInvoke();
	void OnAITimerInvoke(class FName ID);
	void OnActionTopPriorityInvoke(class FName TopPriorityActionId);
	void OnStartMoveDefinitionInvoke(class FName MoveDefTag);
	void OnExtraConditionInvoke(class FName ConditionTag);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EN0000_00_SecuritySoldier_Standard_3100-FOREA_AIBP_C">();
	}
	static class AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C>();
	}
};
static_assert(alignof(AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C) == 0x000010, "Wrong alignment on AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C");
static_assert(sizeof(AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C) == 0x001050, "Wrong size on AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C, UberGraphFrame_EN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C) == 0x001038, "Member 'AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C::UberGraphFrame_EN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C, IsRightOfAttack) == 0x001040, "Member 'AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C::IsRightOfAttack' has a wrong offset!");
static_assert(offsetof(AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C, TemporaryRightOfAttack) == 0x001041, "Member 'AEN0000_00_SecuritySoldier_Standard_3100_FOREA_AIBP_C::TemporaryRightOfAttack' has a wrong offset!");

}

