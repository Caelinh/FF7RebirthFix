#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FastTravel_Cell

#include "Basic.hpp"

#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FastTravel_Cell.FastTravel_Cell_C
// 0x00A8 (0x0470 - 0x03C8)
class UFastTravel_Cell_C final : public UEndUserWidget
{
public:
	class UWidgetAnimation*                       SecondLayer;                                       // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TopLayer;                                          // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ClosedHover;                                       // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NotReleaseHover;                                   // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Closed;                                            // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NotRelease;                                        // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BtnCurrentHover;                                   // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BtnNormal;                                         // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BtnCurrent;                                        // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BtnNormalHover;                                    // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Base_Current;                                      // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Base_Hover;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndButton*                             Btn_List;                                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Current_set;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIcon_Face_C*                           Icon_Face;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_New;                                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Icon_Notice;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMainMenu_Icon_Now_C*                   Icon_Now;                                          // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImageSet*                           Icon_Point_Set;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Name;                                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndTextBlock*                          Txt_Value_1;                                       // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FastTravel_Cell_C">();
	}
	static class UFastTravel_Cell_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFastTravel_Cell_C>();
	}
};
static_assert(alignof(UFastTravel_Cell_C) == 0x000008, "Wrong alignment on UFastTravel_Cell_C");
static_assert(sizeof(UFastTravel_Cell_C) == 0x000470, "Wrong size on UFastTravel_Cell_C");
static_assert(offsetof(UFastTravel_Cell_C, SecondLayer) == 0x0003C8, "Member 'UFastTravel_Cell_C::SecondLayer' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, TopLayer) == 0x0003D0, "Member 'UFastTravel_Cell_C::TopLayer' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, ClosedHover) == 0x0003D8, "Member 'UFastTravel_Cell_C::ClosedHover' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, NotReleaseHover) == 0x0003E0, "Member 'UFastTravel_Cell_C::NotReleaseHover' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Closed) == 0x0003E8, "Member 'UFastTravel_Cell_C::Closed' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, NotRelease) == 0x0003F0, "Member 'UFastTravel_Cell_C::NotRelease' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, BtnCurrentHover) == 0x0003F8, "Member 'UFastTravel_Cell_C::BtnCurrentHover' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, BtnNormal) == 0x000400, "Member 'UFastTravel_Cell_C::BtnNormal' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, BtnCurrent) == 0x000408, "Member 'UFastTravel_Cell_C::BtnCurrent' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, BtnNormalHover) == 0x000410, "Member 'UFastTravel_Cell_C::BtnNormalHover' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Base_Current) == 0x000418, "Member 'UFastTravel_Cell_C::Base_Current' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Base_Hover) == 0x000420, "Member 'UFastTravel_Cell_C::Base_Hover' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Btn_List) == 0x000428, "Member 'UFastTravel_Cell_C::Btn_List' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Icon_Current_set) == 0x000430, "Member 'UFastTravel_Cell_C::Icon_Current_set' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Icon_Face) == 0x000438, "Member 'UFastTravel_Cell_C::Icon_Face' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Icon_New) == 0x000440, "Member 'UFastTravel_Cell_C::Icon_New' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Icon_Notice) == 0x000448, "Member 'UFastTravel_Cell_C::Icon_Notice' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Icon_Now) == 0x000450, "Member 'UFastTravel_Cell_C::Icon_Now' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Icon_Point_Set) == 0x000458, "Member 'UFastTravel_Cell_C::Icon_Point_Set' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Txt_Name) == 0x000460, "Member 'UFastTravel_Cell_C::Txt_Name' has a wrong offset!");
static_assert(offsetof(UFastTravel_Cell_C, Txt_Value_1) == 0x000468, "Member 'UFastTravel_Cell_C::Txt_Value_1' has a wrong offset!");

}

