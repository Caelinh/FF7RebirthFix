#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Map_Cursor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EndGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Map_Cursor.Map_Cursor_C
// 0x0048 (0x0410 - 0x03C8)
class UMap_Cursor_C final : public UEndUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UWidgetAnimation*                       Loop;                                              // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Menu_In;                                           // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UEndImage*                              Cursor_00;                                         // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_01;                                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_B;                                          // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_L;                                          // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_R;                                          // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEndImage*                              Cursor_T;                                          // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Map_Cursor(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Map_Cursor_C">();
	}
	static class UMap_Cursor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMap_Cursor_C>();
	}
};
static_assert(alignof(UMap_Cursor_C) == 0x000008, "Wrong alignment on UMap_Cursor_C");
static_assert(sizeof(UMap_Cursor_C) == 0x000410, "Wrong size on UMap_Cursor_C");
static_assert(offsetof(UMap_Cursor_C, UberGraphFrame) == 0x0003C8, "Member 'UMap_Cursor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMap_Cursor_C, Loop) == 0x0003D0, "Member 'UMap_Cursor_C::Loop' has a wrong offset!");
static_assert(offsetof(UMap_Cursor_C, Menu_In) == 0x0003D8, "Member 'UMap_Cursor_C::Menu_In' has a wrong offset!");
static_assert(offsetof(UMap_Cursor_C, Cursor_00) == 0x0003E0, "Member 'UMap_Cursor_C::Cursor_00' has a wrong offset!");
static_assert(offsetof(UMap_Cursor_C, Cursor_01) == 0x0003E8, "Member 'UMap_Cursor_C::Cursor_01' has a wrong offset!");
static_assert(offsetof(UMap_Cursor_C, Cursor_B) == 0x0003F0, "Member 'UMap_Cursor_C::Cursor_B' has a wrong offset!");
static_assert(offsetof(UMap_Cursor_C, Cursor_L) == 0x0003F8, "Member 'UMap_Cursor_C::Cursor_L' has a wrong offset!");
static_assert(offsetof(UMap_Cursor_C, Cursor_R) == 0x000400, "Member 'UMap_Cursor_C::Cursor_R' has a wrong offset!");
static_assert(offsetof(UMap_Cursor_C, Cursor_T) == 0x000408, "Member 'UMap_Cursor_C::Cursor_T' has a wrong offset!");

}

